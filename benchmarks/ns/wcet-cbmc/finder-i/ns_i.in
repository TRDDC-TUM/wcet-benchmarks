/* This file contains inserted assert macro statements. It is given to CBMC. */
unsigned int timeElapsed = 0;
int keys [ 5 ] [ 5 ] [ 5 ] [ 5 ] 
#ifndef __INPVARS_EXE__
=  
{

	{

		{

			{
				0 , 0 , 0 , 0 , 0 
			}
			, 
				{
					0 , 0 , 0 , 0 , 0 
				}
			, 
				{
					0 , 0 , 0 , 0 , 0 
				}
			, 
				{
					0 , 0 , 0 , 0 , 0 
				}
			, 
				{
					0 , 0 , 0 , 0 , 0 
				}

		}
		, 
			{

				{
					0 , 0 , 0 , 0 , 0 
				}
				, 
					{
						0 , 0 , 0 , 0 , 0 
					}
				, 
					{
						0 , 0 , 0 , 0 , 0 
					}
				, 
					{
						0 , 0 , 0 , 0 , 0 
					}
				, 
					{
						0 , 0 , 0 , 0 , 0 
					}

			}
		, 
			{

				{
					0 , 0 , 0 , 0 , 0 
				}
				, 
					{
						0 , 0 , 0 , 0 , 0 
					}
				, 
					{
						0 , 0 , 0 , 0 , 0 
					}
				, 
					{
						0 , 0 , 0 , 0 , 0 
					}
				, 
					{
						0 , 0 , 0 , 0 , 0 
					}

			}
		, 
			{

				{
					0 , 0 , 0 , 0 , 0 
				}
				, 
					{
						0 , 0 , 0 , 0 , 0 
					}
				, 
					{
						0 , 0 , 0 , 0 , 0 
					}
				, 
					{
						0 , 0 , 0 , 0 , 0 
					}
				, 
					{
						0 , 0 , 0 , 0 , 0 
					}

			}
		, 
			{

				{
					0 , 0 , 0 , 0 , 0 
				}
				, 
					{
						0 , 0 , 0 , 0 , 0 
					}
				, 
					{
						0 , 0 , 0 , 0 , 0 
					}
				, 
					{
						0 , 0 , 0 , 0 , 0 
					}
				, 
					{
						0 , 0 , 0 , 0 , 0 
					}

			}

	}
	, 
		{

			{

				{
					1 , 1 , 1 , 1 , 1 
				}
				, 
					{
						1 , 1 , 1 , 1 , 1 
					}
				, 
					{
						1 , 1 , 1 , 1 , 1 
					}
				, 
					{
						1 , 1 , 1 , 1 , 1 
					}
				, 
					{
						1 , 1 , 1 , 1 , 1 
					}

			}
			, 
				{

					{
						1 , 1 , 1 , 1 , 1 
					}
					, 
						{
							1 , 1 , 1 , 1 , 1 
						}
					, 
						{
							1 , 1 , 1 , 1 , 1 
						}
					, 
						{
							1 , 1 , 1 , 1 , 1 
						}
					, 
						{
							1 , 1 , 1 , 1 , 1 
						}

				}
			, 
				{

					{
						1 , 1 , 1 , 1 , 1 
					}
					, 
						{
							1 , 1 , 1 , 1 , 1 
						}
					, 
						{
							1 , 1 , 1 , 1 , 1 
						}
					, 
						{
							1 , 1 , 1 , 1 , 1 
						}
					, 
						{
							1 , 1 , 1 , 1 , 1 
						}

				}
			, 
				{

					{
						1 , 1 , 1 , 1 , 1 
					}
					, 
						{
							1 , 1 , 1 , 1 , 1 
						}
					, 
						{
							1 , 1 , 1 , 1 , 1 
						}
					, 
						{
							1 , 1 , 1 , 1 , 1 
						}
					, 
						{
							1 , 1 , 1 , 1 , 1 
						}

				}
			, 
				{

					{
						1 , 1 , 1 , 1 , 1 
					}
					, 
						{
							1 , 1 , 1 , 1 , 1 
						}
					, 
						{
							1 , 1 , 1 , 1 , 1 
						}
					, 
						{
							1 , 1 , 1 , 1 , 1 
						}
					, 
						{
							1 , 1 , 1 , 1 , 1 
						}

				}

		}
	, 
		{

			{

				{
					2 , 2 , 2 , 2 , 2 
				}
				, 
					{
						2 , 2 , 2 , 2 , 2 
					}
				, 
					{
						2 , 2 , 2 , 2 , 2 
					}
				, 
					{
						2 , 2 , 2 , 2 , 2 
					}
				, 
					{
						2 , 2 , 2 , 2 , 2 
					}

			}
			, 
				{

					{
						2 , 2 , 2 , 2 , 2 
					}
					, 
						{
							2 , 2 , 2 , 2 , 2 
						}
					, 
						{
							2 , 2 , 2 , 2 , 2 
						}
					, 
						{
							2 , 2 , 2 , 2 , 2 
						}
					, 
						{
							2 , 2 , 2 , 2 , 2 
						}

				}
			, 
				{

					{
						2 , 2 , 2 , 2 , 2 
					}
					, 
						{
							2 , 2 , 2 , 2 , 2 
						}
					, 
						{
							2 , 2 , 2 , 2 , 2 
						}
					, 
						{
							2 , 2 , 2 , 2 , 2 
						}
					, 
						{
							2 , 2 , 2 , 2 , 2 
						}

				}
			, 
				{

					{
						2 , 2 , 2 , 2 , 2 
					}
					, 
						{
							2 , 2 , 2 , 2 , 2 
						}
					, 
						{
							2 , 2 , 2 , 2 , 2 
						}
					, 
						{
							2 , 2 , 2 , 2 , 2 
						}
					, 
						{
							2 , 2 , 2 , 2 , 2 
						}

				}
			, 
				{

					{
						2 , 2 , 2 , 2 , 2 
					}
					, 
						{
							2 , 2 , 2 , 2 , 2 
						}
					, 
						{
							2 , 2 , 2 , 2 , 2 
						}
					, 
						{
							2 , 2 , 2 , 2 , 2 
						}
					, 
						{
							2 , 2 , 2 , 2 , 2 
						}

				}

		}
	, 
		{

			{

				{
					3 , 3 , 3 , 3 , 3 
				}
				, 
					{
						3 , 3 , 3 , 3 , 3 
					}
				, 
					{
						3 , 3 , 3 , 3 , 3 
					}
				, 
					{
						3 , 3 , 3 , 3 , 3 
					}
				, 
					{
						3 , 3 , 3 , 3 , 3 
					}

			}
			, 
				{

					{
						3 , 3 , 3 , 3 , 3 
					}
					, 
						{
							3 , 3 , 3 , 3 , 3 
						}
					, 
						{
							3 , 3 , 3 , 3 , 3 
						}
					, 
						{
							3 , 3 , 3 , 3 , 3 
						}
					, 
						{
							3 , 3 , 3 , 3 , 3 
						}

				}
			, 
				{

					{
						3 , 3 , 3 , 3 , 3 
					}
					, 
						{
							3 , 3 , 3 , 3 , 3 
						}
					, 
						{
							3 , 3 , 3 , 3 , 3 
						}
					, 
						{
							3 , 3 , 3 , 3 , 3 
						}
					, 
						{
							3 , 3 , 3 , 3 , 3 
						}

				}
			, 
				{

					{
						3 , 3 , 3 , 3 , 3 
					}
					, 
						{
							3 , 3 , 3 , 3 , 3 
						}
					, 
						{
							3 , 3 , 3 , 3 , 3 
						}
					, 
						{
							3 , 3 , 3 , 3 , 3 
						}
					, 
						{
							3 , 3 , 3 , 3 , 3 
						}

				}
			, 
				{

					{
						3 , 3 , 3 , 3 , 3 
					}
					, 
						{
							3 , 3 , 3 , 3 , 3 
						}
					, 
						{
							3 , 3 , 3 , 3 , 3 
						}
					, 
						{
							3 , 3 , 3 , 3 , 3 
						}
					, 
						{
							3 , 3 , 3 , 3 , 3 
						}

				}

		}
	, 
		{

			{

				{
					4 , 4 , 4 , 4 , 4 
				}
				, 
					{
						4 , 4 , 4 , 4 , 4 
					}
				, 
					{
						4 , 4 , 4 , 4 , 4 
					}
				, 
					{
						4 , 4 , 4 , 4 , 4 
					}
				, 
					{
						4 , 4 , 4 , 4 , 4 
					}

			}
			, 
				{

					{
						4 , 4 , 4 , 4 , 4 
					}
					, 
						{
							4 , 4 , 4 , 4 , 4 
						}
					, 
						{
							4 , 4 , 4 , 4 , 4 
						}
					, 
						{
							4 , 4 , 4 , 4 , 4 
						}
					, 
						{
							4 , 4 , 4 , 4 , 4 
						}

				}
			, 
				{

					{
						4 , 4 , 4 , 4 , 4 
					}
					, 
						{
							4 , 4 , 4 , 4 , 4 
						}
					, 
						{
							4 , 4 , 4 , 4 , 4 
						}
					, 
						{
							4 , 4 , 4 , 4 , 4 
						}
					, 
						{
							4 , 4 , 4 , 4 , 4 
						}

				}
			, 
				{

					{
						4 , 4 , 4 , 4 , 4 
					}
					, 
						{
							4 , 4 , 4 , 4 , 4 
						}
					, 
						{
							4 , 4 , 4 , 4 , 4 
						}
					, 
						{
							4 , 4 , 4 , 4 , 4 
						}
					, 
						{
							4 , 4 , 4 , 4 , 4 
						}

				}
			, 
				{

					{
						4 , 4 , 4 , 4 , 4 
					}
					, 
						{
							4 , 4 , 4 , 4 , 4 
						}
					, 
						{
							4 , 4 , 4 , 4 , 4 
						}
					, 
						{
							4 , 4 , 4 , 4 , 4 
						}
					, 
						{
							4 , 4 , 4 , 4 , 400 
						}

				}

		}

}

#endif
;
int answer [ 5 ] [ 5 ] [ 5 ] [ 5 ] 
#ifndef __INPVARS_EXE__
=  
{

	{

		{

			{
				123 , 123 , 123 , 123 , 123 
			}
			, 
				{
					123 , 123 , 123 , 123 , 123 
				}
			, 
				{
					123 , 123 , 123 , 123 , 123 
				}
			, 
				{
					123 , 123 , 123 , 123 , 123 
				}
			, 
				{
					123 , 123 , 123 , 123 , 123 
				}

		}
		, 
			{

				{
					123 , 123 , 123 , 123 , 123 
				}
				, 
					{
						123 , 123 , 123 , 123 , 123 
					}
				, 
					{
						123 , 123 , 123 , 123 , 123 
					}
				, 
					{
						123 , 123 , 123 , 123 , 123 
					}
				, 
					{
						123 , 123 , 123 , 123 , 123 
					}

			}
		, 
			{

				{
					123 , 123 , 123 , 123 , 123 
				}
				, 
					{
						123 , 123 , 123 , 123 , 123 
					}
				, 
					{
						123 , 123 , 123 , 123 , 123 
					}
				, 
					{
						123 , 123 , 123 , 123 , 123 
					}
				, 
					{
						123 , 123 , 123 , 123 , 123 
					}

			}
		, 
			{

				{
					123 , 123 , 123 , 123 , 123 
				}
				, 
					{
						123 , 123 , 123 , 123 , 123 
					}
				, 
					{
						123 , 123 , 123 , 123 , 123 
					}
				, 
					{
						123 , 123 , 123 , 123 , 123 
					}
				, 
					{
						123 , 123 , 123 , 123 , 123 
					}

			}
		, 
			{

				{
					123 , 123 , 123 , 123 , 123 
				}
				, 
					{
						123 , 123 , 123 , 123 , 123 
					}
				, 
					{
						123 , 123 , 123 , 123 , 123 
					}
				, 
					{
						123 , 123 , 123 , 123 , 123 
					}
				, 
					{
						123 , 123 , 123 , 123 , 123 
					}

			}

	}
	, 
		{

			{

				{
					234 , 234 , 234 , 234 , 234 
				}
				, 
					{
						234 , 234 , 234 , 234 , 234 
					}
				, 
					{
						234 , 234 , 234 , 234 , 234 
					}
				, 
					{
						234 , 234 , 234 , 234 , 234 
					}
				, 
					{
						234 , 234 , 234 , 234 , 234 
					}

			}
			, 
				{

					{
						234 , 234 , 234 , 234 , 234 
					}
					, 
						{
							234 , 234 , 234 , 234 , 234 
						}
					, 
						{
							234 , 234 , 234 , 234 , 234 
						}
					, 
						{
							234 , 234 , 234 , 234 , 234 
						}
					, 
						{
							234 , 234 , 234 , 234 , 234 
						}

				}
			, 
				{

					{
						234 , 234 , 234 , 234 , 234 
					}
					, 
						{
							234 , 234 , 234 , 234 , 234 
						}
					, 
						{
							234 , 234 , 234 , 234 , 234 
						}
					, 
						{
							234 , 234 , 234 , 234 , 234 
						}
					, 
						{
							234 , 234 , 234 , 234 , 234 
						}

				}
			, 
				{

					{
						234 , 234 , 234 , 234 , 234 
					}
					, 
						{
							234 , 234 , 234 , 234 , 234 
						}
					, 
						{
							234 , 234 , 234 , 234 , 234 
						}
					, 
						{
							234 , 234 , 234 , 234 , 234 
						}
					, 
						{
							234 , 234 , 234 , 234 , 234 
						}

				}
			, 
				{

					{
						234 , 234 , 234 , 234 , 234 
					}
					, 
						{
							234 , 234 , 234 , 234 , 234 
						}
					, 
						{
							234 , 234 , 234 , 234 , 234 
						}
					, 
						{
							234 , 234 , 234 , 234 , 234 
						}
					, 
						{
							234 , 234 , 234 , 234 , 234 
						}

				}

		}
	, 
		{

			{

				{
					345 , 345 , 345 , 345 
				}
				, 
					{
						345 , 345 , 345 , 345 
					}
				, 
					{
						345 , 345 , 345 , 345 
					}
				, 
					{
						345 , 345 , 345 , 345 
					}
				, 
					{
						345 , 345 , 345 , 345 
					}

			}
			, 
				{

					{
						345 , 345 , 345 , 345 
					}
					, 
						{
							345 , 345 , 345 , 345 
						}
					, 
						{
							345 , 345 , 345 , 345 
						}
					, 
						{
							345 , 345 , 345 , 345 
						}
					, 
						{
							345 , 345 , 345 , 345 
						}

				}
			, 
				{

					{
						345 , 345 , 345 , 345 
					}
					, 
						{
							345 , 345 , 345 , 345 
						}
					, 
						{
							345 , 345 , 345 , 345 
						}
					, 
						{
							345 , 345 , 345 , 345 
						}
					, 
						{
							345 , 345 , 345 , 345 
						}

				}
			, 
				{

					{
						345 , 345 , 345 , 345 
					}
					, 
						{
							345 , 345 , 345 , 345 
						}
					, 
						{
							345 , 345 , 345 , 345 
						}
					, 
						{
							345 , 345 , 345 , 345 
						}
					, 
						{
							345 , 345 , 345 , 345 
						}

				}
			, 
				{

					{
						345 , 345 , 345 , 345 
					}
					, 
						{
							345 , 345 , 345 , 345 
						}
					, 
						{
							345 , 345 , 345 , 345 
						}
					, 
						{
							345 , 345 , 345 , 345 
						}
					, 
						{
							345 , 345 , 345 , 345 
						}

				}

		}
	, 
		{

			{

				{
					456 , 456 , 456 , 456 , 456 
				}
				, 
					{
						456 , 456 , 456 , 456 , 456 
					}
				, 
					{
						456 , 456 , 456 , 456 , 456 
					}
				, 
					{
						456 , 456 , 456 , 456 , 456 
					}
				, 
					{
						456 , 456 , 456 , 456 , 456 
					}

			}
			, 
				{

					{
						456 , 456 , 456 , 456 , 456 
					}
					, 
						{
							456 , 456 , 456 , 456 , 456 
						}
					, 
						{
							456 , 456 , 456 , 456 , 456 
						}
					, 
						{
							456 , 456 , 456 , 456 , 456 
						}
					, 
						{
							456 , 456 , 456 , 456 , 456 
						}

				}
			, 
				{

					{
						456 , 456 , 456 , 456 , 456 
					}
					, 
						{
							456 , 456 , 456 , 456 , 456 
						}
					, 
						{
							456 , 456 , 456 , 456 , 456 
						}
					, 
						{
							456 , 456 , 456 , 456 , 456 
						}
					, 
						{
							456 , 456 , 456 , 456 , 456 
						}

				}
			, 
				{

					{
						456 , 456 , 456 , 456 , 456 
					}
					, 
						{
							456 , 456 , 456 , 456 , 456 
						}
					, 
						{
							456 , 456 , 456 , 456 , 456 
						}
					, 
						{
							456 , 456 , 456 , 456 , 456 
						}
					, 
						{
							456 , 456 , 456 , 456 , 456 
						}

				}
			, 
				{

					{
						456 , 456 , 456 , 456 , 456 
					}
					, 
						{
							456 , 456 , 456 , 456 , 456 
						}
					, 
						{
							456 , 456 , 456 , 456 , 456 
						}
					, 
						{
							456 , 456 , 456 , 456 , 456 
						}
					, 
						{
							456 , 456 , 456 , 456 , 456 
						}

				}

		}
	, 
		{

			{

				{
					567 , 567 , 567 , 567 , 567 
				}
				, 
					{
						567 , 567 , 567 , 567 , 567 
					}
				, 
					{
						567 , 567 , 567 , 567 , 567 
					}
				, 
					{
						567 , 567 , 567 , 567 , 567 
					}
				, 
					{
						567 , 567 , 567 , 567 , 567 
					}

			}
			, 
				{

					{
						567 , 567 , 567 , 567 , 567 
					}
					, 
						{
							567 , 567 , 567 , 567 , 567 
						}
					, 
						{
							567 , 567 , 567 , 567 , 567 
						}
					, 
						{
							567 , 567 , 567 , 567 , 567 
						}
					, 
						{
							567 , 567 , 567 , 567 , 567 
						}

				}
			, 
				{

					{
						567 , 567 , 567 , 567 , 567 
					}
					, 
						{
							567 , 567 , 567 , 567 , 567 
						}
					, 
						{
							567 , 567 , 567 , 567 , 567 
						}
					, 
						{
							567 , 567 , 567 , 567 , 567 
						}
					, 
						{
							567 , 567 , 567 , 567 , 567 
						}

				}
			, 
				{

					{
						567 , 567 , 567 , 567 , 567 
					}
					, 
						{
							567 , 567 , 567 , 567 , 567 
						}
					, 
						{
							567 , 567 , 567 , 567 , 567 
						}
					, 
						{
							567 , 567 , 567 , 567 , 567 
						}
					, 
						{
							567 , 567 , 567 , 567 , 567 
						}

				}
			, 
				{

					{
						567 , 567 , 567 , 567 , 567 
					}
					, 
						{
							567 , 567 , 567 , 567 , 567 
						}
					, 
						{
							567 , 567 , 567 , 567 , 567 
						}
					, 
						{
							567 , 567 , 567 , 567 , 567 
						}
					, 
						{
							567 , 567 , 567 , 567 , 1001 
						}

				}

		}

}

#endif
;


int foo  (  int x  )
{
	int i , j , k , l ;

	timeElapsed = timeElapsed + 23; /* Block num 1*/

	for ( i = 0 ; (timeElapsed = timeElapsed + (7)), /* Block num 2*/ i < 5 ; (timeElapsed = timeElapsed + 10), /* Block num 8*/ i ++ )  {
		timeElapsed = timeElapsed + 8; /* Block num 3*/

		for ( j = 0 ; (timeElapsed = timeElapsed + (7)), /* Block num 5*/ j < 5 ; (timeElapsed = timeElapsed + 10), /* Block num 11*/ j ++ )  {
			timeElapsed = timeElapsed + 8; /* Block num 7*/

			for ( k = 0 ; (timeElapsed = timeElapsed + (7)), /* Block num 9*/ k < 5 ; (timeElapsed = timeElapsed + 10), /* Block num 14*/ k ++ )  {
				timeElapsed = timeElapsed + 8; /* Block num 10*/

				for ( l = 0 ; (timeElapsed = timeElapsed + (7)), /* Block num 12*/ l < 5 ; (timeElapsed = timeElapsed + 12), /* Block num 15*/ l ++ )  {
					{
						timeElapsed = timeElapsed + 63; /* Block num 13*/


						if ( /* Multiple basic blocks for this line */				// if T { t=t+1 }
								keys [ i ] [ j ] [ k ] [ l ] == x )
							//                          (i==4)&&(j==4)&&(k==4)&&(l==4))

						{

							timeElapsed = timeElapsed + 1;  /* Extra - Direct print */		// Special case

							timeElapsed = timeElapsed + 112; /* Block num 16*/


							timeElapsed = timeElapsed + 15; /* Block num 6*/


							return  answer [ i ] [ j ] [ k ] [ l ] + keys [ i ] [ j ] [ k ] [ l ] ;

						}

					}
				}

				timeElapsed = timeElapsed + 1;  /* Extra - Direct print */
			}

			timeElapsed = timeElapsed + 1;  /* Extra - Direct print */
		}

		timeElapsed = timeElapsed + 1;  /* Extra - Direct print */
	}

	timeElapsed = timeElapsed + 1;  /* Extra - Direct print */


	timeElapsed = timeElapsed + 2; /* Block num 4*/

	timeElapsed = timeElapsed + 15; /* Block num 6*/

	return  -1 ;
}

int CBMCDriver  (  void  )
{
	int i;
	foo  (  i ) ;
	###WCET_TEST###
	return 0;
}


