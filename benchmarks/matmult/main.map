Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_divmodhi4.o)
                              matmult.o (__divmodhi4)
/usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o (exit)
/usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_clear_bss.o)
                              matmult.o (__do_clear_bss)
/usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_udivmodhi4.o)
                              /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_divmodhi4.o) (__udivmodhi4)

Allocating common symbols
Common symbol       size              file

Seed                0x2               matmult.o
ResultArray         0x320             matmult.o
ArrayB              0x320             matmult.o
ArrayA              0x320             matmult.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800100 0x000000000000ff00 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
LOAD matmult.o
LOAD /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/libm.a
START GROUP
LOAD /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a
LOAD /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/libm.a
LOAD /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/libc.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x3be
 *(.vectors)
 .vectors       0x0000000000000000       0x8c /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
                0x000000000000008c                . = ALIGN (0x2)
                0x000000000000008c                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x000000000000008c        0x0 linker stubs
 *(.trampolines*)
                0x000000000000008c                __trampolines_end = .
 *(.progmem*)
                0x000000000000008c                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x000000000000008c                __ctors_start = .
 *(.ctors)
                0x000000000000008c                __ctors_end = .
                0x000000000000008c                __dtors_start = .
 *(.dtors)
                0x000000000000008c                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x000000000000008c        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
                0x000000000000008c                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x000000000000008c        0xc /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000098       0x10 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_clear_bss.o)
                0x0000000000000098                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000000000000a8        0x8 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
 *(.init9)
 *(.text)
 .text          0x00000000000000b0        0x4 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
                0x00000000000000b0                __vector_22
                0x00000000000000b0                __vector_28
                0x00000000000000b0                __vector_1
                0x00000000000000b0                __vector_32
                0x00000000000000b0                __vector_34
                0x00000000000000b0                __vector_24
                0x00000000000000b0                __vector_12
                0x00000000000000b0                __bad_interrupt
                0x00000000000000b0                __vector_6
                0x00000000000000b0                __vector_31
                0x00000000000000b0                __vector_3
                0x00000000000000b0                __vector_23
                0x00000000000000b0                __vector_30
                0x00000000000000b0                __vector_25
                0x00000000000000b0                __vector_11
                0x00000000000000b0                __vector_13
                0x00000000000000b0                __vector_17
                0x00000000000000b0                __vector_19
                0x00000000000000b0                __vector_7
                0x00000000000000b0                __vector_27
                0x00000000000000b0                __vector_5
                0x00000000000000b0                __vector_33
                0x00000000000000b0                __vector_4
                0x00000000000000b0                __vector_9
                0x00000000000000b0                __vector_2
                0x00000000000000b0                __vector_21
                0x00000000000000b0                __vector_15
                0x00000000000000b0                __vector_29
                0x00000000000000b0                __vector_8
                0x00000000000000b0                __vector_26
                0x00000000000000b0                __vector_14
                0x00000000000000b0                __vector_10
                0x00000000000000b0                __vector_16
                0x00000000000000b0                __vector_18
                0x00000000000000b0                __vector_20
 .text          0x00000000000000b4      0x2b6 matmult.o
                0x00000000000000b4                main
                0x00000000000000d6                InitSeed
                0x00000000000000ec                Test
                0x000000000000013a                Initialize
                0x00000000000001cc                RandomInteger
                0x0000000000000212                Multiply
 .text          0x000000000000036a        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_divmodhi4.o)
 .text          0x000000000000036a        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_exit.o)
 .text          0x000000000000036a        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_clear_bss.o)
 .text          0x000000000000036a        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_udivmodhi4.o)
                0x000000000000036a                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc.mul
                0x000000000000036a        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_divmodhi4.o)
 .text.libgcc.div
                0x000000000000036a       0x28 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_divmodhi4.o)
                0x000000000000036a                __divmodhi4
                0x000000000000036a                _div
 .text.libgcc   0x0000000000000392        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_divmodhi4.o)
 .text.libgcc.prologue
                0x0000000000000392        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_divmodhi4.o)
 .text.libgcc.builtins
                0x0000000000000392        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_divmodhi4.o)
 .text.libgcc.fmul
                0x0000000000000392        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_divmodhi4.o)
 .text.libgcc.fixed
                0x0000000000000392        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_divmodhi4.o)
 .text.libgcc.mul
                0x0000000000000392        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_exit.o)
 .text.libgcc.div
                0x0000000000000392        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000000392        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x0000000000000392        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x0000000000000392        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x0000000000000392        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x0000000000000392        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x0000000000000392        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x0000000000000392        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc   0x0000000000000392        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x0000000000000392        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x0000000000000392        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x0000000000000392        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x0000000000000392        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.mul
                0x0000000000000392        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_udivmodhi4.o)
 .text.libgcc.div
                0x0000000000000392       0x28 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_udivmodhi4.o)
                0x0000000000000392                __udivmodhi4
 .text.libgcc   0x00000000000003ba        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_udivmodhi4.o)
 .text.libgcc.prologue
                0x00000000000003ba        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_udivmodhi4.o)
 .text.libgcc.builtins
                0x00000000000003ba        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_udivmodhi4.o)
 .text.libgcc.fmul
                0x00000000000003ba        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_udivmodhi4.o)
 .text.libgcc.fixed
                0x00000000000003ba        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_udivmodhi4.o)
                0x00000000000003ba                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000000000003ba        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_exit.o)
                0x00000000000003ba                exit
                0x00000000000003ba                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000000000003ba        0x4 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_exit.o)
 *(.fini0)
                0x00000000000003be                _etext = .

.data           0x0000000000800100        0x0 load address 0x00000000000003be
                0x0000000000800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
 .data          0x0000000000800100        0x0 matmult.o
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_divmodhi4.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_exit.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_clear_bss.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_udivmodhi4.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800100                . = ALIGN (0x2)
                0x0000000000800100                _edata = .
                0x0000000000800100                PROVIDE (__data_end, .)

.bss            0x0000000000800100      0x962
                0x0000000000800100                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800100        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
 .bss           0x0000000000800100        0x0 matmult.o
 .bss           0x0000000000800100        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_divmodhi4.o)
 .bss           0x0000000000800100        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_exit.o)
 .bss           0x0000000000800100        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_clear_bss.o)
 .bss           0x0000000000800100        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_udivmodhi4.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x0000000000800100      0x962 matmult.o
                0x0000000000800100                Seed
                0x0000000000800102                ResultArray
                0x0000000000800422                ArrayB
                0x0000000000800742                ArrayA
                0x0000000000800a62                PROVIDE (__bss_end, .)
                0x00000000000003be                __data_load_start = LOADADDR (.data)
                0x00000000000003be                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800a62        0x0
                0x0000000000800a62                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0000000000800a62                PROVIDE (__noinit_end, .)
                0x0000000000800a62                _end = .
                0x0000000000800a62                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 matmult.o
                                         0x12 (size before relaxing)

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x0000000000000000       0x20
 *(.debug_aranges)
 .debug_aranges
                0x0000000000000000       0x20 matmult.o

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000      0x1f5
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x0000000000000000      0x1f5 matmult.o

.debug_abbrev   0x0000000000000000      0x10c
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000      0x10c matmult.o

.debug_line     0x0000000000000000       0x9e
 *(.debug_line .debug_line.* .debug_line_end)
 .debug_line    0x0000000000000000       0x9e matmult.o

.debug_frame    0x0000000000000000      0x114
 *(.debug_frame)
 .debug_frame   0x0000000000000000      0x114 matmult.o

.debug_str      0x0000000000000000      0x13a
 *(.debug_str)
 .debug_str     0x0000000000000000      0x13a matmult.o
                                        0x14b (size before relaxing)

.debug_loc      0x0000000000000000      0x1fe
 *(.debug_loc)
 .debug_loc     0x0000000000000000      0x1fe matmult.o

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(main.elf elf32-avr)
LOAD linker stubs

Cross Reference Table

Symbol                                            File
ArrayA                                            matmult.o
ArrayB                                            matmult.o
InitSeed                                          matmult.o
Initialize                                        matmult.o
Multiply                                          matmult.o
RandomInteger                                     matmult.o
ResultArray                                       matmult.o
Seed                                              matmult.o
Test                                              matmult.o
__bad_interrupt                                   /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
__bss_end                                         /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_clear_bss.o)
__bss_start                                       /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_clear_bss.o)
__divmodhi4                                       /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_divmodhi4.o)
                                                  matmult.o
__do_clear_bss                                    /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_clear_bss.o)
                                                  matmult.o
__heap_end                                        /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
__init                                            /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
__stack                                           /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
__udivmodhi4                                      /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_udivmodhi4.o)
                                                  /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_divmodhi4.o)
__vector_1                                        /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
__vector_10                                       /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
__vector_11                                       /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
__vector_12                                       /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
__vector_13                                       /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
__vector_14                                       /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
__vector_15                                       /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
__vector_16                                       /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
__vector_17                                       /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
__vector_18                                       /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
__vector_19                                       /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
__vector_2                                        /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
__vector_20                                       /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
__vector_21                                       /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
__vector_22                                       /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
__vector_23                                       /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
__vector_24                                       /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
__vector_25                                       /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
__vector_26                                       /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
__vector_27                                       /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
__vector_28                                       /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
__vector_29                                       /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
__vector_3                                        /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
__vector_30                                       /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
__vector_31                                       /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
__vector_32                                       /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
__vector_33                                       /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
__vector_34                                       /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
__vector_4                                        /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
__vector_5                                        /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
__vector_6                                        /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
__vector_7                                        /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
__vector_8                                        /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
__vector_9                                        /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
__vector_default                                  /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
__vectors                                         /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
_div                                              /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_divmodhi4.o)
_exit                                             /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_exit.o)
exit                                              /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_exit.o)
                                                  /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
main                                              matmult.o
                                                  /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
