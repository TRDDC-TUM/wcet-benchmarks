#BB.index;BB.type;BB.label;File;Subprogram;Line.Begin;Col.Begin;Line.End;Col.End;Exec.Count;Exec.Time.Per;function.call.type;function.call.callees;Successors;Code
0;exit;;adc_fbw.c;adc_buf_channel;55;1;55;1;0;0;0;;;""
1;node;;adc_fbw.c;adc_buf_channel;54;3;54;27;0;0;0;;0;" buffers[adc_channel] = s;"
2;entry;;adc_fbw.c;adc_buf_channel;53;63;53;63;0;0;0;;1;""

#BB.index;BB.type;BB.label;File;Subprogram;Line.Begin;Col.Begin;Line.End;Col.End;Exec.Count;Exec.Time.Per;function.call.type;function.call.callees;Successors;Code
0;exit;;adc_fbw.c;adc_init;78;1;78;1;0;0;0;;;""
1;node;;adc_fbw.c;adc_init;76;26;76;29;0;0;0;;3;" i++;"
2;node;;adc_fbw.c;adc_init;77;5;77;36;0;0;0;;1;" buffers[i] = (struct adc_buf *)0;"
3;node;;adc_fbw.c;adc_init;76;14;76;24;0;0;0;;2,0;" i < 8;"
4;node;;adc_fbw.c;adc_init;60;3;76;12;0;0;0;;3;" uint8_t i;; (*(volatile uint8_t *)((21) + 32)) = 0; (*(volatile uint8_t *)((20) + 32)) = 0; (*(volatile uint8_t *)((7) + 32)) = (1 << (6)) | (1 << (7)); (*(volatile uint8_t *)((6) + 32)) = 0 | 7 | (1 << (7)) | (1 << (3)) | (1 << (6)); i = 0;"
5;entry;;adc_fbw.c;adc_init;59;2;59;2;0;0;0;;4;""

#BB.index;BB.type;BB.label;File;Subprogram;Line.Begin;Col.Begin;Line.End;Col.End;Exec.Count;Exec.Time.Per;function.call.type;function.call.callees;Successors;Code
0;exit;;main.c;check_failsafe_task;200;1;200;1;0;0;0;;;""
1;node;;main.c;check_failsafe_task;198;7;198;26;0;0;1;servo_set;0;" servo_set(failsafe);"
2;node;;main.c;check_failsafe_task;196;24;196;35;0;0;0;;1,0;" !mega128_ok;"
3;node;;main.c;check_failsafe_task;196;3;196;20;0;0;0;;2,0;" mode == 1;"
4;node;;main.c;check_failsafe_task;195;33;195;42;0;0;0;;1,3;" !radio_ok;"
5;node;;main.c;check_failsafe_task;195;10;195;29;0;0;0;;4,3;" mode == 0;"
6;entry;;main.c;check_failsafe_task;194;2;194;2;0;0;0;;5;""

#BB.index;BB.type;BB.label;File;Subprogram;Line.Begin;Col.Begin;Line.End;Col.End;Exec.Count;Exec.Time.Per;function.call.type;function.call.callees;Successors;Code
0;exit;;main.c;check_mega128_values_task;216;1;216;1;0;0;0;;;""
1;node;;main.c;check_mega128_values_task;214;7;214;25;0;0;0;;0;" mega128_ok = 0;"
2;node;;main.c;check_mega128_values_task;213;9;213;48;0;0;0;;1,0;" time_since_last_mega128 == 30;"
3;node;;main.c;check_mega128_values_task;210;4;210;36;0;0;1;servo_set;2;" servo_set(from_mega128.channels);"
4;node;;main.c;check_mega128_values_task;207;2;209;23;0;0;0;;3,2;" time_since_last_mega128 = 0; mega128_ok = (!0); mode == 1;"
5;node;;main.c;check_mega128_values_task;205;11;205;32;0;0;0;;4,2;" mega128_receive_valid (ImplicitCastExpr, LValueToRValue, bool_t);"
6;node;;main.c;check_mega128_values_task;203;31;203;50;0;0;0;;5,2;" spi_was_interrupted (ImplicitCastExpr, IntegralCast, int);"
7;node;;main.c;check_mega128_values_task;203;11;203;27;0;0;0;;6,2;" !((!((*(volatile uint8_t *)(((uint16_t)&((*(volatile uint8_t *)((22) + 32)))))) & (1 << (2)))));"
8;entry;;main.c;check_mega128_values_task;202;2;202;2;0;0;0;;7;""

#BB.index;BB.type;BB.label;File;Subprogram;Line.Begin;Col.Begin;Line.End;Col.End;Exec.Count;Exec.Time.Per;function.call.type;function.call.callees;Successors;Code
0;exit;;main.c;main;160;1;160;1;0;0;0;;;""
1;node;;main.c;main;159;3;159;11;0;0;0;;0;" return 0;;"
3;node;;main.c;main;157;5;157;20;0;0;1;periodic_task;4;" periodic_task();"
4;node;;main.c;main;155;10;155;11;0;0;0;;3,1;" 1;"
5;node;;main.c;main;142;3;153;13;0;0;1;uart_init_tx,uart_print_string,adc_init,adc_buf_channel,adc_buf_channel,timer_init,servo_init,ppm_init,spi_init;4;" uart_init_tx(); uart_print_string(\"FBW Booting $Id: main.c,v 1.1 2006/06/15 09:27:07 casse Exp $\n\"); adc_init(); adc_buf_channel(3, &vsupply_adc_buf); adc_buf_channel(6, &vservos_adc_buf); timer_init(); servo_init(); ppm_init(); spi_init();"
6;entry;;main.c;main;141;2;141;2;0;0;0;;5;""

#BB.index;BB.type;BB.label;File;Subprogram;Line.Begin;Col.Begin;Line.End;Col.End;Exec.Count;Exec.Time.Per;function.call.type;function.call.callees;Successors;Code
0;exit;;main.c;periodic_task;138;1;138;1;0;0;0;;;""
1;node;;main.c;periodic_task;136;2;136;23;0;0;0;;0;" time_since_last_ppm++;"
2;node;;main.c;periodic_task;135;11;135;52;0;0;0;;1,0;" time_since_last_ppm < 300;"
3;node;;main.c;periodic_task;134;2;134;27;0;0;0;;2;" time_since_last_mega128++;"
4;node;;main.c;periodic_task;133;11;133;49;0;0;0;;3,2;" time_since_last_mega128 < 30;"
5;node;;main.c;periodic_task;129;2;130;18;0;0;1;servo_transmit;4;" _20Hz = 0; servo_transmit();"
6;node;;main.c;periodic_task;127;11;127;21;0;0;0;;5,4;" _20Hz >= 3;"
7;node;;main.c;periodic_task;123;2;125;13;0;0;0;;6;" _1Hz = 0; last_ppm_cpt = ppm_cpt; ppm_cpt = 0;"
8;node;;main.c;periodic_task;117;7;121;21;0;0;0;;7,6;" static uint8_t _1Hz;; static uint8_t _20Hz;; _1Hz++; _20Hz++; _1Hz >= 60;"
9;node;;main.c;periodic_task;111;5;115;24;0;0;1;test_ppm_task,check_mega128_values_task,send_data_to_autopilot_task,check_failsafe_task,timer_periodic;8,0;" test_ppm_task(); check_mega128_values_task(); send_data_to_autopilot_task(); check_failsafe_task(); timer_periodic();"
10;entry;;main.c;periodic_task;110;4;110;4;0;0;0;;9;""

#BB.index;BB.type;BB.label;File;Subprogram;Line.Begin;Col.Begin;Line.End;Col.End;Exec.Count;Exec.Time.Per;function.call.type;function.call.callees;Successors;Code
0;exit;;main.c;send_data_to_autopilot_task;107;1;107;1;0;0;0;;;""
1;node;;main.c;send_data_to_autopilot_task;103;7;105;18;0;0;1;to_autopilot_from_last_radio,spi_reset;0;" spi_was_interrupted = 0; to_autopilot_from_last_radio(); spi_reset();"
2;node;;main.c;send_data_to_autopilot_task;101;29;101;48;0;0;0;;1,0;" spi_was_interrupted (ImplicitCastExpr, IntegralCast, int);"
3;node;;main.c;send_data_to_autopilot_task;101;9;101;25;0;0;0;;2,0;" !((!((*(volatile uint8_t *)(((uint16_t)&((*(volatile uint8_t *)((22) + 32)))))) & (1 << (2)))));"
4;entry;;main.c;send_data_to_autopilot_task;100;2;100;2;0;0;0;;3;""

#BB.index;BB.type;BB.label;File;Subprogram;Line.Begin;Col.Begin;Line.End;Col.End;Exec.Count;Exec.Time.Per;function.call.type;function.call.callees;Successors;Code
0;exit;;main.c;test_ppm_task;192;1;192;1;0;0;0;;;""
1;node;;main.c;test_ppm_task;190;7;190;31;0;0;0;;0;" radio_really_lost = (!0);"
2;node;;main.c;test_ppm_task;188;9;188;51;0;0;0;;1,0;" time_since_last_ppm >= 300;"
3;node;;main.c;test_ppm_task;186;7;186;23;0;0;0;;2;" radio_ok = 0;"
4;node;;main.c;test_ppm_task;184;9;184;44;0;0;0;;3,2;" time_since_last_ppm >= 30;"
5;node;;main.c;test_ppm_task;182;7;182;23;0;0;0;;4;" mode = 1;"
6;node;;main.c;test_ppm_task;180;37;180;54;0;0;0;;5,4;" radio_really_lost (ImplicitCastExpr, IntegralCast, int);"
7;node;;main.c;test_ppm_task;180;14;180;33;0;0;0;;6,4;" mode == 0;"
8;node;;main.c;test_ppm_task;177;2;177;23;0;0;1;servo_set;4;" servo_set(last_radio);"
9;node;;main.c;test_ppm_task;175;11;175;30;0;0;0;;8,4;" mode == 0;"
10;node;;main.c;test_ppm_task;173;2;173;45;0;0;0;;9;" [B13.1] ? [B11.1] : [B12.1]; mode = ([B10.1]);"
11;node;;main.c;test_ppm_task;173;9;0;0;0;0;0;;10;" 0;"
12;node;;main.c;test_ppm_task;173;9;0;0;0;0;0;;10;" 1;"
13;node;;main.c;test_ppm_task;173;9;0;0;0;0;0;;11,12;" (last_radio[4]) < (-(600 * 16) / 2);"
14;node;;main.c;test_ppm_task;165;7;171;43;0;0;1;last_radio_from_ppm;13,9;" ppm_valid = 0; ppm_cpt++; radio_ok = (!0); radio_really_lost = 0; time_since_last_ppm = 0; last_radio_from_ppm(); last_radio_contains_avg_channels (ImplicitCastExpr, LValueToRValue, bool_t);"
15;node;;main.c;test_ppm_task;163;9;163;18;0;0;0;;14,7;" ppm_valid (ImplicitCastExpr, LValueToRValue, bool_t);"
16;entry;;main.c;test_ppm_task;162;2;162;2;0;0;0;;15;""

#BB.index;BB.type;BB.label;File;Subprogram;Line.Begin;Col.Begin;Line.End;Col.End;Exec.Count;Exec.Time.Per;function.call.type;function.call.callees;Successors;Code
0;exit;;main.c;to_autopilot_from_last_radio;97;1;97;1;0;0;0;;;""
1;node;;main.c;to_autopilot_from_last_radio;91;3;93;75;0;0;0;;0;" to_mega128.ppm_cpt = last_ppm_cpt; to_mega128.vsupply = (0.017500000000000002 * vsupply_adc_buf.sum / 32 + 0.087999999999999994) * 10;"
2;node;;main.c;to_autopilot_from_last_radio;88;5;89;45;0;0;0;;1;" to_mega128.status |= (1 << (2)); last_radio_contains_avg_channels = 0;"
3;node;;main.c;to_autopilot_from_last_radio;86;3;87;39;0;0;0;;2,1;" [B6.3] ? ([B4.1]) : [B5.1]; to_mega128.status |= ([B3.1]); last_radio_contains_avg_channels (ImplicitCastExpr, LValueToRValue, bool_t);"
4;node;;main.c;to_autopilot_from_last_radio;86;45;0;0;0;0;0;;3;" 1 << (1);"
5;node;;main.c;to_autopilot_from_last_radio;86;70;86;71;0;0;0;;3;" 0;"
6;node;;main.c;to_autopilot_from_last_radio;85;3;86;42;0;0;0;;4,5;" [B9.1] ? ([B7.1]) : [B8.1]; to_mega128.status = ([B6.1]); radio_really_lost (ImplicitCastExpr, IntegralCast, int);"
7;node;;main.c;to_autopilot_from_last_radio;85;35;0;0;0;0;0;;6;" 1 << (0);"
8;node;;main.c;to_autopilot_from_last_radio;85;58;85;59;0;0;0;;6;" 0;"
9;node;;main.c;to_autopilot_from_last_radio;85;24;85;32;0;0;0;;7,8;" radio_ok (ImplicitCastExpr, IntegralCast, int);"
10;node;;main.c;to_autopilot_from_last_radio;83;32;83;35;0;0;0;;12;" i++;"
11;node;;main.c;to_autopilot_from_last_radio;84;6;84;44;0;0;0;;10;" to_mega128.channels[i] = last_radio[i];"
12;node;;main.c;to_autopilot_from_last_radio;83;14;83;30;0;0;0;;11,9;" i < 9;"
13;node;;main.c;to_autopilot_from_last_radio;82;3;83;12;0;0;0;;12;" uint8_t i;; i = 0;"
14;entry;;main.c;to_autopilot_from_last_radio;81;50;81;50;0;0;0;;13;""

#BB.index;BB.type;BB.label;File;Subprogram;Line.Begin;Col.Begin;Line.End;Col.End;Exec.Count;Exec.Time.Per;function.call.type;function.call.callees;Successors;Code
0;exit;;ppm.c;last_radio_from_ppm;105;1;105;1;0;0;0;;;""
1;node;;ppm.c;last_radio_from_ppm;104;3;0;0;0;0;0;;0;" last_radio_contains_avg_channels = (!0);"
2;node;;ppm.c;last_radio_from_ppm;104;3;0;0;0;0;0;;1;" last_radio[8] = -(600 * 16);"
3;node;;ppm.c;last_radio_from_ppm;104;3;0;0;0;0;0;;2,1;" last_radio[8] < -(600 * 16);"
4;node;;ppm.c;last_radio_from_ppm;104;3;0;0;0;0;0;;1;" last_radio[8] = (600 * 16);"
5;node;;ppm.c;last_radio_from_ppm;104;3;0;0;0;0;0;;4,3;" last_radio[8] = avg_last_radio[8]; avg_last_radio[8] = 0; last_radio[8] > (600 * 16);"
6;node;;ppm.c;last_radio_from_ppm;104;3;0;0;0;0;0;;5;" last_radio[7] = -(600 * 16);"
7;node;;ppm.c;last_radio_from_ppm;104;3;0;0;0;0;0;;6,5;" last_radio[7] < -(600 * 16);"
8;node;;ppm.c;last_radio_from_ppm;104;3;0;0;0;0;0;;5;" last_radio[7] = (600 * 16);"
9;node;;ppm.c;last_radio_from_ppm;104;3;0;0;0;0;0;;8,7;" last_radio[7] = avg_last_radio[7]; avg_last_radio[7] = 0; last_radio[7] > (600 * 16);"
10;node;;ppm.c;last_radio_from_ppm;104;3;0;0;0;0;0;;9;" last_radio[6] = -(600 * 16);"
11;node;;ppm.c;last_radio_from_ppm;104;3;0;0;0;0;0;;10,9;" last_radio[6] < -(600 * 16);"
12;node;;ppm.c;last_radio_from_ppm;104;3;0;0;0;0;0;;9;" last_radio[6] = (600 * 16);"
13;node;;ppm.c;last_radio_from_ppm;104;3;0;0;0;0;0;;12,11;" last_radio[6] = avg_last_radio[6]; avg_last_radio[6] = 0; last_radio[6] > (600 * 16);"
14;node;;ppm.c;last_radio_from_ppm;104;3;0;0;0;0;0;;13;" last_radio[5] = -(600 * 16);"
15;node;;ppm.c;last_radio_from_ppm;104;3;0;0;0;0;0;;14,13;" last_radio[5] < -(600 * 16);"
16;node;;ppm.c;last_radio_from_ppm;104;3;0;0;0;0;0;;13;" last_radio[5] = (600 * 16);"
17;node;;ppm.c;last_radio_from_ppm;104;3;0;0;0;0;0;;16,15;" last_radio[5] = avg_last_radio[5]; avg_last_radio[5] = 0; last_radio[5] > (600 * 16);"
18;node;;ppm.c;last_radio_from_ppm;104;3;0;0;0;0;0;;17;" last_radio[4] = -(600 * 16);"
19;node;;ppm.c;last_radio_from_ppm;104;3;0;0;0;0;0;;18,17;" last_radio[4] < -(600 * 16);"
20;node;;ppm.c;last_radio_from_ppm;104;3;0;0;0;0;0;;17;" last_radio[4] = (600 * 16);"
21;node;;ppm.c;last_radio_from_ppm;104;3;0;0;0;0;0;;20,19;" avg_cpt = 0; last_radio[4] = avg_last_radio[4]; avg_last_radio[4] = 0; last_radio[4] > (600 * 16);"
22;node;;ppm.c;last_radio_from_ppm;104;3;0;0;0;0;0;;21,0;" [B25.4] ? ([B23.1]) : ([B24.1]); avg_last_radio[8] += tmp_radio * ([B22.1]); avg_cpt++; avg_cpt == (40 / 4);"
23;node;;ppm.c;last_radio_from_ppm;104;3;0;0;0;0;0;;22;" (600 * 16) / (40 / 4) / (float)(16 * (2200 - 1600));"
24;node;;ppm.c;last_radio_from_ppm;104;3;0;0;0;0;0;;22;" -(600 * 16) / (40 / 4) / (float)(16 * (1000 - 1600));"
25;node;;ppm.c;last_radio_from_ppm;104;3;0;0;0;0;0;;23,24;" [B28.4] ? ([B26.1]) : ([B27.1]); avg_last_radio[7] += tmp_radio * ([B25.1]); tmp_radio = ppm_pulses[8] - (16 * 1600); tmp_radio >= 0;"
26;node;;ppm.c;last_radio_from_ppm;104;3;0;0;0;0;0;;25;" (600 * 16) / (40 / 4) / (float)(16 * (2200 - 1600));"
27;node;;ppm.c;last_radio_from_ppm;104;3;0;0;0;0;0;;25;" -(600 * 16) / (40 / 4) / (float)(16 * (1000 - 1600));"
28;node;;ppm.c;last_radio_from_ppm;104;3;0;0;0;0;0;;26,27;" [B31.4] ? ([B29.1]) : ([B30.1]); avg_last_radio[6] += tmp_radio * ([B28.1]); tmp_radio = ppm_pulses[7] - (16 * 1600); tmp_radio >= 0;"
29;node;;ppm.c;last_radio_from_ppm;104;3;0;0;0;0;0;;28;" (600 * 16) / (40 / 4) / (float)(16 * (2200 - 1600));"
30;node;;ppm.c;last_radio_from_ppm;104;3;0;0;0;0;0;;28;" -(600 * 16) / (40 / 4) / (float)(16 * (1000 - 1600));"
31;node;;ppm.c;last_radio_from_ppm;104;3;0;0;0;0;0;;29,30;" [B34.4] ? ([B32.1]) : ([B33.1]); avg_last_radio[5] += tmp_radio * ([B31.1]); tmp_radio = ppm_pulses[6] - (16 * 1600); tmp_radio >= 0;"
32;node;;ppm.c;last_radio_from_ppm;104;3;0;0;0;0;0;;31;" (600 * 16) / (40 / 4) / (float)(16 * (2200 - 1600));"
33;node;;ppm.c;last_radio_from_ppm;104;3;0;0;0;0;0;;31;" -(600 * 16) / (40 / 4) / (float)(16 * (1000 - 1600));"
34;node;;ppm.c;last_radio_from_ppm;104;3;0;0;0;0;0;;32,33;" [B37.2] ? ([B35.1]) : ([B36.1]); avg_last_radio[4] += tmp_radio * ([B34.1]); tmp_radio = ppm_pulses[5] - (16 * 1600); tmp_radio >= 0;"
35;node;;ppm.c;last_radio_from_ppm;104;3;0;0;0;0;0;;34;" (600 * 16) / (40 / 4) / (float)(16 * (2200 - 1600));"
36;node;;ppm.c;last_radio_from_ppm;104;3;0;0;0;0;0;;34;" -(600 * 16) / (40 / 4) / (float)(16 * (1000 - 1600));"
37;node;;ppm.c;last_radio_from_ppm;104;3;0;0;0;0;0;;35,36;" tmp_radio = ppm_pulses[4] - (16 * 1600); tmp_radio >= 0;"
38;node;;ppm.c;last_radio_from_ppm;104;3;0;0;0;0;0;;37;" last_radio[3] = -(600 * 16);"
39;node;;ppm.c;last_radio_from_ppm;104;3;0;0;0;0;0;;38,37;" last_radio[3] < -(600 * 16);"
40;node;;ppm.c;last_radio_from_ppm;104;3;0;0;0;0;0;;37;" last_radio[3] = (600 * 16);"
41;node;;ppm.c;last_radio_from_ppm;104;3;0;0;0;0;0;;40,39;" [B44.2] ? ([B42.1]) : ([B43.1]); last_radio[3] = tmp_radio * ([B41.1]); last_radio[3] > (600 * 16);"
42;node;;ppm.c;last_radio_from_ppm;104;3;0;0;0;0;0;;41;" (600 * 16) / 1 / (float)(16 * (2200 - 1600));"
43;node;;ppm.c;last_radio_from_ppm;104;3;0;0;0;0;0;;41;" -(600 * 16) / 1 / (float)(16 * (1000 - 1600));"
44;node;;ppm.c;last_radio_from_ppm;104;3;0;0;0;0;0;;42,43;" tmp_radio = ppm_pulses[3] - (16 * 1600); tmp_radio >= 0;"
45;node;;ppm.c;last_radio_from_ppm;104;3;0;0;0;0;0;;44;" last_radio[2] = -(600 * 16);"
46;node;;ppm.c;last_radio_from_ppm;104;3;0;0;0;0;0;;45,44;" last_radio[2] < -(600 * 16);"
47;node;;ppm.c;last_radio_from_ppm;104;3;0;0;0;0;0;;44;" last_radio[2] = (600 * 16);"
48;node;;ppm.c;last_radio_from_ppm;104;3;0;0;0;0;0;;47,46;" [B51.2] ? ([B49.1]) : ([B50.1]); last_radio[2] = tmp_radio * ([B48.1]); last_radio[2] > (600 * 16);"
49;node;;ppm.c;last_radio_from_ppm;104;3;0;0;0;0;0;;48;" (600 * 16) / 1 / (float)(16 * (2200 - 1600));"
50;node;;ppm.c;last_radio_from_ppm;104;3;0;0;0;0;0;;48;" -(600 * 16) / 1 / (float)(16 * (1000 - 1600));"
51;node;;ppm.c;last_radio_from_ppm;104;3;0;0;0;0;0;;49,50;" tmp_radio = ppm_pulses[2] - (16 * 1600); tmp_radio >= 0;"
52;node;;ppm.c;last_radio_from_ppm;104;3;0;0;0;0;0;;51;" last_radio[1] = -(600 * 16);"
53;node;;ppm.c;last_radio_from_ppm;104;3;0;0;0;0;0;;52,51;" last_radio[1] < -(600 * 16);"
54;node;;ppm.c;last_radio_from_ppm;104;3;0;0;0;0;0;;51;" last_radio[1] = (600 * 16);"
55;node;;ppm.c;last_radio_from_ppm;104;3;0;0;0;0;0;;54,53;" [B58.2] ? ([B56.1]) : ([B57.1]); last_radio[1] = tmp_radio * ([B55.1]); last_radio[1] > (600 * 16);"
56;node;;ppm.c;last_radio_from_ppm;104;3;0;0;0;0;0;;55;" (600 * 16) / 1 / (float)(16 * (2200 - 1600));"
57;node;;ppm.c;last_radio_from_ppm;104;3;0;0;0;0;0;;55;" -(600 * 16) / 1 / (float)(16 * (1000 - 1600));"
58;node;;ppm.c;last_radio_from_ppm;104;3;0;0;0;0;0;;56,57;" tmp_radio = ppm_pulses[1] - (16 * 1600); tmp_radio >= 0;"
59;node;;ppm.c;last_radio_from_ppm;104;3;0;0;0;0;0;;58;" last_radio[0] = 0;"
60;node;;ppm.c;last_radio_from_ppm;104;3;0;0;0;0;0;;59,58;" last_radio[0] < 0;"
61;node;;ppm.c;last_radio_from_ppm;104;3;0;0;0;0;0;;58;" last_radio[0] = (600 * 16);"
62;node;;ppm.c;last_radio_from_ppm;104;3;0;0;0;0;0;;61,60;" static uint8_t avg_cpt = 0;; int16_t tmp_radio;; tmp_radio = ppm_pulses[0] - (16 * 1000); last_radio[0] = tmp_radio * ((600 * 16) / 1 / (float)(16 * (2200 - 1000))); last_radio[0] > (600 * 16);"
63;entry;;ppm.c;last_radio_from_ppm;103;29;103;29;0;0;0;;62;""

#BB.index;BB.type;BB.label;File;Subprogram;Line.Begin;Col.Begin;Line.End;Col.End;Exec.Count;Exec.Time.Per;function.call.type;function.call.callees;Successors;Code
0;exit;;servo.c;servo_init;138;1;138;1;0;0;0;;;""
1;node;;servo.c;servo_init;123;3;137;30;0;0;0;;0;" (*(volatile uint16_t *)((42) + 32)) = 32768UL; (*(volatile uint8_t *)((47) + 32)) |= (1 << (6)); (*(volatile uint8_t *)((56) + 32)) = (1 << (4)); (*(volatile uint8_t *)(((uint16_t)&((*(volatile uint8_t *)((18) + 32)))))) &= ~(1 << (7)); (*(volatile uint8_t *)((57) + 32)) |= (1 << (4));"
2;node;;servo.c;servo_init;118;38;118;41;0;0;0;;4;" i++;"
3;node;;servo.c;servo_init;120;5;120;46;0;0;0;;2;" servo_widths[i] = ((1000UL * 16) + (2000UL * 16)) / 2;"
4;node;;servo.c;servo_init;118;14;118;35;0;0;0;;3,1;" i < 10;"
5;node;;servo.c;servo_init;105;3;118;11;0;0;0;;4;" uint8_t i;; (*(volatile uint8_t *)((17) + 32)) |= (1 << (7)); (*(volatile uint8_t *)((23) + 32)) |= (1 << (1)); (*(volatile uint8_t *)(((uint16_t)&((*(volatile uint8_t *)((18) + 32)))))) |= (1 << (7)); (*(volatile uint8_t *)(((uint16_t)&((*(volatile uint8_t *)((24) + 32)))))) &= ~(1 << (1)); i = 0;"
6;entry;;servo.c;servo_init;104;2;104;2;0;0;0;;5;""

#BB.index;BB.type;BB.label;File;Subprogram;Line.Begin;Col.Begin;Line.End;Col.End;Exec.Count;Exec.Time.Per;function.call.type;function.call.callees;Successors;Code
0;exit;;servo.c;servo_set;196;1;196;1;0;0;0;;;""
1;node;;servo.c;servo_set;195;3;0;0;0;0;0;;0;" [B7.4] ? ([B2.1]) : ([B3.1]); servo_widths[7] = ([B1.1]);"
2;node;;servo.c;servo_set;195;3;0;0;0;0;0;;1;" 1000UL * 16;"
3;node;;servo.c;servo_set;195;3;0;0;0;0;0;;1;" [B6.1] ? ([B4.1]) : [B5.1];"
4;node;;servo.c;servo_set;195;3;0;0;0;0;0;;3;" 2000UL * 16;"
5;node;;servo.c;servo_set;195;3;0;0;0;0;0;;3;" (servo_value) (ImplicitCastExpr, IntegralCast, unsigned long);"
6;node;;servo.c;servo_set;195;3;0;0;0;0;0;;4,5;" (servo_value) > (2000UL * 16);"
7;node;;servo.c;servo_set;195;3;0;0;0;0;0;;2,6;" [B13.3] ? ([B8.1]) : ([B9.1]); servo_widths[2] = ([B7.1]); servo_value = (1450 * 16) + (int16_t)((values[3] + values[1] * 1.) * -0.48333333333299999); (servo_value) < (1000UL * 16);"
8;node;;servo.c;servo_set;195;3;0;0;0;0;0;;7;" 1000UL * 16;"
9;node;;servo.c;servo_set;195;3;0;0;0;0;0;;7;" [B12.1] ? ([B10.1]) : [B11.1];"
10;node;;servo.c;servo_set;195;3;0;0;0;0;0;;9;" 2000UL * 16;"
11;node;;servo.c;servo_set;195;3;0;0;0;0;0;;9;" (servo_value) (ImplicitCastExpr, IntegralCast, unsigned long);"
12;node;;servo.c;servo_set;195;3;0;0;0;0;0;;10,11;" (servo_value) > (2000UL * 16);"
13;node;;servo.c;servo_set;195;3;0;0;0;0;0;;8,12;" [B16.3] ? [B14.1] : [B15.1]; servo_value = (1650 * 16) + (int16_t)((([B13.1]) * _var_roll) * -0.52083333333299997); (servo_value) < (1000UL * 16);"
14;node;;servo.c;servo_set;195;3;0;0;0;0;0;;13;" 0.66000000000000003;"
15;node;;servo.c;servo_set;195;3;0;0;0;0;0;;13;" 1 (ImplicitCastExpr, IntegralToFloating, double);"
16;node;;servo.c;servo_set;195;3;0;0;0;0;0;;14,15;" [B22.3] ? ([B17.1]) : ([B18.1]); servo_widths[0] = ([B16.1]); _var_roll > 0;"
17;node;;servo.c;servo_set;195;3;0;0;0;0;0;;16;" 1000UL * 16;"
18;node;;servo.c;servo_set;195;3;0;0;0;0;0;;16;" [B21.1] ? ([B19.1]) : [B20.1];"
19;node;;servo.c;servo_set;195;3;0;0;0;0;0;;18;" 2000UL * 16;"
20;node;;servo.c;servo_set;195;3;0;0;0;0;0;;18;" (servo_value) (ImplicitCastExpr, IntegralCast, unsigned long);"
21;node;;servo.c;servo_set;195;3;0;0;0;0;0;;19,20;" (servo_value) > (2000UL * 16);"
22;node;;servo.c;servo_set;195;3;0;0;0;0;0;;17,21;" [B25.4] ? [B23.1] : [B24.1]; servo_value = (1600 * 16) + (int16_t)((([B22.1]) * _var_roll) * -0.55000000000000004); (servo_value) < (1000UL * 16);"
23;node;;servo.c;servo_set;195;3;0;0;0;0;0;;22;" 1 (ImplicitCastExpr, IntegralToFloating, double);"
24;node;;servo.c;servo_set;195;3;0;0;0;0;0;;22;" 0.66000000000000003;"
25;node;;servo.c;servo_set;195;3;0;0;0;0;0;;23,24;" [B31.4] ? ([B26.1]) : ([B27.1]); servo_widths[6] = ([B25.1]); _var_roll = values[1]; _var_roll > 0;"
26;node;;servo.c;servo_set;195;3;0;0;0;0;0;;25;" 1000UL * 16;"
27;node;;servo.c;servo_set;195;3;0;0;0;0;0;;25;" [B30.1] ? ([B28.1]) : [B29.1];"
28;node;;servo.c;servo_set;195;3;0;0;0;0;0;;27;" 2000UL * 16;"
29;node;;servo.c;servo_set;195;3;0;0;0;0;0;;27;" (servo_value) (ImplicitCastExpr, IntegralCast, unsigned long);"
30;node;;servo.c;servo_set;195;3;0;0;0;0;0;;28,29;" (servo_value) > (2000UL * 16);"
31;node;;servo.c;servo_set;195;3;0;0;0;0;0;;26,30;" [B37.4] ? ([B32.1]) : ([B33.1]); servo_widths[9] = ([B31.1]); servo_value = (1530 * 16) + (int16_t)((values[2]) * 0.49666666666699999); (servo_value) < (1000UL * 16);"
32;node;;servo.c;servo_set;195;3;0;0;0;0;0;;31;" 1000UL * 16;"
33;node;;servo.c;servo_set;195;3;0;0;0;0;0;;31;" [B36.1] ? ([B34.1]) : [B35.1];"
34;node;;servo.c;servo_set;195;3;0;0;0;0;0;;33;" 2000UL * 16;"
35;node;;servo.c;servo_set;195;3;0;0;0;0;0;;33;" (servo_value) (ImplicitCastExpr, IntegralCast, unsigned long);"
36;node;;servo.c;servo_set;195;3;0;0;0;0;0;;34,35;" (servo_value) > (2000UL * 16);"
37;node;;servo.c;servo_set;195;3;0;0;0;0;0;;32,36;" [B43.4] ? ([B38.1]) : ([B39.1]); servo_widths[3] = ([B37.1]); servo_value = (1000 * 16) + (int16_t)((2 * values[0]) * 0.83333333333299997); (servo_value) < (1000UL * 16);"
38;node;;servo.c;servo_set;195;3;0;0;0;0;0;;37;" 1000UL * 16;"
39;node;;servo.c;servo_set;195;3;0;0;0;0;0;;37;" [B42.1] ? ([B40.1]) : [B41.1];"
40;node;;servo.c;servo_set;195;3;0;0;0;0;0;;39;" 2000UL * 16;"
41;node;;servo.c;servo_set;195;3;0;0;0;0;0;;39;" (servo_value) (ImplicitCastExpr, IntegralCast, unsigned long);"
42;node;;servo.c;servo_set;195;3;0;0;0;0;0;;40,41;" (servo_value) > (2000UL * 16);"
43;node;;servo.c;servo_set;195;3;0;0;0;0;0;;38,42;" uint16_t servo_value;; int16_t _var_roll;; servo_value = (1000 * 16) + (int16_t)((2 * values[5]) * 0.83333333333299997); (servo_value) < (1000UL * 16);"
44;entry;;servo.c;servo_set;194;40;194;40;0;0;0;;43;""

#BB.index;BB.type;BB.label;File;Subprogram;Line.Begin;Col.Begin;Line.End;Col.End;Exec.Count;Exec.Time.Per;function.call.type;function.call.callees;Successors;Code
0;exit;;servo.c;servo_set_one;173;1;173;1;0;0;0;;;""
1;node;;servo.c;servo_set_one;172;3;172;50;0;0;0;;0;" [B7.1] ? ([B2.1]) : ([B3.1]); servo_widths[servo] = ([B1.1]);"
2;node;;servo.c;servo_set_one;172;25;0;0;0;0;0;;1;" 1000UL * 16;"
3;node;;servo.c;servo_set_one;172;25;0;0;0;0;0;;1;" [B6.1] ? ([B4.1]) : [B5.1];"
4;node;;servo.c;servo_set_one;172;25;0;0;0;0;0;;3;" 2000UL * 16;"
5;node;;servo.c;servo_set_one;172;25;0;0;0;0;0;;3;" (16 * value_us) (ImplicitCastExpr, IntegralCast, unsigned long);"
6;node;;servo.c;servo_set_one;172;25;0;0;0;0;0;;4,5;" (16 * value_us) > (2000UL * 16);"
7;node;;servo.c;servo_set_one;172;25;0;0;0;0;0;;2,6;" (16 * value_us) < (1000UL * 16);"
8;entry;;servo.c;servo_set_one;171;55;171;55;0;0;0;;7;""

#BB.index;BB.type;BB.label;File;Subprogram;Line.Begin;Col.Begin;Line.End;Col.End;Exec.Count;Exec.Time.Per;function.call.type;function.call.callees;Successors;Code
0;exit;;servo.c;servo_transmit;185;1;185;1;0;0;0;;;""
1;node;;servo.c;servo_transmit;184;3;184;31;0;0;1;uart_transmit;0;" uart_transmit((uint8_t)'\n');"
2;node;;servo.c;servo_transmit;180;45;180;52;0;0;0;;4;" servo++;"
3;node;;servo.c;servo_transmit;181;5;182;57;0;0;1;uart_transmit,uart_transmit;2;" uart_transmit((uint8_t)(servo_widths[servo] >> 8)); uart_transmit((uint8_t)(servo_widths[servo] & 255));"
4;node;;servo.c;servo_transmit;180;18;180;43;0;0;0;;3,1;" servo < 10;"
5;node;;servo.c;servo_transmit;177;3;180;16;0;0;1;uart_transmit,uart_transmit;4;" uint8_t servo;; uart_transmit((uint8_t)0); uart_transmit((uint8_t)0); servo = 0;"
6;entry;;servo.c;servo_transmit;176;23;176;23;0;0;0;;5;""

#BB.index;BB.type;BB.label;File;Subprogram;Line.Begin;Col.Begin;Line.End;Col.End;Exec.Count;Exec.Time.Per;function.call.type;function.call.callees;Successors;Code
0;exit;;spi.c;spi_init;72;1;72;1;0;0;0;;;""
1;node;;spi.c;spi_init;60;3;71;20;0;0;0;;0;" to_mega128.status = 0; to_mega128.nb_err = 0; (*(volatile uint8_t *)((23) + 32)) |= (1 << (4)); (*(volatile uint8_t *)((13) + 32)) = (1 << (6)); (*(volatile uint8_t *)((13) + 32)) |= (1 << (7));"
2;entry;;spi.c;spi_init;59;22;59;22;0;0;0;;1;""

#BB.index;BB.type;BB.label;File;Subprogram;Line.Begin;Col.Begin;Line.End;Col.End;Exec.Count;Exec.Time.Per;function.call.type;function.call.callees;Successors;Code
0;exit;;spi.c;spi_reset;57;1;57;1;0;0;0;;;""
1;node;;spi.c;spi_reset;52;3;56;32;0;0;0;;0;" idx_buf = 0; xor_in = 0; xor_out = ((uint8_t *)&to_mega128)[idx_buf]; (*(volatile uint8_t *)((15) + 32)) = xor_out; mega128_receive_valid = 0;"
2;entry;;spi.c;spi_reset;51;23;51;23;0;0;0;;1;""

#BB.index;BB.type;BB.label;File;Subprogram;Line.Begin;Col.Begin;Line.End;Col.End;Exec.Count;Exec.Time.Per;function.call.type;function.call.callees;Successors;Code
0;exit;;uart.c;uart_init_rx;61;1;61;1;0;0;0;;;""
1;node;;uart.c;uart_init_rx;58;3;58;21;0;0;0;;0;" (*(volatile uint8_t *)((10) + 32)) |= (1 << (4)); (*(volatile uint8_t *)(((uint16_t)&((*(volatile uint8_t *)((10) + 32)))))) |= (1 << (7));"
2;entry;;uart.c;uart_init_rx;56;22;56;22;0;0;0;;1;""

#BB.index;BB.type;BB.label;File;Subprogram;Line.Begin;Col.Begin;Line.End;Col.End;Exec.Count;Exec.Time.Per;function.call.type;function.call.callees;Successors;Code
0;exit;;uart.c;uart_init_tx;54;1;54;1;0;0;0;;;""
1;node;;uart.c;uart_init_tx;46;3;53;47;0;0;0;;0;" (*(volatile uint8_t *)((32) + 32)) = 0; (*(volatile uint8_t *)((9) + 32)) = 25; (*(volatile uint8_t *)((11) + 32)) = 0; (*(volatile uint8_t *)((10) + 32)) = (1 << (3)); (*(volatile uint8_t *)((32) + 32)) = (1 << (7)) | (1 << (2)) | (1 << (1));"
2;entry;;uart.c;uart_init_tx;44;28;44;28;0;0;0;;1;""

#BB.index;BB.type;BB.label;File;Subprogram;Line.Begin;Col.Begin;Line.End;Col.End;Exec.Count;Exec.Time.Per;function.call.type;function.call.callees;Successors;Code
0;exit;;uart.c;uart_print_hex;85;1;85;1;0;0;0;;;""
1;node;;uart.c;uart_print_hex;79;3;84;26;0;0;1;uart_transmit,uart_transmit;0;" const uint8_t hex[16] = {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'};; uint8_t high = (c & 240) >> 4;; uint8_t low = c & 15;; uart_transmit(hex[high]); uart_transmit(hex[low]);"
2;entry;;uart.c;uart_print_hex;78;36;78;36;0;0;0;;1;""

#BB.index;BB.type;BB.label;File;Subprogram;Line.Begin;Col.Begin;Line.End;Col.End;Exec.Count;Exec.Time.Per;function.call.type;function.call.callees;Successors;Code
0;exit;;uart.c;uart_print_hex16;92;1;92;1;0;0;0;;;""
1;node;;uart.c;uart_print_hex16;88;3;91;22;0;0;1;uart_print_hex,uart_print_hex;0;" uint8_t high = (uint8_t)(c >> 8);; uint8_t low = (uint8_t)(c);; uart_print_hex(high); uart_print_hex(low);"
2;entry;;uart.c;uart_print_hex16;87;39;87;39;0;0;0;;1;""

#BB.index;BB.type;BB.label;File;Subprogram;Line.Begin;Col.Begin;Line.End;Col.End;Exec.Count;Exec.Time.Per;function.call.type;function.call.callees;Successors;Code
0;exit;;uart.c;uart_print_string;100;1;100;1;0;0;0;;;""
2;node;;uart.c;uart_print_string;97;5;98;8;0;0;1;uart_transmit;3;" uart_transmit(s[i]); i++;"
3;node;;uart.c;uart_print_string;96;10;96;14;0;0;0;;2,0;" s[i] (ImplicitCastExpr, LValueToRValue, uint8_t);"
4;node;;uart.c;uart_print_string;95;3;95;17;0;0;0;;3;" uint8_t i = 0;;"
5;entry;;uart.c;uart_print_string;94;43;94;43;0;0;0;;4;""

#BB.index;BB.type;BB.label;File;Subprogram;Line.Begin;Col.Begin;Line.End;Col.End;Exec.Count;Exec.Time.Per;function.call.type;function.call.callees;Successors;Code
0;exit;;uart.c;uart_transmit;76;1;76;1;0;0;0;;;""
1;node;;uart.c;uart_transmit;73;5;73;15;0;0;0;;0;" (*(volatile uint8_t *)((12) + 32)) = data; (*(volatile uint8_t *)(((uint16_t)&((*(volatile uint8_t *)((10) + 32)))))) |= (1 << (6));"
2;node;;uart.c;uart_transmit;70;5;71;14;0;0;0;;0;" tx_buf[tx_head] = data; tx_head++;"
3;node;;uart.c;uart_transmit;68;7;68;13;0;0;0;;0;" return;;"
4;node;;uart.c;uart_transmit;66;9;66;31;0;0;0;;3,2;" tx_tail == tx_head + 1;"
5;node;;uart.c;uart_transmit;64;7;64;25;0;0;0;;4,1;" (*(volatile uint8_t *)((10) + 32)) & (1 << (6));"
6;entry;;uart.c;uart_transmit;63;43;63;43;0;0;0;;5;""

