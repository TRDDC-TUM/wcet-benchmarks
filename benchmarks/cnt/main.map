Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/libm.a(divsf3.o)
                              cnt.o (__divsf3)
/usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/libm.a(divsf3x.o)
                              /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/libm.a(divsf3.o) (__divsf3x)
/usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/libm.a(floatsisf.o)
                              cnt.o (__floatsisf)
/usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/libm.a(fp_inf.o)
                              /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/libm.a(divsf3x.o) (__fp_inf)
/usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/libm.a(fp_nan.o)
                              /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/libm.a(divsf3x.o) (__fp_nan)
/usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/libm.a(fp_pscA.o)
                              /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/libm.a(divsf3x.o) (__fp_pscA)
/usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/libm.a(fp_pscB.o)
                              /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/libm.a(divsf3x.o) (__fp_pscB)
/usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/libm.a(fp_round.o)
                              /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/libm.a(divsf3.o) (__fp_round)
/usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/libm.a(fp_split3.o)
                              /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/libm.a(divsf3x.o) (__fp_split3)
/usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/libm.a(fp_zero.o)
                              /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/libm.a(divsf3x.o) (__fp_szero)
/usr/lib/gcc/avr/4.7.2/avr51/libgcc.a(_divmodhi4.o)
                              cnt.o (__divmodhi4)
/usr/lib/gcc/avr/4.7.2/avr51/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/crtm128.o (exit)
/usr/lib/gcc/avr/4.7.2/avr51/libgcc.a(_clear_bss.o)
                              cnt.o (__do_clear_bss)
/usr/lib/gcc/avr/4.7.2/avr51/libgcc.a(_udivmodhi4.o)
                              /usr/lib/gcc/avr/4.7.2/avr51/libgcc.a(_divmodhi4.o) (__udivmodhi4)

Allocating common symbols
Common symbol       size              file

Seed                0x2               cnt.o
Postotal            0x2               cnt.o
Array               0xc8              cnt.o
Negtotal            0x2               cnt.o
Negcnt              0x2               cnt.o
Poscnt              0x2               cnt.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800100 0x000000000000ff00 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/crtm128.o
LOAD cnt.o
LOAD /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/libm.a
LOAD /usr/lib/gcc/avr/4.7.2/avr51/libgcc.a
LOAD /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/libc.a
LOAD /usr/lib/gcc/avr/4.7.2/avr51/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x5ee
 *(.vectors)
 .vectors       0x0000000000000000       0x8c /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/crtm128.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x000000000000008c                . = ALIGN (0x2)
                0x000000000000008c                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x000000000000008c        0x0 linker stubs
 *(.trampolines*)
                0x000000000000008c                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x000000000000008c                __ctors_start = .
 *(.ctors)
                0x000000000000008c                __ctors_end = .
                0x000000000000008c                __dtors_start = .
 *(.dtors)
                0x000000000000008c                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x000000000000008c        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/crtm128.o
                0x000000000000008c                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x000000000000008c        0xc /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/crtm128.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000098       0x10 /usr/lib/gcc/avr/4.7.2/avr51/libgcc.a(_clear_bss.o)
                0x0000000000000098                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000000000000a8        0x8 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/crtm128.o
 *(.init9)
 *(.text)
 .text          0x00000000000000b0        0x4 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/crtm128.o
                0x00000000000000b0                __vector_22
                0x00000000000000b0                __vector_28
                0x00000000000000b0                __vector_1
                0x00000000000000b0                __vector_32
                0x00000000000000b0                __vector_34
                0x00000000000000b0                __vector_24
                0x00000000000000b0                __vector_12
                0x00000000000000b0                __bad_interrupt
                0x00000000000000b0                __vector_6
                0x00000000000000b0                __vector_31
                0x00000000000000b0                __vector_3
                0x00000000000000b0                __vector_23
                0x00000000000000b0                __vector_30
                0x00000000000000b0                __vector_25
                0x00000000000000b0                __vector_11
                0x00000000000000b0                __vector_13
                0x00000000000000b0                __vector_17
                0x00000000000000b0                __vector_19
                0x00000000000000b0                __vector_7
                0x00000000000000b0                __vector_27
                0x00000000000000b0                __vector_5
                0x00000000000000b0                __vector_33
                0x00000000000000b0                __vector_4
                0x00000000000000b0                __vector_9
                0x00000000000000b0                __vector_2
                0x00000000000000b0                __vector_21
                0x00000000000000b0                __vector_15
                0x00000000000000b0                __vector_29
                0x00000000000000b0                __vector_8
                0x00000000000000b0                __vector_26
                0x00000000000000b0                __vector_14
                0x00000000000000b0                __vector_10
                0x00000000000000b0                __vector_16
                0x00000000000000b0                __vector_18
                0x00000000000000b0                __vector_20
 .text          0x00000000000000b4      0x2fa cnt.o
                0x00000000000000b4                main
                0x00000000000000d2                Test
                0x0000000000000188                Initialize
                0x000000000000020e                InitSeed
                0x0000000000000228                Sum
                0x000000000000036e                RandomInteger
 .text          0x00000000000003ae        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/libm.a(divsf3.o)
 .text          0x00000000000003ae        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/libm.a(divsf3x.o)
 .text          0x00000000000003ae        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/libm.a(floatsisf.o)
 .text          0x00000000000003ae        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/libm.a(fp_inf.o)
 .text          0x00000000000003ae        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/libm.a(fp_nan.o)
 .text          0x00000000000003ae        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/libm.a(fp_pscA.o)
 .text          0x00000000000003ae        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/libm.a(fp_pscB.o)
 .text          0x00000000000003ae        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/libm.a(fp_round.o)
 .text          0x00000000000003ae        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/libm.a(fp_split3.o)
 .text          0x00000000000003ae        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/libm.a(fp_zero.o)
 .text          0x00000000000003ae        0x0 /usr/lib/gcc/avr/4.7.2/avr51/libgcc.a(_divmodhi4.o)
 .text          0x00000000000003ae        0x0 /usr/lib/gcc/avr/4.7.2/avr51/libgcc.a(_exit.o)
 .text          0x00000000000003ae        0x0 /usr/lib/gcc/avr/4.7.2/avr51/libgcc.a(_clear_bss.o)
 .text          0x00000000000003ae        0x0 /usr/lib/gcc/avr/4.7.2/avr51/libgcc.a(_udivmodhi4.o)
                0x00000000000003ae                . = ALIGN (0x2)
 *(.text.*)
 .text.avr-libc.fplib
                0x00000000000003ae        0x4 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/libm.a(divsf3.o)
                0x00000000000003ae                __divsf3
 .text.avr-libc.fplib
                0x00000000000003b2       0xcc /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/libm.a(divsf3x.o)
                0x00000000000003c8                __divsf3x
                0x00000000000003cc                __divsf3_pse
 .text.avr-libc.fplib
                0x000000000000047e       0x7a /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/libm.a(floatsisf.o)
                0x000000000000047e                __floatunsisf
                0x0000000000000482                __floatsisf
 .text.avr-libc.fplib
                0x00000000000004f8        0xc /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/libm.a(fp_inf.o)
                0x00000000000004f8                __fp_inf
 .text.avr-libc.fplib
                0x0000000000000504        0x6 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/libm.a(fp_nan.o)
                0x0000000000000504                __fp_nan
 .text.avr-libc.fplib
                0x000000000000050a        0xe /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/libm.a(fp_pscA.o)
                0x000000000000050a                __fp_pscA
 .text.avr-libc.fplib
                0x0000000000000518        0xe /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/libm.a(fp_pscB.o)
                0x0000000000000518                __fp_pscB
 .text.avr-libc.fplib
                0x0000000000000526       0x22 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/libm.a(fp_round.o)
                0x0000000000000526                __fp_round
 .text.avr-libc.fplib
                0x0000000000000548       0x44 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/libm.a(fp_split3.o)
                0x0000000000000548                __fp_split3
                0x0000000000000558                __fp_splitA
 .text.avr-libc.fplib
                0x000000000000058c        0xe /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/libm.a(fp_zero.o)
                0x000000000000058c                __fp_zero
                0x000000000000058e                __fp_szero
 .text.libgcc.mul
                0x000000000000059a        0x0 /usr/lib/gcc/avr/4.7.2/avr51/libgcc.a(_divmodhi4.o)
 .text.libgcc.div
                0x000000000000059a       0x28 /usr/lib/gcc/avr/4.7.2/avr51/libgcc.a(_divmodhi4.o)
                0x000000000000059a                __divmodhi4
                0x000000000000059a                _div
 .text.libgcc   0x00000000000005c2        0x0 /usr/lib/gcc/avr/4.7.2/avr51/libgcc.a(_divmodhi4.o)
 .text.libgcc.prologue
                0x00000000000005c2        0x0 /usr/lib/gcc/avr/4.7.2/avr51/libgcc.a(_divmodhi4.o)
 .text.libgcc.builtins
                0x00000000000005c2        0x0 /usr/lib/gcc/avr/4.7.2/avr51/libgcc.a(_divmodhi4.o)
 .text.libgcc.fmul
                0x00000000000005c2        0x0 /usr/lib/gcc/avr/4.7.2/avr51/libgcc.a(_divmodhi4.o)
 .text.libgcc.mul
                0x00000000000005c2        0x0 /usr/lib/gcc/avr/4.7.2/avr51/libgcc.a(_exit.o)
 .text.libgcc.div
                0x00000000000005c2        0x0 /usr/lib/gcc/avr/4.7.2/avr51/libgcc.a(_exit.o)
 .text.libgcc   0x00000000000005c2        0x0 /usr/lib/gcc/avr/4.7.2/avr51/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00000000000005c2        0x0 /usr/lib/gcc/avr/4.7.2/avr51/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00000000000005c2        0x0 /usr/lib/gcc/avr/4.7.2/avr51/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00000000000005c2        0x0 /usr/lib/gcc/avr/4.7.2/avr51/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x00000000000005c2        0x0 /usr/lib/gcc/avr/4.7.2/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x00000000000005c2        0x0 /usr/lib/gcc/avr/4.7.2/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000000000005c2        0x0 /usr/lib/gcc/avr/4.7.2/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x00000000000005c2        0x0 /usr/lib/gcc/avr/4.7.2/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x00000000000005c2        0x0 /usr/lib/gcc/avr/4.7.2/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x00000000000005c2        0x0 /usr/lib/gcc/avr/4.7.2/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.mul
                0x00000000000005c2        0x0 /usr/lib/gcc/avr/4.7.2/avr51/libgcc.a(_udivmodhi4.o)
 .text.libgcc.div
                0x00000000000005c2       0x28 /usr/lib/gcc/avr/4.7.2/avr51/libgcc.a(_udivmodhi4.o)
                0x00000000000005c2                __udivmodhi4
 .text.libgcc   0x00000000000005ea        0x0 /usr/lib/gcc/avr/4.7.2/avr51/libgcc.a(_udivmodhi4.o)
 .text.libgcc.prologue
                0x00000000000005ea        0x0 /usr/lib/gcc/avr/4.7.2/avr51/libgcc.a(_udivmodhi4.o)
 .text.libgcc.builtins
                0x00000000000005ea        0x0 /usr/lib/gcc/avr/4.7.2/avr51/libgcc.a(_udivmodhi4.o)
 .text.libgcc.fmul
                0x00000000000005ea        0x0 /usr/lib/gcc/avr/4.7.2/avr51/libgcc.a(_udivmodhi4.o)
                0x00000000000005ea                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000000000005ea        0x0 /usr/lib/gcc/avr/4.7.2/avr51/libgcc.a(_exit.o)
                0x00000000000005ea                exit
                0x00000000000005ea                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000000000005ea        0x4 /usr/lib/gcc/avr/4.7.2/avr51/libgcc.a(_exit.o)
 *(.fini0)
                0x00000000000005ee                _etext = .

.data           0x0000000000800100        0x0 load address 0x00000000000005ee
                0x0000000000800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/crtm128.o
 .data          0x0000000000800100        0x0 cnt.o
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/libm.a(divsf3.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/libm.a(divsf3x.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/libm.a(floatsisf.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/libm.a(fp_inf.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/libm.a(fp_nan.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/libm.a(fp_pscA.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/libm.a(fp_pscB.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/libm.a(fp_round.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/libm.a(fp_split3.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/libm.a(fp_zero.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.7.2/avr51/libgcc.a(_divmodhi4.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.7.2/avr51/libgcc.a(_exit.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.7.2/avr51/libgcc.a(_clear_bss.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.7.2/avr51/libgcc.a(_udivmodhi4.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800100                . = ALIGN (0x2)
                0x0000000000800100                _edata = .
                0x0000000000800100                PROVIDE (__data_end, .)

.bss            0x0000000000800100       0xd2
                0x0000000000800100                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800100        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/crtm128.o
 .bss           0x0000000000800100        0x0 cnt.o
 .bss           0x0000000000800100        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/libm.a(divsf3.o)
 .bss           0x0000000000800100        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/libm.a(divsf3x.o)
 .bss           0x0000000000800100        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/libm.a(floatsisf.o)
 .bss           0x0000000000800100        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/libm.a(fp_inf.o)
 .bss           0x0000000000800100        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/libm.a(fp_nan.o)
 .bss           0x0000000000800100        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/libm.a(fp_pscA.o)
 .bss           0x0000000000800100        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/libm.a(fp_pscB.o)
 .bss           0x0000000000800100        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/libm.a(fp_round.o)
 .bss           0x0000000000800100        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/libm.a(fp_split3.o)
 .bss           0x0000000000800100        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/libm.a(fp_zero.o)
 .bss           0x0000000000800100        0x0 /usr/lib/gcc/avr/4.7.2/avr51/libgcc.a(_divmodhi4.o)
 .bss           0x0000000000800100        0x0 /usr/lib/gcc/avr/4.7.2/avr51/libgcc.a(_exit.o)
 .bss           0x0000000000800100        0x0 /usr/lib/gcc/avr/4.7.2/avr51/libgcc.a(_clear_bss.o)
 .bss           0x0000000000800100        0x0 /usr/lib/gcc/avr/4.7.2/avr51/libgcc.a(_udivmodhi4.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x0000000000800100       0xd2 cnt.o
                0x0000000000800100                Seed
                0x0000000000800102                Postotal
                0x0000000000800104                Array
                0x00000000008001cc                Negtotal
                0x00000000008001ce                Negcnt
                0x00000000008001d0                Poscnt
                0x00000000008001d2                PROVIDE (__bss_end, .)
                0x00000000000005ee                __data_load_start = LOADADDR (.data)
                0x00000000000005ee                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00000000008001d2        0x0
                0x00000000008001d2                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00000000008001d2                PROVIDE (__noinit_end, .)
                0x00000000008001d2                _end = .
                0x00000000008001d2                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x0000000000000000     0x1470
 *(.stab)
 .stab          0x0000000000000000      0x6cc /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/crtm128.o
 .stab          0x00000000000006cc       0x48 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/libm.a(divsf3.o)
                                         0x54 (size before relaxing)
 .stab          0x0000000000000714      0x510 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/libm.a(divsf3x.o)
                                        0x51c (size before relaxing)
 .stab          0x0000000000000c24      0x318 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/libm.a(floatsisf.o)
                                        0x324 (size before relaxing)
 .stab          0x0000000000000f3c       0x78 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/libm.a(fp_inf.o)
                                         0x84 (size before relaxing)
 .stab          0x0000000000000fb4       0x54 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/libm.a(fp_nan.o)
                                         0x60 (size before relaxing)
 .stab          0x0000000000001008       0x84 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/libm.a(fp_pscA.o)
                                         0x90 (size before relaxing)
 .stab          0x000000000000108c       0x84 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/libm.a(fp_pscB.o)
                                         0x90 (size before relaxing)
 .stab          0x0000000000001110       0xfc /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/libm.a(fp_round.o)
                                        0x108 (size before relaxing)
 .stab          0x000000000000120c      0x1d4 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/libm.a(fp_split3.o)
                                        0x1e0 (size before relaxing)
 .stab          0x00000000000013e0       0x90 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/libm.a(fp_zero.o)
                                         0x9c (size before relaxing)

.stabstr        0x0000000000000000      0x222
 *(.stabstr)
 .stabstr       0x0000000000000000      0x222 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/crtm128.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 cnt.o
                                         0x12 (size before relaxing)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x0000000000000000       0x20
 *(.debug_aranges)
 .debug_aranges
                0x0000000000000000       0x20 cnt.o

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000      0x260
 *(.debug_info)
 .debug_info    0x0000000000000000      0x260 cnt.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x0000000000000000       0xeb
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000       0xeb cnt.o

.debug_line     0x0000000000000000       0x9d
 *(.debug_line)
 .debug_line    0x0000000000000000       0x9d cnt.o

.debug_frame    0x0000000000000000      0x11c
 *(.debug_frame)
 .debug_frame   0x0000000000000000      0x11c cnt.o

.debug_str      0x0000000000000000      0x119
 *(.debug_str)
 .debug_str     0x0000000000000000      0x119 cnt.o
                                        0x11e (size before relaxing)

.debug_loc      0x0000000000000000      0x23d
 *(.debug_loc)
 .debug_loc     0x0000000000000000      0x23d cnt.o

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(main.elf elf32-avr)
LOAD linker stubs

Cross Reference Table

Symbol                                            File
Array                                             cnt.o
InitSeed                                          cnt.o
Initialize                                        cnt.o
Negcnt                                            cnt.o
Negtotal                                          cnt.o
Poscnt                                            cnt.o
Postotal                                          cnt.o
RandomInteger                                     cnt.o
Seed                                              cnt.o
Sum                                               cnt.o
Test                                              cnt.o
__bad_interrupt                                   /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/crtm128.o
__bss_end                                         /usr/lib/gcc/avr/4.7.2/avr51/libgcc.a(_clear_bss.o)
__bss_start                                       /usr/lib/gcc/avr/4.7.2/avr51/libgcc.a(_clear_bss.o)
__divmodhi4                                       /usr/lib/gcc/avr/4.7.2/avr51/libgcc.a(_divmodhi4.o)
                                                  cnt.o
__divsf3                                          /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/libm.a(divsf3.o)
                                                  cnt.o
__divsf3_pse                                      /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/libm.a(divsf3x.o)
__divsf3x                                         /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/libm.a(divsf3x.o)
                                                  /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/libm.a(divsf3.o)
__do_clear_bss                                    /usr/lib/gcc/avr/4.7.2/avr51/libgcc.a(_clear_bss.o)
                                                  cnt.o
__floatsisf                                       /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/libm.a(floatsisf.o)
                                                  cnt.o
__floatunsisf                                     /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/libm.a(floatsisf.o)
__fp_inf                                          /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/libm.a(fp_inf.o)
                                                  /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/libm.a(divsf3x.o)
__fp_nan                                          /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/libm.a(fp_nan.o)
                                                  /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/libm.a(divsf3x.o)
__fp_pscA                                         /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/libm.a(fp_pscA.o)
                                                  /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/libm.a(divsf3x.o)
__fp_pscB                                         /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/libm.a(fp_pscB.o)
                                                  /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/libm.a(divsf3x.o)
__fp_round                                        /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/libm.a(fp_round.o)
                                                  /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/libm.a(divsf3.o)
__fp_split3                                       /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/libm.a(fp_split3.o)
                                                  /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/libm.a(divsf3x.o)
__fp_splitA                                       /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/libm.a(fp_split3.o)
__fp_szero                                        /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/libm.a(fp_zero.o)
                                                  /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/libm.a(divsf3x.o)
__fp_zero                                         /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/libm.a(fp_zero.o)
__heap_end                                        /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/crtm128.o
__init                                            /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/crtm128.o
__stack                                           /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/crtm128.o
__udivmodhi4                                      /usr/lib/gcc/avr/4.7.2/avr51/libgcc.a(_udivmodhi4.o)
                                                  /usr/lib/gcc/avr/4.7.2/avr51/libgcc.a(_divmodhi4.o)
__vector_1                                        /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/crtm128.o
__vector_10                                       /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/crtm128.o
__vector_11                                       /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/crtm128.o
__vector_12                                       /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/crtm128.o
__vector_13                                       /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/crtm128.o
__vector_14                                       /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/crtm128.o
__vector_15                                       /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/crtm128.o
__vector_16                                       /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/crtm128.o
__vector_17                                       /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/crtm128.o
__vector_18                                       /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/crtm128.o
__vector_19                                       /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/crtm128.o
__vector_2                                        /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/crtm128.o
__vector_20                                       /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/crtm128.o
__vector_21                                       /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/crtm128.o
__vector_22                                       /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/crtm128.o
__vector_23                                       /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/crtm128.o
__vector_24                                       /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/crtm128.o
__vector_25                                       /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/crtm128.o
__vector_26                                       /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/crtm128.o
__vector_27                                       /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/crtm128.o
__vector_28                                       /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/crtm128.o
__vector_29                                       /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/crtm128.o
__vector_3                                        /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/crtm128.o
__vector_30                                       /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/crtm128.o
__vector_31                                       /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/crtm128.o
__vector_32                                       /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/crtm128.o
__vector_33                                       /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/crtm128.o
__vector_34                                       /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/crtm128.o
__vector_4                                        /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/crtm128.o
__vector_5                                        /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/crtm128.o
__vector_6                                        /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/crtm128.o
__vector_7                                        /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/crtm128.o
__vector_8                                        /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/crtm128.o
__vector_9                                        /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/crtm128.o
__vector_default                                  /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/crtm128.o
__vectors                                         /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/crtm128.o
_div                                              /usr/lib/gcc/avr/4.7.2/avr51/libgcc.a(_divmodhi4.o)
_exit                                             /usr/lib/gcc/avr/4.7.2/avr51/libgcc.a(_exit.o)
exit                                              /usr/lib/gcc/avr/4.7.2/avr51/libgcc.a(_exit.o)
                                                  /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/crtm128.o
main                                              cnt.o
                                                  /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/crtm128.o
