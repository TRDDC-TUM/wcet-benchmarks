   1               		.file	"cnt.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               		.cfi_sections	.debug_frame
  11               		.comm	Seed,2,1
  12               		.comm	Array,200,1
  13               		.comm	Postotal,2,1
  14               		.comm	Negtotal,2,1
  15               		.comm	Poscnt,2,1
  16               		.comm	Negcnt,2,1
  17               	.global	main
  19               	main:
  20               	.LFB0:
  21               		.file 1 "cnt.c"
   1:cnt.c         **** /* $Id: cnt.c,v 1.3 2005/04/04 11:34:58 csg Exp $ */
   2:cnt.c         **** 
   3:cnt.c         **** /* sumcntmatrix.c */
   4:cnt.c         **** 
   5:cnt.c         **** //#include <sys/types.h>
   6:cnt.c         **** //#include <sys/times.h>
   7:cnt.c         **** 
   8:cnt.c         **** // #define WORSTCASE 1
   9:cnt.c         **** // #define MAXSIZE 100 Changed JG/Ebbe
  10:cnt.c         **** #define MAXSIZE 10
  11:cnt.c         **** 
  12:cnt.c         **** // Typedefs
  13:cnt.c         **** typedef int matrix [MAXSIZE][MAXSIZE];
  14:cnt.c         **** 
  15:cnt.c         **** // Forwards declarations
  16:cnt.c         **** int main(void);
  17:cnt.c         **** int Test(matrix);
  18:cnt.c         **** int Initialize(matrix);
  19:cnt.c         **** int InitSeed(void);
  20:cnt.c         **** void Sum(matrix);
  21:cnt.c         **** int RandomInteger(void);
  22:cnt.c         **** 
  23:cnt.c         **** // Globals
  24:cnt.c         **** int Seed;
  25:cnt.c         **** matrix Array;
  26:cnt.c         **** int Postotal, Negtotal, Poscnt, Negcnt;
  27:cnt.c         **** 
  28:cnt.c         **** // The main function
  29:cnt.c         **** int main (void)
  30:cnt.c         **** {
  22               		.loc 1 30 0
  23               		.cfi_startproc
  24 0000 CF93      		push r28
  25               	.LCFI0:
  26               		.cfi_def_cfa_offset 3
  27               		.cfi_offset 28, -2
  28 0002 DF93      		push r29
  29               	.LCFI1:
  30               		.cfi_def_cfa_offset 4
  31               		.cfi_offset 29, -3
  32 0004 CDB7      		in r28,__SP_L__
  33 0006 DEB7      		in r29,__SP_H__
  34               	.LCFI2:
  35               		.cfi_def_cfa_register 28
  36               	/* prologue: function */
  37               	/* frame size = 0 */
  38               	/* stack size = 2 */
  39               	.L__stack_usage = 2
  31:cnt.c         ****    InitSeed();
  40               		.loc 1 31 0
  41 0008 0E94 0000 		call InitSeed
  32:cnt.c         ****    //printf("\n   *** MATRIX SUM AND COUNT BENCHMARK TEST ***\n\n");
  33:cnt.c         ****    //printf("RESULTS OF THE TEST:\n");
  34:cnt.c         ****    Test(Array);
  42               		.loc 1 34 0
  43 000c 80E0      		ldi r24,lo8(Array)
  44 000e 90E0      		ldi r25,hi8(Array)
  45 0010 0E94 0000 		call Test
  35:cnt.c         ****    return 1;
  46               		.loc 1 35 0
  47 0014 81E0      		ldi r24,lo8(1)
  48 0016 90E0      		ldi r25,0
  49               	/* epilogue start */
  36:cnt.c         **** }
  50               		.loc 1 36 0
  51 0018 DF91      		pop r29
  52 001a CF91      		pop r28
  53 001c 0895      		ret
  54               		.cfi_endproc
  55               	.LFE0:
  57               	.global	__floatsisf
  58               	.global	__divsf3
  59               	.global	Test
  61               	Test:
  62               	.LFB1:
  37:cnt.c         **** 
  38:cnt.c         **** 
  39:cnt.c         **** int Test(matrix Array)
  40:cnt.c         **** {
  63               		.loc 1 40 0
  64               		.cfi_startproc
  65 001e EF92      		push r14
  66               	.LCFI3:
  67               		.cfi_def_cfa_offset 3
  68               		.cfi_offset 14, -2
  69 0020 FF92      		push r15
  70               	.LCFI4:
  71               		.cfi_def_cfa_offset 4
  72               		.cfi_offset 15, -3
  73 0022 0F93      		push r16
  74               	.LCFI5:
  75               		.cfi_def_cfa_offset 5
  76               		.cfi_offset 16, -4
  77 0024 1F93      		push r17
  78               	.LCFI6:
  79               		.cfi_def_cfa_offset 6
  80               		.cfi_offset 17, -5
  81 0026 CF93      		push r28
  82               	.LCFI7:
  83               		.cfi_def_cfa_offset 7
  84               		.cfi_offset 28, -6
  85 0028 DF93      		push r29
  86               	.LCFI8:
  87               		.cfi_def_cfa_offset 8
  88               		.cfi_offset 29, -7
  89 002a CDB7      		in r28,__SP_L__
  90 002c DEB7      		in r29,__SP_H__
  91               	.LCFI9:
  92               		.cfi_def_cfa_register 28
  93 002e 2E97      		sbiw r28,14
  94               	.LCFI10:
  95               		.cfi_def_cfa_offset 22
  96 0030 0FB6      		in __tmp_reg__,__SREG__
  97 0032 F894      		cli
  98 0034 DEBF      		out __SP_H__,r29
  99 0036 0FBE      		out __SREG__,__tmp_reg__
 100 0038 CDBF      		out __SP_L__,r28
 101               	/* prologue: function */
 102               	/* frame size = 14 */
 103               	/* stack size = 20 */
 104               	.L__stack_usage = 20
 105 003a 9E87      		std Y+14,r25
 106 003c 8D87      		std Y+13,r24
  41:cnt.c         ****    long StartTime, StopTime;
  42:cnt.c         ****    float TotalTime;
  43:cnt.c         **** 
  44:cnt.c         ****    Initialize(Array);
 107               		.loc 1 44 0
 108 003e 8D85      		ldd r24,Y+13
 109 0040 9E85      		ldd r25,Y+14
 110 0042 0E94 0000 		call Initialize
  45:cnt.c         ****    StartTime = 1000.0; //ttime();
 111               		.loc 1 45 0
 112 0046 88EE      		ldi r24,lo8(-24)
 113 0048 93E0      		ldi r25,lo8(3)
 114 004a A0E0      		ldi r26,0
 115 004c B0E0      		ldi r27,0
 116 004e 8983      		std Y+1,r24
 117 0050 9A83      		std Y+2,r25
 118 0052 AB83      		std Y+3,r26
 119 0054 BC83      		std Y+4,r27
  46:cnt.c         ****    Sum(Array);
 120               		.loc 1 46 0
 121 0056 8D85      		ldd r24,Y+13
 122 0058 9E85      		ldd r25,Y+14
 123 005a 0E94 0000 		call Sum
  47:cnt.c         ****    StopTime = 1500.0; //ttime();
 124               		.loc 1 47 0
 125 005e 8CED      		ldi r24,lo8(-36)
 126 0060 95E0      		ldi r25,lo8(5)
 127 0062 A0E0      		ldi r26,0
 128 0064 B0E0      		ldi r27,0
 129 0066 8D83      		std Y+5,r24
 130 0068 9E83      		std Y+6,r25
 131 006a AF83      		std Y+7,r26
 132 006c B887      		std Y+8,r27
  48:cnt.c         **** 
  49:cnt.c         ****    TotalTime = (StopTime - StartTime) / 1000.0;
 133               		.loc 1 49 0
 134 006e 2D81      		ldd r18,Y+5
 135 0070 3E81      		ldd r19,Y+6
 136 0072 4F81      		ldd r20,Y+7
 137 0074 5885      		ldd r21,Y+8
 138 0076 8981      		ldd r24,Y+1
 139 0078 9A81      		ldd r25,Y+2
 140 007a AB81      		ldd r26,Y+3
 141 007c BC81      		ldd r27,Y+4
 142 007e 7901      		movw r14,r18
 143 0080 8A01      		movw r16,r20
 144 0082 E81A      		sub r14,r24
 145 0084 F90A      		sbc r15,r25
 146 0086 0A0B      		sbc r16,r26
 147 0088 1B0B      		sbc r17,r27
 148 008a D801      		movw r26,r16
 149 008c C701      		movw r24,r14
 150 008e BC01      		movw r22,r24
 151 0090 CD01      		movw r24,r26
 152 0092 0E94 0000 		call __floatsisf
 153               	.LVL0:
 154 0096 DC01      		movw r26,r24
 155 0098 CB01      		movw r24,r22
 156 009a 20E0      		ldi r18,0
 157 009c 30E0      		ldi r19,0
 158 009e 4AE7      		ldi r20,lo8(122)
 159 00a0 54E4      		ldi r21,lo8(68)
 160 00a2 BC01      		movw r22,r24
 161 00a4 CD01      		movw r24,r26
 162 00a6 0E94 0000 		call __divsf3
 163               	.LVL1:
 164 00aa DC01      		movw r26,r24
 165 00ac CB01      		movw r24,r22
 166 00ae 8987      		std Y+9,r24
 167 00b0 9A87      		std Y+10,r25
 168 00b2 AB87      		std Y+11,r26
 169 00b4 BC87      		std Y+12,r27
  50:cnt.c         **** 
  51:cnt.c         ****    //printf("    - Size of array is %d\n", MAXSIZE);
  52:cnt.c         ****    //printf("    - Num pos was %d and Sum was %d\n", Poscnt, Postotal);
  53:cnt.c         ****    //printf("    - Num neg was %d and Sum was %d\n", Negcnt, Negtotal);
  54:cnt.c         ****    //printf("    - Num neg was %d\n", Negcnt);
  55:cnt.c         ****    //printf("    - Total sum time is %3.3f seconds\n\n", TotalTime);
  56:cnt.c         ****    return 0;
 170               		.loc 1 56 0
 171 00b6 80E0      		ldi r24,0
 172 00b8 90E0      		ldi r25,0
 173               	/* epilogue start */
  57:cnt.c         **** }
 174               		.loc 1 57 0
 175 00ba 2E96      		adiw r28,14
 176 00bc 0FB6      		in __tmp_reg__,__SREG__
 177 00be F894      		cli
 178 00c0 DEBF      		out __SP_H__,r29
 179 00c2 0FBE      		out __SREG__,__tmp_reg__
 180 00c4 CDBF      		out __SP_L__,r28
 181 00c6 DF91      		pop r29
 182 00c8 CF91      		pop r28
 183 00ca 1F91      		pop r17
 184 00cc 0F91      		pop r16
 185 00ce FF90      		pop r15
 186 00d0 EF90      		pop r14
 187 00d2 0895      		ret
 188               		.cfi_endproc
 189               	.LFE1:
 191               	.global	Initialize
 193               	Initialize:
 194               	.LFB2:
  58:cnt.c         **** 
  59:cnt.c         **** 
  60:cnt.c         **** // Intializes the given array with random integers.
  61:cnt.c         **** int Initialize(matrix Array)
  62:cnt.c         **** {
 195               		.loc 1 62 0
 196               		.cfi_startproc
 197 00d4 CF92      		push r12
 198               	.LCFI11:
 199               		.cfi_def_cfa_offset 3
 200               		.cfi_offset 12, -2
 201 00d6 DF92      		push r13
 202               	.LCFI12:
 203               		.cfi_def_cfa_offset 4
 204               		.cfi_offset 13, -3
 205 00d8 EF92      		push r14
 206               	.LCFI13:
 207               		.cfi_def_cfa_offset 5
 208               		.cfi_offset 14, -4
 209 00da FF92      		push r15
 210               	.LCFI14:
 211               		.cfi_def_cfa_offset 6
 212               		.cfi_offset 15, -5
 213 00dc 0F93      		push r16
 214               	.LCFI15:
 215               		.cfi_def_cfa_offset 7
 216               		.cfi_offset 16, -6
 217 00de 1F93      		push r17
 218               	.LCFI16:
 219               		.cfi_def_cfa_offset 8
 220               		.cfi_offset 17, -7
 221 00e0 CF93      		push r28
 222               	.LCFI17:
 223               		.cfi_def_cfa_offset 9
 224               		.cfi_offset 28, -8
 225 00e2 DF93      		push r29
 226               	.LCFI18:
 227               		.cfi_def_cfa_offset 10
 228               		.cfi_offset 29, -9
 229 00e4 00D0      		rcall .
 230               	.LCFI19:
 231               		.cfi_def_cfa_offset 12
 232 00e6 CDB7      		in r28,__SP_L__
 233 00e8 DEB7      		in r29,__SP_H__
 234               	.LCFI20:
 235               		.cfi_def_cfa_register 28
 236               	/* prologue: function */
 237               	/* frame size = 2 */
 238               	/* stack size = 10 */
 239               	.L__stack_usage = 10
 240 00ea 9A83      		std Y+2,r25
 241 00ec 8983      		std Y+1,r24
  63:cnt.c         ****    register int OuterIndex, InnerIndex;
  64:cnt.c         **** 
  65:cnt.c         ****    for (OuterIndex = 0; OuterIndex < MAXSIZE; OuterIndex++) //100 + 1
 242               		.loc 1 65 0
 243 00ee E12C      		mov r14,__zero_reg__
 244 00f0 F12C      		mov r15,__zero_reg__
 245 00f2 00C0      		rjmp .L6
 246               	.L9:
  66:cnt.c         ****       for (InnerIndex = 0; InnerIndex < MAXSIZE; InnerIndex++) //100 + 1
 247               		.loc 1 66 0
 248 00f4 00E0      		ldi r16,0
 249 00f6 10E0      		ldi r17,0
 250 00f8 00C0      		rjmp .L7
 251               	.L8:
  67:cnt.c         ****          Array[OuterIndex][InnerIndex] = RandomInteger();
 252               		.loc 1 67 0 discriminator 3
 253 00fa 9701      		movw r18,r14
 254 00fc 44E1      		ldi r20,lo8(20)
 255 00fe 429F      		mul r20,r18
 256 0100 C001      		movw r24,r0
 257 0102 439F      		mul r20,r19
 258 0104 900D      		add r25,r0
 259 0106 1124      		clr __zero_reg__
 260 0108 2981      		ldd r18,Y+1
 261 010a 3A81      		ldd r19,Y+2
 262 010c 6901      		movw r12,r18
 263 010e C80E      		add r12,r24
 264 0110 D91E      		adc r13,r25
 265 0112 0E94 0000 		call RandomInteger
 266 0116 9C01      		movw r18,r24
 267 0118 C801      		movw r24,r16
 268 011a 880F      		lsl r24
 269 011c 991F      		rol r25
 270 011e 8C0D      		add r24,r12
 271 0120 9D1D      		adc r25,r13
 272 0122 FC01      		movw r30,r24
 273 0124 3183      		std Z+1,r19
 274 0126 2083      		st Z,r18
  66:cnt.c         ****       for (InnerIndex = 0; InnerIndex < MAXSIZE; InnerIndex++) //100 + 1
 275               		.loc 1 66 0 discriminator 3
 276 0128 0F5F      		subi r16,-1
 277 012a 1F4F      		sbci r17,-1
 278               	.L7:
  66:cnt.c         ****       for (InnerIndex = 0; InnerIndex < MAXSIZE; InnerIndex++) //100 + 1
 279               		.loc 1 66 0 is_stmt 0 discriminator 1
 280 012c 0A30      		cpi r16,10
 281 012e 1105      		cpc r17,__zero_reg__
 282 0130 04F0      		brlt .L8
  65:cnt.c         ****       for (InnerIndex = 0; InnerIndex < MAXSIZE; InnerIndex++) //100 + 1
 283               		.loc 1 65 0 is_stmt 1 discriminator 2
 284 0132 FFEF      		ldi r31,-1
 285 0134 EF1A      		sub r14,r31
 286 0136 FF0A      		sbc r15,r31
 287               	.L6:
  65:cnt.c         ****       for (InnerIndex = 0; InnerIndex < MAXSIZE; InnerIndex++) //100 + 1
 288               		.loc 1 65 0 is_stmt 0 discriminator 1
 289 0138 8AE0      		ldi r24,10
 290 013a E816      		cp r14,r24
 291 013c F104      		cpc r15,__zero_reg__
 292 013e 04F0      		brlt .L9
  68:cnt.c         **** 
  69:cnt.c         ****    return 0;
 293               		.loc 1 69 0 is_stmt 1
 294 0140 80E0      		ldi r24,0
 295 0142 90E0      		ldi r25,0
 296               	/* epilogue start */
  70:cnt.c         **** }
 297               		.loc 1 70 0
 298 0144 0F90      		pop __tmp_reg__
 299 0146 0F90      		pop __tmp_reg__
 300 0148 DF91      		pop r29
 301 014a CF91      		pop r28
 302 014c 1F91      		pop r17
 303 014e 0F91      		pop r16
 304 0150 FF90      		pop r15
 305 0152 EF90      		pop r14
 306 0154 DF90      		pop r13
 307 0156 CF90      		pop r12
 308 0158 0895      		ret
 309               		.cfi_endproc
 310               	.LFE2:
 312               	.global	InitSeed
 314               	InitSeed:
 315               	.LFB3:
  71:cnt.c         **** 
  72:cnt.c         **** 
  73:cnt.c         **** // Initializes the seed used in the random number generator.
  74:cnt.c         **** int InitSeed (void)
  75:cnt.c         **** {
 316               		.loc 1 75 0
 317               		.cfi_startproc
 318 015a CF93      		push r28
 319               	.LCFI21:
 320               		.cfi_def_cfa_offset 3
 321               		.cfi_offset 28, -2
 322 015c DF93      		push r29
 323               	.LCFI22:
 324               		.cfi_def_cfa_offset 4
 325               		.cfi_offset 29, -3
 326 015e CDB7      		in r28,__SP_L__
 327 0160 DEB7      		in r29,__SP_H__
 328               	.LCFI23:
 329               		.cfi_def_cfa_register 28
 330               	/* prologue: function */
 331               	/* frame size = 0 */
 332               	/* stack size = 2 */
 333               	.L__stack_usage = 2
  76:cnt.c         ****    Seed = 0;
 334               		.loc 1 76 0
 335 0162 1092 0000 		sts Seed+1,__zero_reg__
 336 0166 1092 0000 		sts Seed,__zero_reg__
  77:cnt.c         ****    return 0;
 337               		.loc 1 77 0
 338 016a 80E0      		ldi r24,0
 339 016c 90E0      		ldi r25,0
 340               	/* epilogue start */
  78:cnt.c         **** }
 341               		.loc 1 78 0
 342 016e DF91      		pop r29
 343 0170 CF91      		pop r28
 344 0172 0895      		ret
 345               		.cfi_endproc
 346               	.LFE3:
 348               	.global	Sum
 350               	Sum:
 351               	.LFB4:
  79:cnt.c         **** 
  80:cnt.c         **** void Sum(matrix Array)
  81:cnt.c         **** {
 352               		.loc 1 81 0
 353               		.cfi_startproc
 354 0174 EF92      		push r14
 355               	.LCFI24:
 356               		.cfi_def_cfa_offset 3
 357               		.cfi_offset 14, -2
 358 0176 FF92      		push r15
 359               	.LCFI25:
 360               		.cfi_def_cfa_offset 4
 361               		.cfi_offset 15, -3
 362 0178 0F93      		push r16
 363               	.LCFI26:
 364               		.cfi_def_cfa_offset 5
 365               		.cfi_offset 16, -4
 366 017a 1F93      		push r17
 367               	.LCFI27:
 368               		.cfi_def_cfa_offset 6
 369               		.cfi_offset 17, -5
 370 017c CF93      		push r28
 371               	.LCFI28:
 372               		.cfi_def_cfa_offset 7
 373               		.cfi_offset 28, -6
 374 017e DF93      		push r29
 375               	.LCFI29:
 376               		.cfi_def_cfa_offset 8
 377               		.cfi_offset 29, -7
 378 0180 CDB7      		in r28,__SP_L__
 379 0182 DEB7      		in r29,__SP_H__
 380               	.LCFI30:
 381               		.cfi_def_cfa_register 28
 382 0184 2A97      		sbiw r28,10
 383               	.LCFI31:
 384               		.cfi_def_cfa_offset 18
 385 0186 0FB6      		in __tmp_reg__,__SREG__
 386 0188 F894      		cli
 387 018a DEBF      		out __SP_H__,r29
 388 018c 0FBE      		out __SREG__,__tmp_reg__
 389 018e CDBF      		out __SP_L__,r28
 390               	/* prologue: function */
 391               	/* frame size = 10 */
 392               	/* stack size = 16 */
 393               	.L__stack_usage = 16
 394 0190 9A87      		std Y+10,r25
 395 0192 8987      		std Y+9,r24
  82:cnt.c         ****   register int Outer, Inner;
  83:cnt.c         **** 
  84:cnt.c         ****   int Ptotal = 0; /* changed these to locals in order to drive worst case */
 396               		.loc 1 84 0
 397 0194 1A82      		std Y+2,__zero_reg__
 398 0196 1982      		std Y+1,__zero_reg__
  85:cnt.c         ****   int Ntotal = 0;
 399               		.loc 1 85 0
 400 0198 1C82      		std Y+4,__zero_reg__
 401 019a 1B82      		std Y+3,__zero_reg__
  86:cnt.c         ****   int Pcnt = 0;
 402               		.loc 1 86 0
 403 019c 1E82      		std Y+6,__zero_reg__
 404 019e 1D82      		std Y+5,__zero_reg__
  87:cnt.c         ****   int Ncnt = 0;
 405               		.loc 1 87 0
 406 01a0 1886      		std Y+8,__zero_reg__
 407 01a2 1F82      		std Y+7,__zero_reg__
  88:cnt.c         **** 
  89:cnt.c         ****   for (Outer = 0; Outer < MAXSIZE; Outer++) //Maxsize = 100
 408               		.loc 1 89 0
 409 01a4 E12C      		mov r14,__zero_reg__
 410 01a6 F12C      		mov r15,__zero_reg__
 411 01a8 00C0      		rjmp .L14
 412               	.L19:
  90:cnt.c         ****     for (Inner = 0; Inner < MAXSIZE; Inner++)
 413               		.loc 1 90 0
 414 01aa 00E0      		ldi r16,0
 415 01ac 10E0      		ldi r17,0
 416 01ae 00C0      		rjmp .L15
 417               	.L18:
  91:cnt.c         **** #ifdef WORSTCASE
  92:cnt.c         ****       if (Array[Outer][Inner] >= 0) {
  93:cnt.c         **** #else
  94:cnt.c         **** 	if (Array[Outer][Inner] < 0) {
 418               		.loc 1 94 0
 419 01b0 9701      		movw r18,r14
 420 01b2 44E1      		ldi r20,lo8(20)
 421 01b4 429F      		mul r20,r18
 422 01b6 C001      		movw r24,r0
 423 01b8 439F      		mul r20,r19
 424 01ba 900D      		add r25,r0
 425 01bc 1124      		clr __zero_reg__
 426 01be 2985      		ldd r18,Y+9
 427 01c0 3A85      		ldd r19,Y+10
 428 01c2 280F      		add r18,r24
 429 01c4 391F      		adc r19,r25
 430 01c6 C801      		movw r24,r16
 431 01c8 880F      		lsl r24
 432 01ca 991F      		rol r25
 433 01cc 820F      		add r24,r18
 434 01ce 931F      		adc r25,r19
 435 01d0 FC01      		movw r30,r24
 436 01d2 8081      		ld r24,Z
 437 01d4 9181      		ldd r25,Z+1
 438 01d6 9923      		tst r25
 439 01d8 04F4      		brge .L16
  95:cnt.c         **** #endif
  96:cnt.c         **** 	  Ptotal += Array[Outer][Inner];
 440               		.loc 1 96 0
 441 01da 9701      		movw r18,r14
 442 01dc 44E1      		ldi r20,lo8(20)
 443 01de 429F      		mul r20,r18
 444 01e0 C001      		movw r24,r0
 445 01e2 439F      		mul r20,r19
 446 01e4 900D      		add r25,r0
 447 01e6 1124      		clr __zero_reg__
 448 01e8 2985      		ldd r18,Y+9
 449 01ea 3A85      		ldd r19,Y+10
 450 01ec 280F      		add r18,r24
 451 01ee 391F      		adc r19,r25
 452 01f0 C801      		movw r24,r16
 453 01f2 880F      		lsl r24
 454 01f4 991F      		rol r25
 455 01f6 820F      		add r24,r18
 456 01f8 931F      		adc r25,r19
 457 01fa FC01      		movw r30,r24
 458 01fc 8081      		ld r24,Z
 459 01fe 9181      		ldd r25,Z+1
 460 0200 2981      		ldd r18,Y+1
 461 0202 3A81      		ldd r19,Y+2
 462 0204 820F      		add r24,r18
 463 0206 931F      		adc r25,r19
 464 0208 9A83      		std Y+2,r25
 465 020a 8983      		std Y+1,r24
  97:cnt.c         **** 	  Pcnt++;
 466               		.loc 1 97 0
 467 020c 8D81      		ldd r24,Y+5
 468 020e 9E81      		ldd r25,Y+6
 469 0210 0196      		adiw r24,1
 470 0212 9E83      		std Y+6,r25
 471 0214 8D83      		std Y+5,r24
 472 0216 00C0      		rjmp .L17
 473               	.L16:
  98:cnt.c         **** 	}
  99:cnt.c         **** 	else {
 100:cnt.c         **** 	  Ntotal += Array[Outer][Inner];
 474               		.loc 1 100 0
 475 0218 9701      		movw r18,r14
 476 021a 44E1      		ldi r20,lo8(20)
 477 021c 429F      		mul r20,r18
 478 021e C001      		movw r24,r0
 479 0220 439F      		mul r20,r19
 480 0222 900D      		add r25,r0
 481 0224 1124      		clr __zero_reg__
 482 0226 2985      		ldd r18,Y+9
 483 0228 3A85      		ldd r19,Y+10
 484 022a 280F      		add r18,r24
 485 022c 391F      		adc r19,r25
 486 022e C801      		movw r24,r16
 487 0230 880F      		lsl r24
 488 0232 991F      		rol r25
 489 0234 820F      		add r24,r18
 490 0236 931F      		adc r25,r19
 491 0238 FC01      		movw r30,r24
 492 023a 8081      		ld r24,Z
 493 023c 9181      		ldd r25,Z+1
 494 023e 2B81      		ldd r18,Y+3
 495 0240 3C81      		ldd r19,Y+4
 496 0242 820F      		add r24,r18
 497 0244 931F      		adc r25,r19
 498 0246 9C83      		std Y+4,r25
 499 0248 8B83      		std Y+3,r24
 101:cnt.c         **** 	  Ncnt++;
 500               		.loc 1 101 0
 501 024a 8F81      		ldd r24,Y+7
 502 024c 9885      		ldd r25,Y+8
 503 024e 0196      		adiw r24,1
 504 0250 9887      		std Y+8,r25
 505 0252 8F83      		std Y+7,r24
 506               	.L17:
  90:cnt.c         **** #ifdef WORSTCASE
 507               		.loc 1 90 0 discriminator 2
 508 0254 0F5F      		subi r16,-1
 509 0256 1F4F      		sbci r17,-1
 510               	.L15:
  90:cnt.c         **** #ifdef WORSTCASE
 511               		.loc 1 90 0 is_stmt 0 discriminator 1
 512 0258 0A30      		cpi r16,10
 513 025a 1105      		cpc r17,__zero_reg__
 514 025c 04F4      		brge .+2
 515 025e 00C0      		rjmp .L18
  89:cnt.c         ****     for (Inner = 0; Inner < MAXSIZE; Inner++)
 516               		.loc 1 89 0 is_stmt 1 discriminator 2
 517 0260 FFEF      		ldi r31,-1
 518 0262 EF1A      		sub r14,r31
 519 0264 FF0A      		sbc r15,r31
 520               	.L14:
  89:cnt.c         ****     for (Inner = 0; Inner < MAXSIZE; Inner++)
 521               		.loc 1 89 0 is_stmt 0 discriminator 1
 522 0266 8AE0      		ldi r24,10
 523 0268 E816      		cp r14,r24
 524 026a F104      		cpc r15,__zero_reg__
 525 026c 04F4      		brge .+2
 526 026e 00C0      		rjmp .L19
 102:cnt.c         **** 	}
 103:cnt.c         **** 
 104:cnt.c         ****   Postotal = Ptotal;
 527               		.loc 1 104 0 is_stmt 1
 528 0270 8981      		ldd r24,Y+1
 529 0272 9A81      		ldd r25,Y+2
 530 0274 9093 0000 		sts Postotal+1,r25
 531 0278 8093 0000 		sts Postotal,r24
 105:cnt.c         ****   Poscnt = Pcnt;
 532               		.loc 1 105 0
 533 027c 8D81      		ldd r24,Y+5
 534 027e 9E81      		ldd r25,Y+6
 535 0280 9093 0000 		sts Poscnt+1,r25
 536 0284 8093 0000 		sts Poscnt,r24
 106:cnt.c         ****   Negtotal = Ntotal;
 537               		.loc 1 106 0
 538 0288 8B81      		ldd r24,Y+3
 539 028a 9C81      		ldd r25,Y+4
 540 028c 9093 0000 		sts Negtotal+1,r25
 541 0290 8093 0000 		sts Negtotal,r24
 107:cnt.c         ****   Negcnt = Ncnt;
 542               		.loc 1 107 0
 543 0294 8F81      		ldd r24,Y+7
 544 0296 9885      		ldd r25,Y+8
 545 0298 9093 0000 		sts Negcnt+1,r25
 546 029c 8093 0000 		sts Negcnt,r24
 108:cnt.c         **** }
 547               		.loc 1 108 0
 548 02a0 0000      		nop
 549               	/* epilogue start */
 550 02a2 2A96      		adiw r28,10
 551 02a4 0FB6      		in __tmp_reg__,__SREG__
 552 02a6 F894      		cli
 553 02a8 DEBF      		out __SP_H__,r29
 554 02aa 0FBE      		out __SREG__,__tmp_reg__
 555 02ac CDBF      		out __SP_L__,r28
 556 02ae DF91      		pop r29
 557 02b0 CF91      		pop r28
 558 02b2 1F91      		pop r17
 559 02b4 0F91      		pop r16
 560 02b6 FF90      		pop r15
 561 02b8 EF90      		pop r14
 562 02ba 0895      		ret
 563               		.cfi_endproc
 564               	.LFE4:
 566               	.global	RandomInteger
 568               	RandomInteger:
 569               	.LFB5:
 109:cnt.c         **** 
 110:cnt.c         **** 
 111:cnt.c         **** // This function returns in milliseconds the amount of compiler time
 112:cnt.c         **** //int ttime()
 113:cnt.c         **** //{
 114:cnt.c         **** //  struct tms buffer;
 115:cnt.c         **** //int utime;
 116:cnt.c         **** 
 117:cnt.c         **** //times(&buffer);
 118:cnt.c         **** //utime = (buffer.tms_utime / 60.0) * 1000.0;
 119:cnt.c         **** //return (utime);
 120:cnt.c         **** //}
 121:cnt.c         **** 
 122:cnt.c         **** 
 123:cnt.c         **** // Generates random integers between 0 and 8095
 124:cnt.c         **** int RandomInteger(void)
 125:cnt.c         **** {
 570               		.loc 1 125 0
 571               		.cfi_startproc
 572 02bc CF93      		push r28
 573               	.LCFI32:
 574               		.cfi_def_cfa_offset 3
 575               		.cfi_offset 28, -2
 576 02be DF93      		push r29
 577               	.LCFI33:
 578               		.cfi_def_cfa_offset 4
 579               		.cfi_offset 29, -3
 580 02c0 CDB7      		in r28,__SP_L__
 581 02c2 DEB7      		in r29,__SP_H__
 582               	.LCFI34:
 583               		.cfi_def_cfa_register 28
 584               	/* prologue: function */
 585               	/* frame size = 0 */
 586               	/* stack size = 2 */
 587               	.L__stack_usage = 2
 126:cnt.c         ****    Seed = ((Seed * 133) + 81) % 8095;
 588               		.loc 1 126 0
 589 02c4 2091 0000 		lds r18,Seed
 590 02c8 3091 0000 		lds r19,Seed+1
 591 02cc 45E8      		ldi r20,lo8(-123)
 592 02ce 429F      		mul r20,r18
 593 02d0 C001      		movw r24,r0
 594 02d2 439F      		mul r20,r19
 595 02d4 900D      		add r25,r0
 596 02d6 1124      		clr __zero_reg__
 597 02d8 8F5A      		subi r24,-81
 598 02da 9F4F      		sbci r25,-1
 599 02dc 2FE9      		ldi r18,lo8(-97)
 600 02de 3FE1      		ldi r19,lo8(31)
 601 02e0 B901      		movw r22,r18
 602 02e2 0E94 0000 		call __divmodhi4
 603 02e6 9093 0000 		sts Seed+1,r25
 604 02ea 8093 0000 		sts Seed,r24
 127:cnt.c         ****    return Seed;
 605               		.loc 1 127 0
 606 02ee 8091 0000 		lds r24,Seed
 607 02f2 9091 0000 		lds r25,Seed+1
 608               	/* epilogue start */
 128:cnt.c         **** }
 609               		.loc 1 128 0
 610 02f6 DF91      		pop r29
 611 02f8 CF91      		pop r28
 612 02fa 0895      		ret
 613               		.cfi_endproc
 614               	.LFE5:
 616               	.Letext0:
DEFINED SYMBOLS
                            *ABS*:0000000000000000 cnt.c
     /tmp/ccVLddJd.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccVLddJd.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccVLddJd.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccVLddJd.s:5      *ABS*:000000000000003b __RAMPZ__
     /tmp/ccVLddJd.s:6      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccVLddJd.s:7      *ABS*:0000000000000001 __zero_reg__
                            *COM*:0000000000000002 Seed
                            *COM*:00000000000000c8 Array
                            *COM*:0000000000000002 Postotal
                            *COM*:0000000000000002 Negtotal
                            *COM*:0000000000000002 Poscnt
                            *COM*:0000000000000002 Negcnt
     /tmp/ccVLddJd.s:19     .text:0000000000000000 main
     /tmp/ccVLddJd.s:314    .text:000000000000015a InitSeed
     /tmp/ccVLddJd.s:61     .text:000000000000001e Test
     /tmp/ccVLddJd.s:193    .text:00000000000000d4 Initialize
     /tmp/ccVLddJd.s:350    .text:0000000000000174 Sum
     /tmp/ccVLddJd.s:568    .text:00000000000002bc RandomInteger

UNDEFINED SYMBOLS
__floatsisf
__divsf3
__divmodhi4
__do_clear_bss
