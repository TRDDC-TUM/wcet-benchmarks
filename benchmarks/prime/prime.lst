   1               		.file	"prime.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               	.global	divides
  12               	divides:
  13               	.LFB0:
  14               		.file 1 "prime.c"
   1:prime.c       **** /* MDH WCET BENCHMARK SUITE. */
   2:prime.c       **** 
   3:prime.c       **** /* Changes:
   4:prime.c       ****  * JG 2005/12/08: Prototypes added, and changed exit to return in main.
   5:prime.c       ****  */
   6:prime.c       **** #include <inttypes.h>
   7:prime.c       **** typedef  unsigned char  bool;
   8:prime.c       **** typedef  uint32_t   uint;
   9:prime.c       **** 
  10:prime.c       **** bool divides (uint n, uint m);
  11:prime.c       **** bool even (uint n);
  12:prime.c       **** bool prime (uint n);
  13:prime.c       **** void swap (uint* a, uint* b);
  14:prime.c       **** 
  15:prime.c       **** bool divides (uint n, uint m) {
  15               		.loc 1 15 0
  16 0000 CF93      		push r28
  17               	.LCFI0:
  18 0002 DF93      		push r29
  19               	.LCFI1:
  20 0004 CDB7      		in r28,__SP_L__
  21 0006 DEB7      		in r29,__SP_H__
  22               	.LCFI2:
  23 0008 2897      		sbiw r28,8
  24               	.LCFI3:
  25 000a 0FB6      		in __tmp_reg__,__SREG__
  26 000c F894      		cli
  27 000e DEBF      		out __SP_H__,r29
  28 0010 0FBE      		out __SREG__,__tmp_reg__
  29 0012 CDBF      		out __SP_L__,r28
  30               	/* prologue: function */
  31               	/* frame size = 8 */
  32               	/* stack size = 10 */
  33               	.L__stack_usage = 10
  34 0014 6983      		std Y+1,r22
  35 0016 7A83      		std Y+2,r23
  36 0018 8B83      		std Y+3,r24
  37 001a 9C83      		std Y+4,r25
  38 001c 2D83      		std Y+5,r18
  39 001e 3E83      		std Y+6,r19
  40 0020 4F83      		std Y+7,r20
  41 0022 5887      		std Y+8,r21
  16:prime.c       ****   return (m % n == 0);
  42               		.loc 1 16 0
  43 0024 8D81      		ldd r24,Y+5
  44 0026 9E81      		ldd r25,Y+6
  45 0028 AF81      		ldd r26,Y+7
  46 002a B885      		ldd r27,Y+8
  47 002c 2981      		ldd r18,Y+1
  48 002e 3A81      		ldd r19,Y+2
  49 0030 4B81      		ldd r20,Y+3
  50 0032 5C81      		ldd r21,Y+4
  51 0034 BC01      		movw r22,r24
  52 0036 CD01      		movw r24,r26
  53 0038 0E94 0000 		call __udivmodsi4
  54 003c DC01      		movw r26,r24
  55 003e CB01      		movw r24,r22
  56 0040 21E0      		ldi r18,lo8(1)
  57 0042 0097      		sbiw r24,0
  58 0044 A105      		cpc r26,__zero_reg__
  59 0046 B105      		cpc r27,__zero_reg__
  60 0048 01F0      		breq .L2
  61 004a 20E0      		ldi r18,0
  62               	.L2:
  63 004c 822F      		mov r24,r18
  64               	/* epilogue start */
  17:prime.c       **** }
  65               		.loc 1 17 0
  66 004e 2896      		adiw r28,8
  67 0050 0FB6      		in __tmp_reg__,__SREG__
  68 0052 F894      		cli
  69 0054 DEBF      		out __SP_H__,r29
  70 0056 0FBE      		out __SREG__,__tmp_reg__
  71 0058 CDBF      		out __SP_L__,r28
  72 005a DF91      		pop r29
  73 005c CF91      		pop r28
  74 005e 0895      		ret
  75               	.LFE0:
  77               	.global	even
  79               	even:
  80               	.LFB1:
  18:prime.c       **** 
  19:prime.c       **** bool even (uint n) {
  81               		.loc 1 19 0
  82 0060 CF93      		push r28
  83               	.LCFI4:
  84 0062 DF93      		push r29
  85               	.LCFI5:
  86 0064 00D0      		rcall .
  87 0066 00D0      		rcall .
  88               	.LCFI6:
  89 0068 CDB7      		in r28,__SP_L__
  90 006a DEB7      		in r29,__SP_H__
  91               	.LCFI7:
  92               	/* prologue: function */
  93               	/* frame size = 4 */
  94               	/* stack size = 6 */
  95               	.L__stack_usage = 6
  96 006c 6983      		std Y+1,r22
  97 006e 7A83      		std Y+2,r23
  98 0070 8B83      		std Y+3,r24
  99 0072 9C83      		std Y+4,r25
  20:prime.c       ****   return (divides (2, n));
 100               		.loc 1 20 0
 101 0074 8981      		ldd r24,Y+1
 102 0076 9A81      		ldd r25,Y+2
 103 0078 AB81      		ldd r26,Y+3
 104 007a BC81      		ldd r27,Y+4
 105 007c 9C01      		movw r18,r24
 106 007e AD01      		movw r20,r26
 107 0080 62E0      		ldi r22,lo8(2)
 108 0082 70E0      		ldi r23,0
 109 0084 80E0      		ldi r24,0
 110 0086 90E0      		ldi r25,0
 111 0088 0E94 0000 		call divides
 112               	/* epilogue start */
  21:prime.c       **** }
 113               		.loc 1 21 0
 114 008c 0F90      		pop __tmp_reg__
 115 008e 0F90      		pop __tmp_reg__
 116 0090 0F90      		pop __tmp_reg__
 117 0092 0F90      		pop __tmp_reg__
 118 0094 DF91      		pop r29
 119 0096 CF91      		pop r28
 120 0098 0895      		ret
 121               	.LFE1:
 123               	.global	prime
 125               	prime:
 126               	.LFB2:
  22:prime.c       **** 
  23:prime.c       **** bool prime (uint n) {
 127               		.loc 1 23 0
 128 009a CF93      		push r28
 129               	.LCFI8:
 130 009c DF93      		push r29
 131               	.LCFI9:
 132 009e CDB7      		in r28,__SP_L__
 133 00a0 DEB7      		in r29,__SP_H__
 134               	.LCFI10:
 135 00a2 2897      		sbiw r28,8
 136               	.LCFI11:
 137 00a4 0FB6      		in __tmp_reg__,__SREG__
 138 00a6 F894      		cli
 139 00a8 DEBF      		out __SP_H__,r29
 140 00aa 0FBE      		out __SREG__,__tmp_reg__
 141 00ac CDBF      		out __SP_L__,r28
 142               	/* prologue: function */
 143               	/* frame size = 8 */
 144               	/* stack size = 10 */
 145               	.L__stack_usage = 10
 146 00ae 6D83      		std Y+5,r22
 147 00b0 7E83      		std Y+6,r23
 148 00b2 8F83      		std Y+7,r24
 149 00b4 9887      		std Y+8,r25
  24:prime.c       ****   uint i;
  25:prime.c       ****   if (even (n))
 150               		.loc 1 25 0
 151 00b6 8D81      		ldd r24,Y+5
 152 00b8 9E81      		ldd r25,Y+6
 153 00ba AF81      		ldd r26,Y+7
 154 00bc B885      		ldd r27,Y+8
 155 00be BC01      		movw r22,r24
 156 00c0 CD01      		movw r24,r26
 157 00c2 0E94 0000 		call even
 158 00c6 8823      		tst r24
 159 00c8 01F0      		breq .L7
  26:prime.c       ****       return (n == 2);
 160               		.loc 1 26 0
 161 00ca 21E0      		ldi r18,lo8(1)
 162 00cc 8D81      		ldd r24,Y+5
 163 00ce 9E81      		ldd r25,Y+6
 164 00d0 AF81      		ldd r26,Y+7
 165 00d2 B885      		ldd r27,Y+8
 166 00d4 8230      		cpi r24,2
 167 00d6 9105      		cpc r25,__zero_reg__
 168 00d8 A105      		cpc r26,__zero_reg__
 169 00da B105      		cpc r27,__zero_reg__
 170 00dc 01F0      		breq .L8
 171 00de 20E0      		ldi r18,0
 172               	.L8:
 173 00e0 822F      		mov r24,r18
 174 00e2 00C0      		rjmp .L9
 175               	.L7:
  27:prime.c       ****   for (i = 3; (i * i <= n) && (i<=65535); i += 2) { 
 176               		.loc 1 27 0
 177 00e4 83E0      		ldi r24,lo8(3)
 178 00e6 90E0      		ldi r25,0
 179 00e8 A0E0      		ldi r26,0
 180 00ea B0E0      		ldi r27,0
 181 00ec 8983      		std Y+1,r24
 182 00ee 9A83      		std Y+2,r25
 183 00f0 AB83      		std Y+3,r26
 184 00f2 BC83      		std Y+4,r27
 185 00f4 00C0      		rjmp .L10
 186               	.L13:
  28:prime.c       ****       if (divides (i, n)) /* ai: loop here min 0 max 357 end; */
 187               		.loc 1 28 0
 188 00f6 2D81      		ldd r18,Y+5
 189 00f8 3E81      		ldd r19,Y+6
 190 00fa 4F81      		ldd r20,Y+7
 191 00fc 5885      		ldd r21,Y+8
 192 00fe 8981      		ldd r24,Y+1
 193 0100 9A81      		ldd r25,Y+2
 194 0102 AB81      		ldd r26,Y+3
 195 0104 BC81      		ldd r27,Y+4
 196 0106 BC01      		movw r22,r24
 197 0108 CD01      		movw r24,r26
 198 010a 0E94 0000 		call divides
 199 010e 8823      		tst r24
 200 0110 01F0      		breq .L11
  29:prime.c       ****           return 0; 
 201               		.loc 1 29 0
 202 0112 80E0      		ldi r24,0
 203 0114 00C0      		rjmp .L9
 204               	.L11:
  27:prime.c       ****   for (i = 3; (i * i <= n) && (i<=65535); i += 2) { 
 205               		.loc 1 27 0
 206 0116 8981      		ldd r24,Y+1
 207 0118 9A81      		ldd r25,Y+2
 208 011a AB81      		ldd r26,Y+3
 209 011c BC81      		ldd r27,Y+4
 210 011e 0296      		adiw r24,2
 211 0120 A11D      		adc r26,__zero_reg__
 212 0122 B11D      		adc r27,__zero_reg__
 213 0124 8983      		std Y+1,r24
 214 0126 9A83      		std Y+2,r25
 215 0128 AB83      		std Y+3,r26
 216 012a BC83      		std Y+4,r27
 217               	.L10:
  27:prime.c       ****   for (i = 3; (i * i <= n) && (i<=65535); i += 2) { 
 218               		.loc 1 27 0 is_stmt 0 discriminator 1
 219 012c 2981      		ldd r18,Y+1
 220 012e 3A81      		ldd r19,Y+2
 221 0130 4B81      		ldd r20,Y+3
 222 0132 5C81      		ldd r21,Y+4
 223 0134 8981      		ldd r24,Y+1
 224 0136 9A81      		ldd r25,Y+2
 225 0138 AB81      		ldd r26,Y+3
 226 013a BC81      		ldd r27,Y+4
 227 013c BC01      		movw r22,r24
 228 013e CD01      		movw r24,r26
 229 0140 0E94 0000 		call __mulsi3
 230 0144 9B01      		movw r18,r22
 231 0146 AC01      		movw r20,r24
 232 0148 8D81      		ldd r24,Y+5
 233 014a 9E81      		ldd r25,Y+6
 234 014c AF81      		ldd r26,Y+7
 235 014e B885      		ldd r27,Y+8
 236 0150 8217      		cp r24,r18
 237 0152 9307      		cpc r25,r19
 238 0154 A407      		cpc r26,r20
 239 0156 B507      		cpc r27,r21
 240 0158 00F0      		brlo .L12
  27:prime.c       ****   for (i = 3; (i * i <= n) && (i<=65535); i += 2) { 
 241               		.loc 1 27 0 discriminator 2
 242 015a 8981      		ldd r24,Y+1
 243 015c 9A81      		ldd r25,Y+2
 244 015e AB81      		ldd r26,Y+3
 245 0160 BC81      		ldd r27,Y+4
 246 0162 0097      		sbiw r24,0
 247 0164 21E0      		ldi r18,1
 248 0166 A207      		cpc r26,r18
 249 0168 B105      		cpc r27,__zero_reg__
 250 016a 00F0      		brlo .L13
 251               	.L12:
  30:prime.c       ****   }
  31:prime.c       ****   return (n > 1);
 252               		.loc 1 31 0 is_stmt 1
 253 016c 21E0      		ldi r18,lo8(1)
 254 016e 8D81      		ldd r24,Y+5
 255 0170 9E81      		ldd r25,Y+6
 256 0172 AF81      		ldd r26,Y+7
 257 0174 B885      		ldd r27,Y+8
 258 0176 8230      		cpi r24,2
 259 0178 9105      		cpc r25,__zero_reg__
 260 017a A105      		cpc r26,__zero_reg__
 261 017c B105      		cpc r27,__zero_reg__
 262 017e 00F4      		brsh .L14
 263 0180 20E0      		ldi r18,0
 264               	.L14:
 265 0182 822F      		mov r24,r18
 266               	.L9:
 267               	/* epilogue start */
  32:prime.c       **** }
 268               		.loc 1 32 0
 269 0184 2896      		adiw r28,8
 270 0186 0FB6      		in __tmp_reg__,__SREG__
 271 0188 F894      		cli
 272 018a DEBF      		out __SP_H__,r29
 273 018c 0FBE      		out __SREG__,__tmp_reg__
 274 018e CDBF      		out __SP_L__,r28
 275 0190 DF91      		pop r29
 276 0192 CF91      		pop r28
 277 0194 0895      		ret
 278               	.LFE2:
 280               	.global	swap
 282               	swap:
 283               	.LFB3:
  33:prime.c       **** 
  34:prime.c       **** void swap (uint* a, uint* b) {
 284               		.loc 1 34 0
 285 0196 CF93      		push r28
 286               	.LCFI12:
 287 0198 DF93      		push r29
 288               	.LCFI13:
 289 019a CDB7      		in r28,__SP_L__
 290 019c DEB7      		in r29,__SP_H__
 291               	.LCFI14:
 292 019e 2897      		sbiw r28,8
 293               	.LCFI15:
 294 01a0 0FB6      		in __tmp_reg__,__SREG__
 295 01a2 F894      		cli
 296 01a4 DEBF      		out __SP_H__,r29
 297 01a6 0FBE      		out __SREG__,__tmp_reg__
 298 01a8 CDBF      		out __SP_L__,r28
 299               	/* prologue: function */
 300               	/* frame size = 8 */
 301               	/* stack size = 10 */
 302               	.L__stack_usage = 10
 303 01aa 9E83      		std Y+6,r25
 304 01ac 8D83      		std Y+5,r24
 305 01ae 7887      		std Y+8,r23
 306 01b0 6F83      		std Y+7,r22
  35:prime.c       ****   uint tmp = *a;
 307               		.loc 1 35 0
 308 01b2 8D81      		ldd r24,Y+5
 309 01b4 9E81      		ldd r25,Y+6
 310 01b6 FC01      		movw r30,r24
 311 01b8 8081      		ld r24,Z
 312 01ba 9181      		ldd r25,Z+1
 313 01bc A281      		ldd r26,Z+2
 314 01be B381      		ldd r27,Z+3
 315 01c0 8983      		std Y+1,r24
 316 01c2 9A83      		std Y+2,r25
 317 01c4 AB83      		std Y+3,r26
 318 01c6 BC83      		std Y+4,r27
  36:prime.c       ****   *a = *b; 
 319               		.loc 1 36 0
 320 01c8 8F81      		ldd r24,Y+7
 321 01ca 9885      		ldd r25,Y+8
 322 01cc FC01      		movw r30,r24
 323 01ce 8081      		ld r24,Z
 324 01d0 9181      		ldd r25,Z+1
 325 01d2 A281      		ldd r26,Z+2
 326 01d4 B381      		ldd r27,Z+3
 327 01d6 2D81      		ldd r18,Y+5
 328 01d8 3E81      		ldd r19,Y+6
 329 01da F901      		movw r30,r18
 330 01dc 8083      		st Z,r24
 331 01de 9183      		std Z+1,r25
 332 01e0 A283      		std Z+2,r26
 333 01e2 B383      		std Z+3,r27
  37:prime.c       ****   *b = tmp;
 334               		.loc 1 37 0
 335 01e4 2F81      		ldd r18,Y+7
 336 01e6 3885      		ldd r19,Y+8
 337 01e8 8981      		ldd r24,Y+1
 338 01ea 9A81      		ldd r25,Y+2
 339 01ec AB81      		ldd r26,Y+3
 340 01ee BC81      		ldd r27,Y+4
 341 01f0 F901      		movw r30,r18
 342 01f2 8083      		st Z,r24
 343 01f4 9183      		std Z+1,r25
 344 01f6 A283      		std Z+2,r26
 345 01f8 B383      		std Z+3,r27
 346               	/* epilogue start */
  38:prime.c       **** }
 347               		.loc 1 38 0
 348 01fa 2896      		adiw r28,8
 349 01fc 0FB6      		in __tmp_reg__,__SREG__
 350 01fe F894      		cli
 351 0200 DEBF      		out __SP_H__,r29
 352 0202 0FBE      		out __SREG__,__tmp_reg__
 353 0204 CDBF      		out __SP_L__,r28
 354 0206 DF91      		pop r29
 355 0208 CF91      		pop r28
 356 020a 0895      		ret
 357               	.LFE3:
 359               	.global	main
 361               	main:
 362               	.LFB4:
  39:prime.c       **** 
  40:prime.c       **** int main () {
 363               		.loc 1 40 0
 364 020c CF93      		push r28
 365               	.LCFI16:
 366 020e DF93      		push r29
 367               	.LCFI17:
 368 0210 CDB7      		in r28,__SP_L__
 369 0212 DEB7      		in r29,__SP_H__
 370               	.LCFI18:
 371 0214 2897      		sbiw r28,8
 372               	.LCFI19:
 373 0216 0FB6      		in __tmp_reg__,__SREG__
 374 0218 F894      		cli
 375 021a DEBF      		out __SP_H__,r29
 376 021c 0FBE      		out __SREG__,__tmp_reg__
 377 021e CDBF      		out __SP_L__,r28
 378               	/* prologue: function */
 379               	/* frame size = 8 */
 380               	/* stack size = 10 */
 381               	.L__stack_usage = 10
  41:prime.c       ****   uint x =  21649;
 382               		.loc 1 41 0
 383 0220 81E9      		ldi r24,lo8(-111)
 384 0222 94E5      		ldi r25,lo8(84)
 385 0224 A0E0      		ldi r26,0
 386 0226 B0E0      		ldi r27,0
 387 0228 8983      		std Y+1,r24
 388 022a 9A83      		std Y+2,r25
 389 022c AB83      		std Y+3,r26
 390 022e BC83      		std Y+4,r27
  42:prime.c       ****   uint y = 513239;
 391               		.loc 1 42 0
 392 0230 87ED      		ldi r24,lo8(-41)
 393 0232 94ED      		ldi r25,lo8(-44)
 394 0234 A7E0      		ldi r26,lo8(7)
 395 0236 B0E0      		ldi r27,0
 396 0238 8D83      		std Y+5,r24
 397 023a 9E83      		std Y+6,r25
 398 023c AF83      		std Y+7,r26
 399 023e B887      		std Y+8,r27
  43:prime.c       ****   swap (&x, &y);
 400               		.loc 1 43 0
 401 0240 CE01      		movw r24,r28
 402 0242 0596      		adiw r24,5
 403 0244 BC01      		movw r22,r24
 404 0246 CE01      		movw r24,r28
 405 0248 0196      		adiw r24,1
 406 024a 0E94 0000 		call swap
  44:prime.c       ****   return (!(prime(x) && prime(y)));
 407               		.loc 1 44 0
 408 024e 8981      		ldd r24,Y+1
 409 0250 9A81      		ldd r25,Y+2
 410 0252 AB81      		ldd r26,Y+3
 411 0254 BC81      		ldd r27,Y+4
 412 0256 BC01      		movw r22,r24
 413 0258 CD01      		movw r24,r26
 414 025a 0E94 0000 		call prime
 415 025e 8823      		tst r24
 416 0260 01F0      		breq .L17
 417               		.loc 1 44 0 is_stmt 0 discriminator 2
 418 0262 8D81      		ldd r24,Y+5
 419 0264 9E81      		ldd r25,Y+6
 420 0266 AF81      		ldd r26,Y+7
 421 0268 B885      		ldd r27,Y+8
 422 026a BC01      		movw r22,r24
 423 026c CD01      		movw r24,r26
 424 026e 0E94 0000 		call prime
 425 0272 8823      		tst r24
 426 0274 01F4      		brne .L18
 427               	.L17:
 428               		.loc 1 44 0 discriminator 1
 429 0276 81E0      		ldi r24,lo8(1)
 430 0278 90E0      		ldi r25,0
 431 027a 00C0      		rjmp .L19
 432               	.L18:
 433               		.loc 1 44 0 discriminator 3
 434 027c 80E0      		ldi r24,0
 435 027e 90E0      		ldi r25,0
 436               	.L19:
 437               	/* epilogue start */
  45:prime.c       **** }
 438               		.loc 1 45 0 is_stmt 1 discriminator 4
 439 0280 2896      		adiw r28,8
 440 0282 0FB6      		in __tmp_reg__,__SREG__
 441 0284 F894      		cli
 442 0286 DEBF      		out __SP_H__,r29
 443 0288 0FBE      		out __SREG__,__tmp_reg__
 444 028a CDBF      		out __SP_L__,r28
 445 028c DF91      		pop r29
 446 028e CF91      		pop r28
 447 0290 0895      		ret
 448               	.LFE4:
 608               	.Letext0:
 609               		.file 2 "/usr/lib/gcc/avr/4.7.2/../../../avr/include/stdint.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 prime.c
     /tmp/ccAF6XR7.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccAF6XR7.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccAF6XR7.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccAF6XR7.s:5      *ABS*:000000000000003b __RAMPZ__
     /tmp/ccAF6XR7.s:6      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccAF6XR7.s:7      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccAF6XR7.s:12     .text:0000000000000000 divides
     /tmp/ccAF6XR7.s:79     .text:0000000000000060 even
     /tmp/ccAF6XR7.s:125    .text:000000000000009a prime
     /tmp/ccAF6XR7.s:282    .text:0000000000000196 swap
     /tmp/ccAF6XR7.s:361    .text:000000000000020c main

UNDEFINED SYMBOLS
__udivmodsi4
__mulsi3
