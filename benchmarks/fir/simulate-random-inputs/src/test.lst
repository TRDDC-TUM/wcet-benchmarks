   1               		.file	"test.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               	.global	fir_int
  11               		.section	.rodata
  14               	fir_int:
  15 0000 FE        		.byte	-2
  16 0001 FF        		.byte	-1
  17 0002 FF        		.byte	-1
  18 0003 FF        		.byte	-1
  19 0004 01        		.byte	1
  20 0005 00        		.byte	0
  21 0006 00        		.byte	0
  22 0007 00        		.byte	0
  23 0008 04        		.byte	4
  24 0009 00        		.byte	0
  25 000a 00        		.byte	0
  26 000b 00        		.byte	0
  27 000c 03        		.byte	3
  28 000d 00        		.byte	0
  29 000e 00        		.byte	0
  30 000f 00        		.byte	0
  31 0010 FE        		.byte	-2
  32 0011 FF        		.byte	-1
  33 0012 FF        		.byte	-1
  34 0013 FF        		.byte	-1
  35 0014 FC        		.byte	-4
  36 0015 FF        		.byte	-1
  37 0016 FF        		.byte	-1
  38 0017 FF        		.byte	-1
  39 0018 02        		.byte	2
  40 0019 00        		.byte	0
  41 001a 00        		.byte	0
  42 001b 00        		.byte	0
  43 001c 07        		.byte	7
  44 001d 00        		.byte	0
  45 001e 00        		.byte	0
  46 001f 00        		.byte	0
  47 0020 00        		.byte	0
  48 0021 00        		.byte	0
  49 0022 00        		.byte	0
  50 0023 00        		.byte	0
  51 0024 F7        		.byte	-9
  52 0025 FF        		.byte	-1
  53 0026 FF        		.byte	-1
  54 0027 FF        		.byte	-1
  55 0028 FC        		.byte	-4
  56 0029 FF        		.byte	-1
  57 002a FF        		.byte	-1
  58 002b FF        		.byte	-1
  59 002c 0C        		.byte	12
  60 002d 00        		.byte	0
  61 002e 00        		.byte	0
  62 002f 00        		.byte	0
  63 0030 0B        		.byte	11
  64 0031 00        		.byte	0
  65 0032 00        		.byte	0
  66 0033 00        		.byte	0
  67 0034 F2        		.byte	-14
  68 0035 FF        		.byte	-1
  69 0036 FF        		.byte	-1
  70 0037 FF        		.byte	-1
  71 0038 E6        		.byte	-26
  72 0039 FF        		.byte	-1
  73 003a FF        		.byte	-1
  74 003b FF        		.byte	-1
  75 003c 0F        		.byte	15
  76 003d 00        		.byte	0
  77 003e 00        		.byte	0
  78 003f 00        		.byte	0
  79 0040 59        		.byte	89
  80 0041 00        		.byte	0
  81 0042 00        		.byte	0
  82 0043 00        		.byte	0
  83 0044 7F        		.byte	127
  84 0045 00        		.byte	0
  85 0046 00        		.byte	0
  86 0047 00        		.byte	0
  87 0048 59        		.byte	89
  88 0049 00        		.byte	0
  89 004a 00        		.byte	0
  90 004b 00        		.byte	0
  91 004c 0F        		.byte	15
  92 004d 00        		.byte	0
  93 004e 00        		.byte	0
  94 004f 00        		.byte	0
  95 0050 E6        		.byte	-26
  96 0051 FF        		.byte	-1
  97 0052 FF        		.byte	-1
  98 0053 FF        		.byte	-1
  99 0054 F2        		.byte	-14
 100 0055 FF        		.byte	-1
 101 0056 FF        		.byte	-1
 102 0057 FF        		.byte	-1
 103 0058 0B        		.byte	11
 104 0059 00        		.byte	0
 105 005a 00        		.byte	0
 106 005b 00        		.byte	0
 107 005c 0C        		.byte	12
 108 005d 00        		.byte	0
 109 005e 00        		.byte	0
 110 005f 00        		.byte	0
 111 0060 FC        		.byte	-4
 112 0061 FF        		.byte	-1
 113 0062 FF        		.byte	-1
 114 0063 FF        		.byte	-1
 115 0064 F7        		.byte	-9
 116 0065 FF        		.byte	-1
 117 0066 FF        		.byte	-1
 118 0067 FF        		.byte	-1
 119 0068 00        		.byte	0
 120 0069 00        		.byte	0
 121 006a 00        		.byte	0
 122 006b 00        		.byte	0
 123 006c 07        		.byte	7
 124 006d 00        		.byte	0
 125 006e 00        		.byte	0
 126 006f 00        		.byte	0
 127 0070 02        		.byte	2
 128 0071 00        		.byte	0
 129 0072 00        		.byte	0
 130 0073 00        		.byte	0
 131 0074 FC        		.byte	-4
 132 0075 FF        		.byte	-1
 133 0076 FF        		.byte	-1
 134 0077 FF        		.byte	-1
 135 0078 FE        		.byte	-2
 136 0079 FF        		.byte	-1
 137 007a FF        		.byte	-1
 138 007b FF        		.byte	-1
 139 007c 03        		.byte	3
 140 007d 00        		.byte	0
 141 007e 00        		.byte	0
 142 007f 00        		.byte	0
 143 0080 04        		.byte	4
 144 0081 00        		.byte	0
 145 0082 00        		.byte	0
 146 0083 00        		.byte	0
 147 0084 01        		.byte	1
 148 0085 00        		.byte	0
 149 0086 00        		.byte	0
 150 0087 00        		.byte	0
 151 0088 FE        		.byte	-2
 152 0089 FF        		.byte	-1
 153 008a FF        		.byte	-1
 154 008b FF        		.byte	-1
 155 008c 00        		.byte	0
 156 008d 00        		.byte	0
 157 008e 00        		.byte	0
 158 008f 00        		.byte	0
 159               		.comm	output,880,1
 160               	.global	in_data
 163               	in_data:
 164 0090 FF        		.byte	-1
 165 0091 08        		.byte	8
 166 0092 4C        		.byte	76
 167 0093 D9        		.byte	-39
 168 0094 7B        		.byte	123
 169 0095 7D        		.byte	125
 170 0096 F5        		.byte	-11
 171 0097 E9        		.byte	-23
 172 0098 78        		.byte	120
 173 0099 A4        		.byte	-92
 174 009a A1        		.byte	-95
 175 009b E6        		.byte	-26
 176 009c 74        		.byte	116
 177 009d 7A        		.byte	122
 178 009e EB        		.byte	-21
 179 009f 91        		.byte	-111
 180 00a0 3E        		.byte	62
 181 00a1 E7        		.byte	-25
 182 00a2 85        		.byte	-123
 183 00a3 B6        		.byte	-74
 184 00a4 83        		.byte	-125
 185 00a5 39        		.byte	57
 186 00a6 07        		.byte	7
 187 00a7 02        		.byte	2
 188 00a8 51        		.byte	81
 189 00a9 8C        		.byte	-116
 190 00aa F3        		.byte	-13
 191 00ab 60        		.byte	96
 192 00ac BF        		.byte	-65
 193 00ad 75        		.byte	117
 194 00ae EE        		.byte	-18
 195 00af D5        		.byte	-43
 196 00b0 73        		.byte	115
 197 00b1 3F        		.byte	63
 198 00b2 5F        		.byte	95
 199 00b3 B6        		.byte	-74
 200 00b4 0F        		.byte	15
 201 00b5 DD        		.byte	-35
 202 00b6 00        		.byte	0
 203 00b7 F9        		.byte	-7
 204 00b8 22        		.byte	34
 205 00b9 E7        		.byte	-25
 206 00ba B6        		.byte	-74
 207 00bb 18        		.byte	24
 208 00bc A1        		.byte	-95
 209 00bd C7        		.byte	-57
 210 00be 16        		.byte	22
 211 00bf 2D        		.byte	45
 212 00c0 EC        		.byte	-20
 213 00c1 4B        		.byte	75
 214 00c2 AF        		.byte	-81
 215 00c3 0B        		.byte	11
 216 00c4 CA        		.byte	-54
 217 00c5 88        		.byte	-120
 218 00c6 E6        		.byte	-26
 219 00c7 F6        		.byte	-10
 220 00c8 C0        		.byte	-64
 221 00c9 84        		.byte	-124
 222 00ca 75        		.byte	117
 223 00cb F4        		.byte	-12
 224 00cc 61        		.byte	97
 225 00cd 08        		.byte	8
 226 00ce AA        		.byte	-86
 227 00cf AC        		.byte	-84
 228 00d0 22        		.byte	34
 229 00d1 0B        		.byte	11
 230 00d2 F8        		.byte	-8
 231 00d3 24        		.byte	36
 232 00d4 D5        		.byte	-43
 233 00d5 23        		.byte	35
 234 00d6 DE        		.byte	-34
 235 00d7 9B        		.byte	-101
 236 00d8 25        		.byte	37
 237 00d9 54        		.byte	84
 238 00da 67        		.byte	103
 239 00db CA        		.byte	-54
 240 00dc 74        		.byte	116
 241 00dd 2E        		.byte	46
 242 00de BA        		.byte	-70
 243 00df AB        		.byte	-85
 244 00e0 27        		.byte	39
 245 00e1 2B        		.byte	43
 246 00e2 D7        		.byte	-41
 247 00e3 90        		.byte	-112
 248 00e4 14        		.byte	20
 249 00e5 C3        		.byte	-61
 250 00e6 DB        		.byte	-37
 251 00e7 88        		.byte	-120
 252 00e8 EC        		.byte	-20
 253 00e9 AE        		.byte	-82
 254 00ea 4C        		.byte	76
 255 00eb 56        		.byte	86
 256 00ec 1E        		.byte	30
 257 00ed 2D        		.byte	45
 258 00ee 7F        		.byte	127
 259 00ef 5E        		.byte	94
 260 00f0 29        		.byte	41
 261 00f1 B6        		.byte	-74
 262 00f2 5B        		.byte	91
 263 00f3 A3        		.byte	-93
 264 00f4 8F        		.byte	-113
 265 00f5 E1        		.byte	-31
 266 00f6 0B        		.byte	11
 267 00f7 47        		.byte	71
 268 00f8 58        		.byte	88
 269 00f9 21        		.byte	33
 270 00fa E5        		.byte	-27
 271 00fb 54        		.byte	84
 272 00fc CA        		.byte	-54
 273 00fd 21        		.byte	33
 274 00fe 03        		.byte	3
 275 00ff E8        		.byte	-24
 276 0100 91        		.byte	-111
 277 0101 68        		.byte	104
 278 0102 D0        		.byte	-48
 279 0103 EC        		.byte	-20
 280 0104 EA        		.byte	-22
 281 0105 35        		.byte	53
 282 0106 D6        		.byte	-42
 283 0107 D0        		.byte	-48
 284 0108 01        		.byte	1
 285 0109 39        		.byte	57
 286 010a 7B        		.byte	123
 287 010b 16        		.byte	22
 288 010c 4A        		.byte	74
 289 010d D1        		.byte	-47
 290 010e D7        		.byte	-41
 291 010f E8        		.byte	-24
 292 0110 71        		.byte	113
 293 0111 3E        		.byte	62
 294 0112 99        		.byte	-103
 295 0113 CB        		.byte	-53
 296 0114 44        		.byte	68
 297 0115 10        		.byte	16
 298 0116 D2        		.byte	-46
 299 0117 25        		.byte	37
 300 0118 0C        		.byte	12
 301 0119 4D        		.byte	77
 302 011a 51        		.byte	81
 303 011b AF        		.byte	-81
 304 011c BF        		.byte	-65
 305 011d 85        		.byte	-123
 306 011e B9        		.byte	-71
 307 011f 9D        		.byte	-99
 308 0120 55        		.byte	85
 309 0121 EA        		.byte	-22
 310 0122 03        		.byte	3
 311 0123 89        		.byte	-119
 312 0124 AC        		.byte	-84
 313 0125 5F        		.byte	95
 314 0126 58        		.byte	88
 315 0127 BE        		.byte	-66
 316 0128 95        		.byte	-107
 317 0129 7C        		.byte	124
 318 012a 15        		.byte	21
 319 012b 70        		.byte	112
 320 012c 12        		.byte	18
 321 012d 69        		.byte	105
 322 012e 10        		.byte	16
 323 012f EF        		.byte	-17
 324 0130 4D        		.byte	77
 325 0131 53        		.byte	83
 326 0132 44        		.byte	68
 327 0133 27        		.byte	39
 328 0134 FA        		.byte	-6
 329 0135 97        		.byte	-105
 330 0136 CC        		.byte	-52
 331 0137 60        		.byte	96
 332 0138 CD        		.byte	-51
 333 0139 D7        		.byte	-41
 334 013a 24        		.byte	36
 335 013b 05        		.byte	5
 336 013c 2E        		.byte	46
 337 013d 33        		.byte	51
 338 013e 7C        		.byte	124
 339 013f 2D        		.byte	45
 340 0140 CE        		.byte	-50
 341 0141 EB        		.byte	-21
 342 0142 A0        		.byte	-96
 343 0143 A5        		.byte	-91
 344 0144 65        		.byte	101
 345 0145 22        		.byte	34
 346 0146 F4        		.byte	-12
 347 0147 5A        		.byte	90
 348 0148 7A        		.byte	122
 349 0149 19        		.byte	25
 350 014a 3E        		.byte	62
 351 014b 07        		.byte	7
 352 014c C0        		.byte	-64
 353 014d B1        		.byte	-79
 354 014e 6E        		.byte	110
 355 014f 20        		.byte	32
 356 0150 8C        		.byte	-116
 357 0151 7E        		.byte	126
 358 0152 5F        		.byte	95
 359 0153 8A        		.byte	-118
 360 0154 BB        		.byte	-69
 361 0155 AB        		.byte	-85
 362 0156 AF        		.byte	-81
 363 0157 A2        		.byte	-94
 364 0158 72        		.byte	114
 365 0159 A4        		.byte	-92
 366 015a 88        		.byte	-120
 367 015b 49        		.byte	73
 368 015c 6C        		.byte	108
 369 015d 17        		.byte	23
 370 015e BD        		.byte	-67
 371 015f CB        		.byte	-53
 372 0160 A8        		.byte	-88
 373 0161 74        		.byte	116
 374 0162 E5        		.byte	-27
 375 0163 C8        		.byte	-56
 376 0164 7D        		.byte	125
 377 0165 6D        		.byte	109
 378 0166 86        		.byte	-122
 379 0167 D3        		.byte	-45
 380 0168 42        		.byte	66
 381 0169 D3        		.byte	-45
 382 016a D2        		.byte	-46
 383 016b 97        		.byte	-105
 384 016c 0A        		.byte	10
 385 016d 4E        		.byte	78
 386 016e 96        		.byte	-106
 387 016f AD        		.byte	-83
 388 0170 48        		.byte	72
 389 0171 13        		.byte	19
 390 0172 2F        		.byte	47
 391 0173 A3        		.byte	-93
 392 0174 03        		.byte	3
 393 0175 AE        		.byte	-82
 394 0176 91        		.byte	-111
 395 0177 DC        		.byte	-36
 396 0178 82        		.byte	-126
 397 0179 FB        		.byte	-5
 398 017a 4F        		.byte	79
 399 017b DD        		.byte	-35
 400 017c 78        		.byte	120
 401 017d 0D        		.byte	13
 402 017e 49        		.byte	73
 403 017f FB        		.byte	-5
 404 0180 1F        		.byte	31
 405 0181 20        		.byte	32
 406 0182 C8        		.byte	-56
 407 0183 C6        		.byte	-58
 408 0184 DD        		.byte	-35
 409 0185 62        		.byte	98
 410 0186 B6        		.byte	-74
 411 0187 F3        		.byte	-13
 412 0188 CD        		.byte	-51
 413 0189 B9        		.byte	-71
 414 018a 14        		.byte	20
 415 018b 07        		.byte	7
 416 018c 02        		.byte	2
 417 018d 8F        		.byte	-113
 418 018e 20        		.byte	32
 419 018f 6E        		.byte	110
 420 0190 50        		.byte	80
 421 0191 29        		.byte	41
 422 0192 9F        		.byte	-97
 423 0193 8D        		.byte	-115
 424 0194 93        		.byte	-109
 425 0195 00        		.byte	0
 426 0196 D7        		.byte	-41
 427 0197 FF        		.byte	-1
 428 0198 77        		.byte	119
 429 0199 90        		.byte	-112
 430 019a 4F        		.byte	79
 431 019b B0        		.byte	-80
 432 019c F7        		.byte	-9
 433 019d 57        		.byte	87
 434 019e 1D        		.byte	29
 435 019f 11        		.byte	17
 436 01a0 54        		.byte	84
 437 01a1 BD        		.byte	-67
 438 01a2 07        		.byte	7
 439 01a3 AD        		.byte	-83
 440 01a4 C9        		.byte	-55
 441 01a5 54        		.byte	84
 442 01a6 B7        		.byte	-73
 443 01a7 31        		.byte	49
 444 01a8 A5        		.byte	-91
 445 01a9 65        		.byte	101
 446 01aa 76        		.byte	118
 447 01ab 3B        		.byte	59
 448 01ac 36        		.byte	54
 449 01ad 3C        		.byte	60
 450 01ae 5E        		.byte	94
 451 01af D8        		.byte	-40
 452 01b0 15        		.byte	21
 453 01b1 43        		.byte	67
 454 01b2 47        		.byte	71
 455 01b3 BE        		.byte	-66
 456 01b4 70        		.byte	112
 457 01b5 77        		.byte	119
 458 01b6 14        		.byte	20
 459 01b7 65        		.byte	101
 460 01b8 97        		.byte	-105
 461 01b9 17        		.byte	23
 462 01ba 9E        		.byte	-98
 463 01bb 70        		.byte	112
 464 01bc AA        		.byte	-86
 465 01bd F7        		.byte	-9
 466 01be 2F        		.byte	47
 467 01bf D8        		.byte	-40
 468 01c0 58        		.byte	88
 469 01c1 E9        		.byte	-23
 470 01c2 E7        		.byte	-25
 471 01c3 E7        		.byte	-25
 472 01c4 2B        		.byte	43
 473 01c5 BF        		.byte	-65
 474 01c6 91        		.byte	-111
 475 01c7 8A        		.byte	-118
 476 01c8 2E        		.byte	46
 477 01c9 D1        		.byte	-47
 478 01ca FD        		.byte	-3
 479 01cb CE        		.byte	-50
 480 01cc 47        		.byte	71
 481 01cd A2        		.byte	-94
 482 01ce 6D        		.byte	109
 483 01cf 9D        		.byte	-99
 484 01d0 20        		.byte	32
 485 01d1 32        		.byte	50
 486 01d2 7C        		.byte	124
 487 01d3 0A        		.byte	10
 488 01d4 28        		.byte	40
 489 01d5 13        		.byte	19
 490 01d6 38        		.byte	56
 491 01d7 58        		.byte	88
 492 01d8 20        		.byte	32
 493 01d9 3A        		.byte	58
 494 01da 9C        		.byte	-100
 495 01db F8        		.byte	-8
 496 01dc 0D        		.byte	13
 497 01dd AE        		.byte	-82
 498 01de CF        		.byte	-49
 499 01df 31        		.byte	49
 500 01e0 31        		.byte	49
 501 01e1 D7        		.byte	-41
 502 01e2 69        		.byte	105
 503 01e3 ED        		.byte	-19
 504 01e4 7E        		.byte	126
 505 01e5 49        		.byte	73
 506 01e6 80        		.byte	-128
 507 01e7 C8        		.byte	-56
 508 01e8 6A        		.byte	106
 509 01e9 57        		.byte	87
 510 01ea 40        		.byte	64
 511 01eb 30        		.byte	48
 512 01ec B2        		.byte	-78
 513 01ed 56        		.byte	86
 514 01ee 91        		.byte	-111
 515 01ef 48        		.byte	72
 516 01f0 EF        		.byte	-17
 517 01f1 2B        		.byte	43
 518 01f2 BB        		.byte	-69
 519 01f3 66        		.byte	102
 520 01f4 34        		.byte	52
 521 01f5 49        		.byte	73
 522 01f6 63        		.byte	99
 523 01f7 0F        		.byte	15
 524 01f8 F8        		.byte	-8
 525 01f9 86        		.byte	-122
 526 01fa 53        		.byte	83
 527 01fb 09        		.byte	9
 528 01fc 6D        		.byte	109
 529 01fd 68        		.byte	104
 530 01fe DC        		.byte	-36
 531 01ff 3B        		.byte	59
 532 0200 08        		.byte	8
 533 0201 28        		.byte	40
 534 0202 9D        		.byte	-99
 535 0203 67        		.byte	103
 536 0204 4F        		.byte	79
 537 0205 95        		.byte	-107
 538 0206 9B        		.byte	-101
 539 0207 17        		.byte	23
 540 0208 A4        		.byte	-92
 541 0209 47        		.byte	71
 542 020a 72        		.byte	114
 543 020b 15        		.byte	21
 544 020c DD        		.byte	-35
 545 020d 65        		.byte	101
 546 020e 0B        		.byte	11
 547 020f D0        		.byte	-48
 548 0210 12        		.byte	18
 549 0211 DB        		.byte	-37
 550 0212 74        		.byte	116
 551 0213 EF        		.byte	-17
 552 0214 C8        		.byte	-56
 553 0215 F1        		.byte	-15
 554 0216 F4        		.byte	-12
 555 0217 A8        		.byte	-88
 556 0218 34        		.byte	52
 557 0219 CE        		.byte	-50
 558 021a FF        		.byte	-1
 559 021b B0        		.byte	-80
 560 021c D4        		.byte	-44
 561 021d C9        		.byte	-55
 562 021e 90        		.byte	-112
 563 021f F3        		.byte	-13
 564 0220 02        		.byte	2
 565 0221 8E        		.byte	-114
 566 0222 F5        		.byte	-11
 567 0223 AB        		.byte	-85
 568 0224 A2        		.byte	-94
 569 0225 83        		.byte	-125
 570 0226 9B        		.byte	-101
 571 0227 B5        		.byte	-75
 572 0228 6D        		.byte	109
 573 0229 D5        		.byte	-43
 574 022a A0        		.byte	-96
 575 022b 22        		.byte	34
 576 022c E9        		.byte	-23
 577 022d 7C        		.byte	124
 578 022e B9        		.byte	-71
 579 022f 18        		.byte	24
 580 0230 98        		.byte	-104
 581 0231 3D        		.byte	61
 582 0232 3F        		.byte	63
 583 0233 99        		.byte	-103
 584 0234 44        		.byte	68
 585 0235 49        		.byte	73
 586 0236 0D        		.byte	13
 587 0237 30        		.byte	48
 588 0238 D2        		.byte	-46
 589 0239 9F        		.byte	-97
 590 023a 33        		.byte	51
 591 023b 39        		.byte	57
 592 023c E4        		.byte	-28
 593 023d 97        		.byte	-105
 594 023e 98        		.byte	-104
 595 023f AA        		.byte	-86
 596 0240 1F        		.byte	31
 597 0241 48        		.byte	72
 598 0242 A0        		.byte	-96
 599 0243 5C        		.byte	92
 600 0244 E0        		.byte	-32
 601 0245 52        		.byte	82
 602 0246 7B        		.byte	123
 603 0247 47        		.byte	71
 604 0248 5E        		.byte	94
 605 0249 FA        		.byte	-6
 606 024a D9        		.byte	-39
 607 024b 50        		.byte	80
 608 024c 7E        		.byte	126
 609 024d E1        		.byte	-31
 610 024e C6        		.byte	-58
 611 024f 2F        		.byte	47
 612 0250 9A        		.byte	-102
 613 0251 D3        		.byte	-45
 614 0252 A6        		.byte	-90
 615 0253 21        		.byte	33
 616 0254 C1        		.byte	-63
 617 0255 3C        		.byte	60
 618 0256 58        		.byte	88
 619 0257 D3        		.byte	-45
 620 0258 41        		.byte	65
 621 0259 B2        		.byte	-78
 622 025a D0        		.byte	-48
 623 025b 76        		.byte	118
 624 025c D6        		.byte	-42
 625 025d 08        		.byte	8
 626 025e 1D        		.byte	29
 627 025f C5        		.byte	-59
 628 0260 C9        		.byte	-55
 629 0261 6B        		.byte	107
 630 0262 7E        		.byte	126
 631 0263 D6        		.byte	-42
 632 0264 E7        		.byte	-25
 633 0265 E5        		.byte	-27
 634 0266 EC        		.byte	-20
 635 0267 4E        		.byte	78
 636 0268 73        		.byte	115
 637 0269 73        		.byte	115
 638 026a 8B        		.byte	-117
 639 026b 7B        		.byte	123
 640 026c A3        		.byte	-93
 641 026d 49        		.byte	73
 642 026e 72        		.byte	114
 643 026f 82        		.byte	-126
 644 0270 36        		.byte	54
 645 0271 CB        		.byte	-53
 646 0272 09        		.byte	9
 647 0273 6A        		.byte	106
 648 0274 39        		.byte	57
 649 0275 AF        		.byte	-81
 650 0276 78        		.byte	120
 651 0277 08        		.byte	8
 652 0278 D7        		.byte	-41
 653 0279 28        		.byte	40
 654 027a 2D        		.byte	45
 655 027b D0        		.byte	-48
 656 027c 88        		.byte	-120
 657 027d E2        		.byte	-30
 658 027e 02        		.byte	2
 659 027f 7C        		.byte	124
 660 0280 C8        		.byte	-56
 661 0281 25        		.byte	37
 662 0282 A3        		.byte	-93
 663 0283 29        		.byte	41
 664 0284 ED        		.byte	-19
 665 0285 94        		.byte	-108
 666 0286 BD        		.byte	-67
 667 0287 11        		.byte	17
 668 0288 22        		.byte	34
 669 0289 92        		.byte	-110
 670 028a 48        		.byte	72
 671 028b 8F        		.byte	-113
 672 028c 4D        		.byte	77
 673 028d A2        		.byte	-94
 674 028e D6        		.byte	-42
 675 028f FC        		.byte	-4
 676 0290 84        		.byte	-124
 677 0291 50        		.byte	80
 678 0292 73        		.byte	115
 679 0293 DB        		.byte	-37
 680 0294 5D        		.byte	93
 681 0295 3A        		.byte	58
 682 0296 83        		.byte	-125
 683 0297 70        		.byte	112
 684 0298 B4        		.byte	-76
 685 0299 C7        		.byte	-57
 686 029a 0F        		.byte	15
 687 029b DC        		.byte	-36
 688 029c 06        		.byte	6
 689 029d 63        		.byte	99
 690 029e 7D        		.byte	125
 691 029f 6E        		.byte	110
 692 02a0 37        		.byte	55
 693 02a1 37        		.byte	55
 694 02a2 DA        		.byte	-38
 695 02a3 A7        		.byte	-89
 696 02a4 79        		.byte	121
 697 02a5 03        		.byte	3
 698 02a6 D6        		.byte	-42
 699 02a7 A1        		.byte	-95
 700 02a8 21        		.byte	33
 701 02a9 3F        		.byte	63
 702 02aa 2D        		.byte	45
 703 02ab A8        		.byte	-88
 704 02ac 80        		.byte	-128
 705 02ad 5D        		.byte	93
 706 02ae 1C        		.byte	28
 707 02af 57        		.byte	87
 708 02b0 12        		.byte	18
 709 02b1 C2        		.byte	-62
 710 02b2 10        		.byte	16
 711 02b3 2A        		.byte	42
 712 02b4 CC        		.byte	-52
 713 02b5 AD        		.byte	-83
 714 02b6 25        		.byte	37
 715 02b7 08        		.byte	8
 716 02b8 10        		.byte	16
 717 02b9 9B        		.byte	-101
 718 02ba F7        		.byte	-9
 719 02bb 90        		.byte	-112
 720 02bc D0        		.byte	-48
 721 02bd F9        		.byte	-7
 722 02be 1D        		.byte	29
 723 02bf DC        		.byte	-36
 724 02c0 47        		.byte	71
 725 02c1 0A        		.byte	10
 726 02c2 7F        		.byte	127
 727 02c3 B3        		.byte	-77
 728 02c4 84        		.byte	-124
 729 02c5 8C        		.byte	-116
 730 02c6 33        		.byte	51
 731 02c7 35        		.byte	53
 732 02c8 DA        		.byte	-38
 733 02c9 D4        		.byte	-44
 734 02ca 63        		.byte	99
 735 02cb FC        		.byte	-4
 736 02cc 98        		.byte	-104
 737 02cd 9D        		.byte	-99
 738 02ce 7E        		.byte	126
 739 02cf 53        		.byte	83
 740 02d0 B2        		.byte	-78
 741 02d1 27        		.byte	39
 742 02d2 F6        		.byte	-10
 743 02d3 7A        		.byte	122
 744 02d4 58        		.byte	88
 745 02d5 3D        		.byte	61
 746 02d6 FA        		.byte	-6
 747 02d7 D0        		.byte	-48
 748 02d8 65        		.byte	101
 749 02d9 6F        		.byte	111
 750 02da A6        		.byte	-90
 751 02db EA        		.byte	-22
 752 02dc 4D        		.byte	77
 753 02dd 0E        		.byte	14
 754 02de 92        		.byte	-110
 755 02df 7A        		.byte	122
 756 02e0 5F        		.byte	95
 757 02e1 6A        		.byte	106
 758 02e2 43        		.byte	67
 759 02e3 8B        		.byte	-117
 760 02e4 1F        		.byte	31
 761 02e5 00        		.byte	0
 762 02e6 51        		.byte	81
 763 02e7 50        		.byte	80
 764 02e8 28        		.byte	40
 765 02e9 4F        		.byte	79
 766 02ea A9        		.byte	-87
 767 02eb 4F        		.byte	79
 768 02ec 46        		.byte	70
 769 02ed 5C        		.byte	92
 770 02ee E3        		.byte	-29
 771 02ef 10        		.byte	16
 772 02f0 41        		.byte	65
 773 02f1 D3        		.byte	-45
 774 02f2 E1        		.byte	-31
 775 02f3 2A        		.byte	42
 776 02f4 50        		.byte	80
 777 02f5 34        		.byte	52
 778 02f6 C5        		.byte	-59
 779 02f7 AE        		.byte	-82
 780 02f8 FF        		.byte	-1
 781 02f9 3E        		.byte	62
 782 02fa C8        		.byte	-56
 783 02fb 1B        		.byte	27
 784 02fc EB        		.byte	-21
 785 02fd E7        		.byte	-25
 786 02fe 55        		.byte	85
 787 02ff F0        		.byte	-16
 788 0300 79        		.byte	121
 789 0301 12        		.byte	18
 790 0302 1F        		.byte	31
 791 0303 CF        		.byte	-49
 792 0304 D5        		.byte	-43
 793 0305 8D        		.byte	-115
 794 0306 3B        		.byte	59
 795 0307 F7        		.byte	-9
 796 0308 BD        		.byte	-67
 797 0309 DD        		.byte	-35
 798 030a 65        		.byte	101
 799 030b 20        		.byte	32
 800 030c A2        		.byte	-94
 801 030d 71        		.byte	113
 802 030e 6D        		.byte	109
 803 030f D5        		.byte	-43
 804 0310 3E        		.byte	62
 805 0311 03        		.byte	3
 806 0312 70        		.byte	112
 807 0313 90        		.byte	-112
 808 0314 E7        		.byte	-25
 809 0315 80        		.byte	-128
 810 0316 0A        		.byte	10
 811 0317 51        		.byte	81
 812 0318 13        		.byte	19
 813 0319 DC        		.byte	-36
 814 031a 32        		.byte	50
 815 031b C4        		.byte	-60
 816 031c 1C        		.byte	28
 817 031d C0        		.byte	-64
 818 031e 78        		.byte	120
 819 031f 5F        		.byte	95
 820 0320 53        		.byte	83
 821 0321 C9        		.byte	-55
 822 0322 2A        		.byte	42
 823 0323 B1        		.byte	-79
 824 0324 AA        		.byte	-86
 825 0325 FE        		.byte	-2
 826 0326 82        		.byte	-126
 827 0327 55        		.byte	85
 828 0328 2A        		.byte	42
 829 0329 7E        		.byte	126
 830 032a 70        		.byte	112
 831 032b B6        		.byte	-74
 832 032c C5        		.byte	-59
 833 032d 37        		.byte	55
 834 032e B6        		.byte	-74
 835 032f 0E        		.byte	14
 836 0330 28        		.byte	40
 837 0331 75        		.byte	117
 838 0332 F5        		.byte	-11
 839 0333 84        		.byte	-124
 840 0334 1B        		.byte	27
 841 0335 F5        		.byte	-11
 842 0336 9B        		.byte	-101
 843 0337 DE        		.byte	-34
 844 0338 4E        		.byte	78
 845 0339 E6        		.byte	-26
 846 033a 20        		.byte	32
 847 033b 50        		.byte	80
 848 033c 5D        		.byte	93
 849 033d 98        		.byte	-104
 850 033e 30        		.byte	48
 851 033f D8        		.byte	-40
 852 0340 AA        		.byte	-86
 853 0341 2E        		.byte	46
 854 0342 82        		.byte	-126
 855 0343 4E        		.byte	78
 856 0344 CA        		.byte	-54
 857 0345 C4        		.byte	-60
 858 0346 B9        		.byte	-71
 859 0347 A6        		.byte	-90
 860 0348 8E        		.byte	-114
 861 0349 98        		.byte	-104
 862 034a 3E        		.byte	62
 863 034b E8        		.byte	-24
 864 034c E1        		.byte	-31
 865 034d 1B        		.byte	27
 866 034e 5E        		.byte	94
 867 034f FA        		.byte	-6
 868 0350 02        		.byte	2
 869 0351 04        		.byte	4
 870 0352 2F        		.byte	47
 871 0353 44        		.byte	68
 872 0354 5E        		.byte	94
 873 0355 9B        		.byte	-101
 874 0356 15        		.byte	21
 875 0357 48        		.byte	72
 876 0358 81        		.byte	-127
 877 0359 64        		.byte	100
 878 035a A2        		.byte	-94
 879 035b 7E        		.byte	126
 880 035c 2F        		.byte	47
 881 035d 5C        		.byte	92
 882 035e EE        		.byte	-18
 883 035f 02        		.byte	2
 884 0360 BF        		.byte	-65
 885 0361 25        		.byte	37
 886 0362 E0        		.byte	-32
 887 0363 DD        		.byte	-35
 888 0364 DF        		.byte	-33
 889 0365 2D        		.byte	45
 890 0366 7E        		.byte	126
 891 0367 EE        		.byte	-18
 892 0368 07        		.byte	7
 893 0369 AF        		.byte	-81
 894 036a 71        		.byte	113
 895 036b F3        		.byte	-13
 896 036c 45        		.byte	69
 897 036d B1        		.byte	-79
 898 036e 8C        		.byte	-116
 899 036f 92        		.byte	-110
 900 0370 AB        		.byte	-85
 901 0371 0A        		.byte	10
 902 0372 5E        		.byte	94
 903 0373 08        		.byte	8
 904 0374 8D        		.byte	-115
 905 0375 DA        		.byte	-38
 906 0376 8C        		.byte	-116
 907 0377 A2        		.byte	-94
 908 0378 F3        		.byte	-13
 909 0379 EC        		.byte	-20
 910 037a 08        		.byte	8
 911 037b 05        		.byte	5
 912 037c 1D        		.byte	29
 913 037d 69        		.byte	105
 914 037e F2        		.byte	-14
 915 037f 8F        		.byte	-113
 916 0380 07        		.byte	7
 917 0381 55        		.byte	85
 918 0382 92        		.byte	-110
 919 0383 C9        		.byte	-55
 920 0384 E2        		.byte	-30
 921 0385 AF        		.byte	-81
 922 0386 ED        		.byte	-19
 923 0387 67        		.byte	103
 924 0388 C9        		.byte	-55
 925 0389 60        		.byte	96
 926 038a 5F        		.byte	95
 927 038b 8C        		.byte	-116
 928 038c C7        		.byte	-57
 929 038d B4        		.byte	-76
 930 038e 30        		.byte	48
 931 038f 5F        		.byte	95
 932 0390 34        		.byte	52
 933 0391 22        		.byte	34
 934 0392 1D        		.byte	29
 935 0393 E6        		.byte	-26
 936 0394 C2        		.byte	-62
 937 0395 BA        		.byte	-70
 938 0396 A1        		.byte	-95
 939 0397 C1        		.byte	-63
 940 0398 8A        		.byte	-118
 941 0399 B0        		.byte	-80
 942 039a B7        		.byte	-73
 943 039b AA        		.byte	-86
 944 039c C3        		.byte	-61
 945 039d DA        		.byte	-38
 946 039e 68        		.byte	104
 947 039f 5D        		.byte	93
 948 03a0 23        		.byte	35
 949 03a1 2F        		.byte	47
 950 03a2 9A        		.byte	-102
 951 03a3 48        		.byte	72
 952 03a4 26        		.byte	38
 953 03a5 23        		.byte	35
 954 03a6 B5        		.byte	-75
 955 03a7 7E        		.byte	126
 956 03a8 8C        		.byte	-116
 957 03a9 AF        		.byte	-81
 958 03aa 7E        		.byte	126
 959 03ab 52        		.byte	82
 960 03ac 07        		.byte	7
 961 03ad 76        		.byte	118
 962 03ae 92        		.byte	-110
 963 03af CE        		.byte	-50
 964 03b0 C9        		.byte	-55
 965 03b1 84        		.byte	-124
 966 03b2 62        		.byte	98
 967 03b3 F6        		.byte	-10
 968               		.text
 969               	.global	main
 971               	main:
 972               	.LFB1:
 973               		.file 1 "src/test.c"
   1:src/test.c    **** /* MDH WCET BENCHMARK SUITE. */
   2:src/test.c    **** /* 2012/09/28, Jan Gustafsson <jan.gustafsson@mdh.se>
   3:src/test.c    ****  * Changes:
   4:src/test.c    ****  *  - Adam Betts wrote: I'm currently looking at the fir benchmark and noticed something
   5:src/test.c    ****  * peculiar. The "in_data" array has 701 elements (effectively 700 as the
   6:src/test.c    ****  * last elements acts as a sentinel value) and "fir_filter_int" requires
   7:src/test.c    ****  * the length of the input/output arrays (passed in the " in_len"
   8:src/test.c    ****  * argument). So I was expecting 700 to be passed as this parameter. Indeed it was,
   9:src/test.c    ****  * but it has since been changed. The code now contains the following 2
  10:src/test.c    ****  * lines:
  11:src/test.c    ****  *
  12:src/test.c    ****  * //  fir_filter_int(in_data,output,700,fir_int,35,285); Changed JG/Ebbe
  13:src/test.c    ****  * fir_filter_int(in_data,output,10,fir_int,35,285);
  14:src/test.c    ****  *
  15:src/test.c    ****  * Can you explain why the change?
  16:src/test.c    ****  *
  17:src/test.c    ****  ***
  18:src/test.c    ****  *
  19:src/test.c    ****  * Jan G wrote: Since neither Ebbe nor I can explain the change, I propose to change it back.
  20:src/test.c    ****  * =>
  21:src/test.c    ****  * Action: Fixed.
  22:src/test.c    ****  */
  23:src/test.c    **** 
  24:src/test.c    **** 
  25:src/test.c    **** /* Execute the integer fir filter from "C Algorithms for DSP".
  26:src/test.c    ****  *
  27:src/test.c    ****  * Adapted for WCET benchmarking by IJAE May 2000.
  28:src/test.c    ****  *
  29:src/test.c    ****  * Features: nested variable-length loops.
  30:src/test.c    ****  *           if-statement with branches taken a known number of times
  31:src/test.c    ****  *
  32:src/test.c    ****  * Added explicit sizes of the arrays to work-around a bug in the
  33:src/test.c    ****  * NIC-compiler. Christer Sandberg
  34:src/test.c    ****  */
  35:src/test.c    **** /* #define LOOPS 720 */
  36:src/test.c    **** #define LOOPS 1
  37:src/test.c    **** 
  38:src/test.c    **** #ifdef __AVR__
  39:src/test.c    ****   #include <avr/pgmspace.h>
  40:src/test.c    ****   #define STORE_IN_TEXT_SEGMENT   /*PROGMEM*/ /* __attribute__ ((section (".text"))) */
  41:src/test.c    **** #else
  42:src/test.c    ****   #define STORE_IN_TEXT_SEGMENT   /* nada */
  43:src/test.c    **** #endif
  44:src/test.c    **** 
  45:src/test.c    **** #define INSIZE 201
  46:src/test.c    **** #define OUTSIZE (INSIZE+19)
  47:src/test.c    **** 
  48:src/test.c    **** /*--------------------------------------------------
  49:src/test.c    ****  *---- INPUT DATA FOR TESTING
  50:src/test.c    ****  *--------------------------------------------------*/
  51:src/test.c    **** const long fir_int[36] STORE_IN_TEXT_SEGMENT = {
  52:src/test.c    **** 0xfffffffe, 0x1, 0x4, 0x3, 0xfffffffe, 0xfffffffc, 0x2, 0x7, 0x0,
  53:src/test.c    **** 0xfffffff7, 0xfffffffc, 0xc, 0xb, 0xfffffff2, 0xffffffe6, 0xf, 0x59, 0x7f,
  54:src/test.c    **** 0x59, 0xf, 0xffffffe6, 0xfffffff2, 0xb, 0xc, 0xfffffffc, 0xfffffff7, 0x0,
  55:src/test.c    **** 0x7, 0x2, 0xfffffffc, 0xfffffffe, 0x3, 0x4, 0x1, 0xfffffffe, 0} ;
  56:src/test.c    **** 
  57:src/test.c    **** long  output[OUTSIZE]; // because stack too small, put it in .data
  58:src/test.c    **** 
  59:src/test.c    **** const long in_data[INSIZE] STORE_IN_TEXT_SEGMENT = {20825508095,8220147067,21049222264,19627997812,
  60:src/test.c    **** /*
  61:src/test.c    **** {
  62:src/test.c    **** 0x0, 0x0, 0x0, 0x0, 0x7f, 0x79, 0x72, 0x79, 0xd, 0xd,
  63:src/test.c    **** 0x0, 0x3, 0x5, 0x2, 0x3, 0x7f, 0x7f, 0x2, 0x7e, 0x0,
  64:src/test.c    **** 0x1, 0x7e, 0x1, 0x1, 0x7f, 0x0, 0x7f, 0x0, 0x2, 0x1,
  65:src/test.c    **** 0x1, 0x3, 0x1, 0x7f, 0x1, 0x0, 0x1, 0x1, 0x7d, 0x7b,
  66:src/test.c    **** 0x73, 0x6a, 0x77, 0x10, 0xe, 0x1, 0x5, 0x5, 0x5, 0x5,
  67:src/test.c    **** 0x7d, 0x0, 0x2, 0x7d, 0x0, 0x0, 0x7e, 0x1, 0x7e, 0x7f,
  68:src/test.c    **** 0x3, 0x7c, 0x7e, 0x6, 0x0, 0x7e, 0x3, 0x2, 0x7f, 0x7e,
  69:src/test.c    **** 0x7f, 0x2, 0x1, 0x7f, 0x1, 0x1, 0x0, 0x3, 0x0, 0x7f,
  70:src/test.c    **** 0x2, 0x0, 0x7f, 0x3, 0x1, 0x0, 0x0, 0x7d, 0x0, 0x3,
  71:src/test.c    **** 0x0, 0x7e, 0x7f, 0x2, 0x1, 0x7e, 0x0, 0x3, 0x7f, 0x7d,
  72:src/test.c    **** 0x1, 0x1, 0x1, 0x7f, 0x0, 0x5, 0x0, 0x7f, 0x2, 0x7e,
  73:src/test.c    **** 0x7f, 0x2, 0x1, 0x0, 0x7e, 0x0, 0x5, 0x0, 0x7f, 0x0,
  74:src/test.c    **** 0x7e, 0x1, 0x0, 0x7d, 0x1, 0x3, 0x7f, 0x0, 0x0, 0x7e,
  75:src/test.c    **** 0x2, 0x3, 0x7e, 0x7d, 0x72, 0x68, 0x71, 0x5, 0xc, 0x7,
  76:src/test.c    **** 0x2, 0x6, 0xd, 0x5, 0x7d, 0x3, 0x2, 0x7f, 0x0, 0x79,
  77:src/test.c    **** 0x7a, 0x3, 0x7e, 0x7d, 0x0, 0x7d, 0x2, 0x1, 0x7d, 0x8,
  78:src/test.c    **** 0x3, 0x7c, 0x6, 0x0, 0x7a, 0x6, 0x2, 0x7c, 0x3, 0x7e,
  79:src/test.c    **** 0x79, 0x6, 0x5, 0x74, 0x7f, 0xd, 0x7a, 0x78, 0x6, 0x5,
  80:src/test.c    **** 0x1, 0x0, 0x7d, 0x1, 0x4, 0x7c, 0x7f, 0x3, 0x7f, 0x5,
  81:src/test.c    **** 0x3, 0x7a, 0x6, 0xa, 0x76, 0x7c, 0xa, 0x7c, 0x7f, 0x6,
  82:src/test.c    **** 0x79, 0x3, 0xc, 0x75, 0x78, 0xa, 0x0, 0x79, 0x3, 0x7e,
  83:src/test.c    **** 0x7c, 0x6, 0x0, 0x79, 0x2, 0x7e, 0x7f, 0x6, 0x76, 0x7f,
  84:src/test.c    **** 0xd, 0x79, 0x7f, 0x6, 0x79, 0x6, 0x3, 0x71, 0x6, 0xa,
  85:src/test.c    **** 0x73, 0x7f, 0xa, 0x0, 0x7f, 0x7a, 0x7c, 0xa, 0x0, 0x75,
  86:src/test.c    **** 0x7f, 0xc, 0xa, 0x7c, 0x79, 0x9, 0xd, 0x7d, 0x7a, 0x5,
  87:src/test.c    **** 0xb, 0xa, 0x79, 0x7c, 0x16, 0x3, 0x72, 0xd, 0x7, 0x79,
  88:src/test.c    **** 0xc, 0x7, 0x7a, 0xb, 0x7, 0x7a, 0xa, 0x7, 0x79, 0xa,
  89:src/test.c    **** 0x5, 0x75, 0x6, 0x5, 0x79, 0x5, 0x6, 0x1, 0x6, 0x0,
  90:src/test.c    **** 0x7a, 0x2, 0x7, 0x3, 0x7d, 0x1, 0xa, 0x7, 0x2, 0x7f,
  91:src/test.c    **** 0x7f, 0x9, 0x7, 0x79, 0x79, 0x6, 0x8, 0x7d, 0x7a, 0x6,
  92:src/test.c    **** 0xc, 0x6, 0x7d, 0x7f, 0xd, 0x7, 0x79, 0x1, 0x6, 0x7f,
  93:src/test.c    **** 0x7f, 0x2, 0x3, 0x1, 0x7e, 0x1, 0x1, 0x7d, 0x1, 0x0,
  94:src/test.c    **** 0x7d, 0x6, 0x3, 0x7d, 0x5, 0x7, 0x7f, 0x7c, 0x1, 0x6,
  95:src/test.c    **** 0x6, 0x7c, 0x7a, 0x7, 0xa, 0x0, 0x78, 0x1, 0x8, 0x0,
  96:src/test.c    **** 0x79, 0x7a, 0x4, 0xa, 0x0, 0x78, 0x1, 0x6, 0x7a, 0x75,
  97:src/test.c    **** 0x7a, 0x0, 0x0, 0x79, 0x76, 0x7f, 0x7, 0x0, 0x7a, 0x7d,
  98:src/test.c    **** 0x2, 0x4, 0x7c, 0x7a, 0x2, 0x5, 0x7c, 0x7a, 0x7d, 0x7f,
  99:src/test.c    **** 0x0, 0x78, 0x75, 0x7f, 0x0, 0x79, 0x78, 0x79, 0x1, 0x3,
 100:src/test.c    **** 0x79, 0x79, 0x0, 0x0, 0x7f, 0x7f, 0x79, 0x7f, 0x2, 0x7a,
 101:src/test.c    **** 0x7c, 0x7d, 0x7c, 0x7f, 0x7d, 0x79, 0x7d, 0x0, 0x79, 0x7a,
 102:src/test.c    **** 0x7c, 0x7d, 0x0, 0x7d, 0x7d, 0x0, 0x0, 0x0, 0x0, 0x7d,
 103:src/test.c    **** 0x7d, 0x0, 0x7d, 0x7e, 0x0, 0x7e, 0x3, 0x3, 0x7d, 0x1,
 104:src/test.c    **** 0x5, 0x0, 0x7e, 0x7d, 0x7f, 0x3, 0x7d, 0x79, 0x1, 0x2,
 105:src/test.c    **** 0x7d, 0x7f, 0x1, 0x0, 0x0, 0x7f, 0x7f, 0x7e, 0x7f, 0x0,
 106:src/test.c    **** 0x7f, 0x0, 0x7c, 0x7d, 0x0, 0x79, 0x78, 0x7c, 0x7c, 0x7b,
 107:src/test.c    **** 0x7b, 0x7d, 0x7f, 0x0, 0x0, 0x7f, 0x0, 0x1, 0x2, 0x0,
 108:src/test.c    **** 0x7f, 0x0, 0x0, 0x0, 0x7f, 0x7e, 0x0, 0x0, 0x7f, 0x0,
 109:src/test.c    **** 0x2, 0x1, 0x2, 0x6, 0x5, 0x3, 0x6, 0x8, 0x5, 0x2,
 110:src/test.c    **** 0x1, 0x1, 0x3, 0x0, 0x7d, 0x7f, 0x0, 0x7f, 0x7e, 0x0,
 111:src/test.c    **** 0x2, 0x3, 0x2, 0x1, 0x2, 0x3, 0x1, 0x7c, 0x7d, 0x0,
 112:src/test.c    **** 0x0, 0x7e, 0x7c, 0x7f, 0x1, 0x0, 0x7e, 0x7c, 0x7f, 0x1,
 113:src/test.c    **** 0x0, 0x7e, 0x7f, 0x2, 0x3, 0x1, 0x0, 0x4, 0x6, 0x5,
 114:src/test.c    **** 0x6, 0x7, 0xa, 0xa, 0x4, 0x2, 0x5, 0x8, 0x9, 0x8,
 115:src/test.c    **** 0x7, 0xc, 0x14, 0x14, 0x10, 0xe, 0x14, 0x15, 0xf, 0x9,
 116:src/test.c    **** 0x7, 0x4, 0x7e, 0x76, 0x64, 0x41, 0x48, 0x7d, 0x6c, 0x3d,
 117:src/test.c    **** 0x67, 0x10, 0x6, 0x7d, 0x75, 0x7, 0x1d, 0x0, 0x6c, 0x2,
 118:src/test.c    **** 0x7d, 0x78, 0x77, 0x6f, 0x77, 0x1, 0x0, 0x2, 0x7, 0xa,
 119:src/test.c    **** 0x1c, 0x1c, 0x17, 0x23, 0x2f, 0x41, 0x43, 0x4f, 0x55, 0x58,
 120:src/test.c    **** 0x7e, 0x2, 0x4c, 0x10, 0x69, 0x2c, 0xd, 0x74, 0x2a, 0x74,
 121:src/test.c    **** 0x63, 0x29, 0x7c, 0x5e, 0x21, 0x35, 0x46, 0x24, 0x67, 0x35,
 122:src/test.c    **** 0x3c, 0x3c, 0x26, 0x26, 0x2f, 0x47, 0x64, 0x4, 0x13, 0x18,
 123:src/test.c    **** 0x27, 0x2b, 0x30, 0x1b, 0x7f, 0x78, 0x72, 0x68, 0x5c, 0x5a,
 124:src/test.c    **** 0x68, 0x7c, 0x3, 0xd, 0x26, 0x41, 0x51, 0x5a, 0x6a, 0x6c,
 125:src/test.c    **** 0x54, 0x78, 0x9, 0x45, 0x79, 0x1f, 0xb, 0x2e, 0x60, 0xb,
 126:src/test.c    **** 0x66, 0x7f, 0x68, 0x77, 0x4e, 0x46, 0x4a, 0x3b, 0x12, 0x5b,
 127:src/test.c    **** 0x37, 0x31, 0x21, 0xb, 0x12, 0x2e, 0x57, 0x7e, 0x19, 0x22,
 128:src/test.c    **** 0x2b, 0x3f, 0x3a, 0x25, 0xb, 0x79, 0x71, 0x68, 0x61, 0x5c,
 129:src/test.c    **** 0x66, 0x72, 0x6, 0x16, 0x29, 0x41, 0x5e, 0x6d, 0x66, 0x60,
 130:src/test.c    **** 0x6e, 0x17, 0x48, 0x36, 0x12, 0x17, 0x2f, 0x63, 0x78, 0x5c,
 131:src/test.c    **** 0x77, 0x6c, 0x75, 0x41, 0x49, 0x4f, 0x3b, 0xb, 0x54, 0x37,
 132:src/test.c    **** 0 };
 133:src/test.c    **** */
 134:src/test.c    **** 
 135:src/test.c    **** #if 0
 136:src/test.c    **** const long out_data[720] PROGMEM ={
 137:src/test.c    **** 0x3, 0xfffffffa, 0xfffffffd, 0x1d, 0x58, 0x89, 0x87, 0x56, 0x20, 0x7,
 138:src/test.c    **** 0x7, 0x4, 0xfffffff9, 0x0, 0x28, 0x5b, 0x6b, 0x4f, 0x2b, 0x21,
 139:src/test.c    **** 0x2d, 0x30, 0x27, 0x27, 0x37, 0x47, 0x42, 0x27, 0x8, 0xfffffff4,
 140:src/test.c    **** 0xfffffff5, 0xd, 0x2e, 0x3b, 0x25, 0x0, 0xfffffff8, 0x1d, 0x59, 0x83,
 141:src/test.c    **** 0x87, 0x6f, 0x4e, 0x2f, 0x12, 0xffffffff, 0xfffffffb, 0x4, 0x15, 0x23,
 142:src/test.c    **** 0x2d, 0x31, 0x2f, 0x29, 0x26, 0x2a, 0x36, 0x48, 0x58, 0x5f,
 143:src/test.c    **** 0x5a, 0x4f, 0x46, 0x41, 0x32, 0x1b, 0x17, 0x37, 0x69, 0x7b,
 144:src/test.c    **** 0x59, 0x2f, 0x24, 0x30, 0x2a, 0x8, 0xfffffff6, 0x7, 0x24, 0x31,
 145:src/test.c    **** 0x2f, 0x33, 0x32, 0x1e, 0x4, 0x7, 0x23, 0x33, 0x21, 0xe,
 146:src/test.c    **** 0x1e, 0x4a, 0x61, 0x4b, 0x21, 0xe, 0x22, 0x49, 0x5e, 0x4d,
 147:src/test.c    **** 0x25, 0xb, 0x18, 0x32, 0x33, 0x15, 0x5, 0x29, 0x64, 0x76,
 148:src/test.c    **** 0x4d, 0x16, 0x9, 0x26, 0x37, 0x23, 0xb, 0x15, 0x3c, 0x52,
 149:src/test.c    **** 0x40, 0x23, 0x1d, 0x2d, 0x36, 0x2d, 0x24, 0x29, 0x32, 0x2c,
 150:src/test.c    **** 0x21, 0x2b, 0x50, 0x7b, 0x8d, 0x73, 0x47, 0x22, 0xf, 0x7,
 151:src/test.c    **** 0xffffffff, 0x0, 0x13, 0x2d, 0x36, 0x2b, 0x23, 0x32, 0x4e, 0x5c,
 152:src/test.c    **** 0x55, 0x4f, 0x55, 0x5c, 0x50, 0x34, 0x20, 0x22, 0x32, 0x38,
 153:src/test.c    **** 0x2f, 0x25, 0x2a, 0x35, 0x32, 0x23, 0x1f, 0x36, 0x57, 0x60,
 154:src/test.c    **** 0x4c, 0x31, 0x2d, 0x40, 0x57, 0x67, 0x67, 0x4c, 0x21, 0x4,
 155:src/test.c    **** 0x8, 0x20, 0x30, 0x2c, 0x33, 0x4e, 0x61, 0x56, 0x39, 0x26,
 156:src/test.c    **** 0x26, 0x2b, 0x2e, 0x38, 0x4a, 0x57, 0x58, 0x5c, 0x5f, 0x50,
 157:src/test.c    **** 0x31, 0x1d, 0x31, 0x58, 0x5d, 0x37, 0x16, 0x23, 0x55, 0x71,
 158:src/test.c    **** 0x56, 0x28, 0x18, 0x30, 0x51, 0x60, 0x5c, 0x52, 0x4f, 0x54,
 159:src/test.c    **** 0x5e, 0x62, 0x57, 0x45, 0x3a, 0x35, 0x26, 0x17, 0x23, 0x47,
 160:src/test.c    **** 0x5d, 0x48, 0x27, 0x30, 0x61, 0x79, 0x5a, 0x31, 0x2d, 0x45,
 161:src/test.c    **** 0x4f, 0x41, 0x3e, 0x48, 0x48, 0x3a, 0x3d, 0x53, 0x55, 0x2f,
 162:src/test.c    **** 0xd, 0x1f, 0x55, 0x69, 0x47, 0x1e, 0x1c, 0x32, 0x3c, 0x31,
 163:src/test.c    **** 0x28, 0x2d, 0x34, 0x32, 0x2e, 0x2e, 0x2f, 0x2d, 0x2f, 0x32,
 164:src/test.c    **** 0x2f, 0x26, 0x23, 0x30, 0x3d, 0x2c, 0x3, 0xffffffef, 0xa, 0x34,
 165:src/test.c    **** 0x39, 0x18, 0xa, 0x28, 0x42, 0x28, 0xfffffffb, 0xfffffffe, 0x37, 0x61,
 166:src/test.c    **** 0x53, 0x32, 0x35, 0x4b, 0x4c, 0x36, 0x36, 0x4e, 0x56, 0x33,
 167:src/test.c    **** 0xe, 0x1b, 0x4e, 0x69, 0x51, 0x22, 0xd, 0x24, 0x4b, 0x5e,
 168:src/test.c    **** 0x4d, 0x2a, 0x12, 0x16, 0x29, 0x35, 0x33, 0x2a, 0x25, 0x26,
 169:src/test.c    **** 0x2f, 0x38, 0x31, 0x1d, 0x1d, 0x42, 0x68, 0x58, 0x1a, 0xffffffff,
 170:src/test.c    **** 0x2a, 0x63, 0x5f, 0x27, 0xa, 0x22, 0x34, 0x1e, 0xb, 0x27,
 171:src/test.c    **** 0x58, 0x5a, 0x2e, 0x10, 0x1b, 0x28, 0x23, 0x31, 0x60, 0x7c,
 172:src/test.c    **** 0x56, 0x1b, 0x1d, 0x5d, 0x81, 0x5c, 0x29, 0x2c, 0x4e, 0x51,
 173:src/test.c    **** 0x35, 0x33, 0x4d, 0x53, 0x32, 0x24, 0x50, 0x86, 0x85, 0x5a,
 174:src/test.c    **** 0x46, 0x5d, 0x6b, 0x5b, 0x4f, 0x63, 0x71, 0x54, 0x2a, 0x2c,
 175:src/test.c    **** 0x50, 0x56, 0x30, 0x1e, 0x4d, 0x8d, 0x90, 0x5b, 0x3a, 0x55,
 176:src/test.c    **** 0x80, 0x89, 0x78, 0x7b, 0x8a, 0x7d, 0x53, 0x3e, 0x5b, 0x83,
 177:src/test.c    **** 0x7f, 0x59, 0x4a, 0x5b, 0x5e, 0x2e, 0xfffffff4, 0xfffffff3, 0x2d, 0x5f,
 178:src/test.c    **** 0x61, 0x50, 0x54, 0x5e, 0x50, 0x30, 0x26, 0x34, 0x32, 0x18,
 179:src/test.c    **** 0x9, 0x27, 0x5b, 0x74, 0x6d, 0x5e, 0x52, 0x40, 0x2d, 0x34,
 180:src/test.c    **** 0x54, 0x5c, 0x31, 0x0, 0xa, 0x56, 0x9c, 0x96, 0x59, 0x2e,
 181:src/test.c    **** 0x38, 0x57, 0x5e, 0x4b, 0x46, 0x5e, 0x78, 0x7c, 0x77, 0x80,
 182:src/test.c    **** 0x8d, 0x7d, 0x4f, 0x2b, 0x2b, 0x33, 0x1e, 0x0, 0x6, 0x28,
 183:src/test.c    **** 0x37, 0x1d, 0x9, 0x24, 0x53, 0x5d, 0x3d, 0x1f, 0x21, 0x29,
 184:src/test.c    **** 0x18, 0xfffffffc, 0xfffffff5, 0x6, 0x12, 0x9, 0xfffffffd, 0x1, 0xf, 0xc,
 185:src/test.c    **** 0xfffffffa, 0xfffffff2, 0x9, 0x32, 0x4d, 0x56, 0x5c, 0x62, 0x53, 0x27,
 186:src/test.c    **** 0x0, 0xfffffffc, 0xc, 0x8, 0xfffffff0, 0xfffffff9, 0x36, 0x6a, 0x55, 0x1c,
 187:src/test.c    **** 0x1b, 0x60, 0x8e, 0x61, 0x15, 0x14, 0x5e, 0x8c, 0x61, 0x1d,
 188:src/test.c    **** 0x1a, 0x52, 0x6b, 0x3d, 0xfffffffb, 0xffffffe8, 0x1, 0x15, 0xc, 0xfffffffe,
 189:src/test.c    **** 0x0, 0xd, 0x11, 0x9, 0x1, 0x1, 0x7, 0xc, 0xb, 0x7,
 190:src/test.c    **** 0x6, 0xd, 0x16, 0x17, 0x10, 0xc, 0x13, 0x1c, 0x13, 0x0,
 191:src/test.c    **** 0x0, 0x26, 0x5f, 0x7b, 0x68, 0x48, 0x48, 0x68, 0x7d, 0x60,
 192:src/test.c    **** 0x2d, 0x19, 0x37, 0x5c, 0x5a, 0x31, 0xf, 0x13, 0x31, 0x4c,
 193:src/test.c    **** 0x5e, 0x71, 0x83, 0x7f, 0x58, 0x20, 0xfffffffd, 0xfffffff8, 0x9, 0x18,
 194:src/test.c    **** 0x19, 0x16, 0x19, 0x27, 0x37, 0x3d, 0x42, 0x4f, 0x62, 0x65,
 195:src/test.c    **** 0x4f, 0x33, 0x2c, 0x36, 0x3d, 0x38, 0x34, 0x40, 0x54, 0x5d,
 196:src/test.c    **** 0x5b, 0x58, 0x59, 0x53, 0x41, 0x32, 0x33, 0x3f, 0x4a, 0x4b,
 197:src/test.c    **** 0x43, 0x33, 0x25, 0x28, 0x3d, 0x4f, 0x44, 0x23, 0xe, 0x16,
 198:src/test.c    **** 0x29, 0x2c, 0x28, 0x39, 0x63, 0x84, 0x7d, 0x5f, 0x56, 0x69,
 199:src/test.c    **** 0x73, 0x56, 0x24, 0xc, 0x1e, 0x40, 0x56, 0x60, 0x69, 0x6e,
 200:src/test.c    **** 0x63, 0x4e, 0x42, 0x44, 0x47, 0x3b, 0x2a, 0x22, 0x2d, 0x45,
 201:src/test.c    **** 0x5d, 0x70, 0x77, 0x6d, 0x5b, 0x4a, 0x3f, 0x37, 0x32, 0x39,
 202:src/test.c    **** 0x43, 0x3d, 0x20, 0x5, 0x10, 0x3f, 0x64, 0x5a, 0x34, 0x21,
 203:src/test.c    **** 0x2e, 0x3e, 0x33, 0x22, 0x30, 0x59, 0x75, 0x71, 0x60, 0x61,
 204:src/test.c    **** 0x67, 0x55, 0x2d, 0x12, 0x1d, 0x43, 0x65, 0x71, 0x6c, 0x5f,
 205:src/test.c    **** 0x53, 0x47, 0x39, 0x29, 0x1c, 0x1e, 0x35, 0x56, 0x6f, 0x74,
 206:src/test.c    **** 0x6f, 0x6a, 0x66, 0x5c, 0x4b, 0x3a, 0x33, 0x36, 0x38, 0x2c,
 207:src/test.c    **** 0 };
 208:src/test.c    **** #endif
 209:src/test.c    **** 
 210:src/test.c    **** 
 211:src/test.c    **** /*--------------------------------------------------
 212:src/test.c    ****  *--- Prototypes
 213:src/test.c    ****  *--------------------------------------------------*/
 214:src/test.c    **** 
 215:src/test.c    **** 
 216:src/test.c    **** void fir_filter_int(const long* in,long* out,long in_len,
 217:src/test.c    ****                     const long* coef,long coef_len,
 218:src/test.c    ****                     long scale);
 219:src/test.c    **** 
 220:src/test.c    **** 
 221:src/test.c    **** /*--------------------------------------------------
 222:src/test.c    ****  *--- Main Function
 223:src/test.c    ****  *--------------------------------------------------*/
 224:src/test.c    **** int main()
 225:src/test.c    **** {
 974               		.loc 1 225 0
 975 0000 8F92      		push r8
 976               	.LCFI0:
 977 0002 9F92      		push r9
 978               	.LCFI1:
 979 0004 AF92      		push r10
 980               	.LCFI2:
 981 0006 BF92      		push r11
 982               	.LCFI3:
 983 0008 CF92      		push r12
 984               	.LCFI4:
 985 000a DF92      		push r13
 986               	.LCFI5:
 987 000c EF92      		push r14
 988               	.LCFI6:
 989 000e FF92      		push r15
 990               	.LCFI7:
 991 0010 0F93      		push r16
 992               	.LCFI8:
 993 0012 1F93      		push r17
 994               	.LCFI9:
 995 0014 CF93      		push r28
 996               	.LCFI10:
 997 0016 DF93      		push r29
 998               	.LCFI11:
 999 0018 CDB7      		in r28,__SP_L__
 1000 001a DEB7      		in r29,__SP_H__
 1001               	.LCFI12:
 1002               	/* prologue: function */
 1003               	/* frame size = 0 */
 1004               	/* stack size = 12 */
 1005               	.L__stack_usage = 12
 226:src/test.c    ****   
 227:src/test.c    **** 
 228:src/test.c    ****   fir_filter_int(in_data,output,700,fir_int,35,285); 
 1006               		.loc 1 228 0
 1007 001c 0F2E      		mov __tmp_reg__,r31
 1008 001e FDE1      		ldi r31,lo8(29)
 1009 0020 8F2E      		mov r8,r31
 1010 0022 9924      		clr r9
 1011 0024 9394      		inc r9
 1012 0026 A12C      		mov r10,__zero_reg__
 1013 0028 B12C      		mov r11,__zero_reg__
 1014 002a F02D      		mov r31,__tmp_reg__
 1015 002c 0F2E      		mov __tmp_reg__,r31
 1016 002e F3E2      		ldi r31,lo8(35)
 1017 0030 CF2E      		mov r12,r31
 1018 0032 D12C      		mov r13,__zero_reg__
 1019 0034 E12C      		mov r14,__zero_reg__
 1020 0036 F12C      		mov r15,__zero_reg__
 1021 0038 F02D      		mov r31,__tmp_reg__
 1022 003a 00E0      		ldi r16,lo8(fir_int)
 1023 003c 10E0      		ldi r17,hi8(fir_int)
 1024 003e 2CEB      		ldi r18,lo8(-68)
 1025 0040 32E0      		ldi r19,lo8(2)
 1026 0042 40E0      		ldi r20,0
 1027 0044 50E0      		ldi r21,0
 1028 0046 60E0      		ldi r22,lo8(output)
 1029 0048 70E0      		ldi r23,hi8(output)
 1030 004a 80E0      		ldi r24,lo8(in_data)
 1031 004c 90E0      		ldi r25,hi8(in_data)
 1032 004e 0E94 0000 		call fir_filter_int
 229:src/test.c    **** //  fir_filter_int(in_data,output,10,fir_int,35,285);Changed JG/Ebbe
 230:src/test.c    **** 
 231:src/test.c    ****   /* Verify results */
 232:src/test.c    ****   /*for(i=0;i<700;i++)*/
 233:src/test.c    ****   /* if (output[i]!=out_data[i])*/
 234:src/test.c    ****   /*{ printf("Error: index %d, data %x != %x\n",*/
 235:src/test.c    ****   /* i, output[i], out_data[i]); */
 236:src/test.c    ****   /* break; */
 237:src/test.c    ****   /* }*/
 238:src/test.c    ****   return 0;
 1033               		.loc 1 238 0
 1034 0052 80E0      		ldi r24,0
 1035 0054 90E0      		ldi r25,0
 1036               	/* epilogue start */
 239:src/test.c    **** }
 1037               		.loc 1 239 0
 1038 0056 DF91      		pop r29
 1039 0058 CF91      		pop r28
 1040 005a 1F91      		pop r17
 1041 005c 0F91      		pop r16
 1042 005e FF90      		pop r15
 1043 0060 EF90      		pop r14
 1044 0062 DF90      		pop r13
 1045 0064 CF90      		pop r12
 1046 0066 BF90      		pop r11
 1047 0068 AF90      		pop r10
 1048 006a 9F90      		pop r9
 1049 006c 8F90      		pop r8
 1050 006e 0895      		ret
 1051               	.LFE1:
 1053               	.global	fir_filter_int
 1055               	fir_filter_int:
 1056               	.LFB2:
 240:src/test.c    **** 
 241:src/test.c    **** /**************************************************************************
 242:src/test.c    **** fir_filter_int - Filters int data array based on passed int coefficients.
 243:src/test.c    **** 
 244:src/test.c    **** The length of the input and output arrays are equal
 245:src/test.c    **** and are allocated by the calller.
 246:src/test.c    **** The length of the coefficient array is passed.
 247:src/test.c    **** An integer scale factor (passed) is used to divide the accumulation result.
 248:src/test.c    **** 
 249:src/test.c    **** void fir_filter_int(int *in,int *out,int in_len,
 250:src/test.c    ****                                   int *coef,int coef_len,int scale)
 251:src/test.c    **** 
 252:src/test.c    ****     in          integer pointer to input array
 253:src/test.c    ****     out         integer pointer to output array
 254:src/test.c    ****     in_len      length of input and output arrays
 255:src/test.c    ****     coef        integer pointer to coefficient array
 256:src/test.c    ****     coef_len    length of coeffient array
 257:src/test.c    ****     scale       scale factor to divide after accumulation
 258:src/test.c    **** 
 259:src/test.c    **** No return value.
 260:src/test.c    **** 
 261:src/test.c    **** *************************************************************************/
 262:src/test.c    **** 
 263:src/test.c    **** void fir_filter_int(const long* in,long* out,long in_len,
 264:src/test.c    ****                     const long* coef,long coef_len,
 265:src/test.c    ****                     long scale)
 266:src/test.c    **** {
 1057               		.loc 1 266 0
 1058 0070 8F92      		push r8
 1059               	.LCFI13:
 1060 0072 9F92      		push r9
 1061               	.LCFI14:
 1062 0074 AF92      		push r10
 1063               	.LCFI15:
 1064 0076 BF92      		push r11
 1065               	.LCFI16:
 1066 0078 CF92      		push r12
 1067               	.LCFI17:
 1068 007a DF92      		push r13
 1069               	.LCFI18:
 1070 007c EF92      		push r14
 1071               	.LCFI19:
 1072 007e FF92      		push r15
 1073               	.LCFI20:
 1074 0080 0F93      		push r16
 1075               	.LCFI21:
 1076 0082 1F93      		push r17
 1077               	.LCFI22:
 1078 0084 CF93      		push r28
 1079               	.LCFI23:
 1080 0086 DF93      		push r29
 1081               	.LCFI24:
 1082 0088 CDB7      		in r28,__SP_L__
 1083 008a DEB7      		in r29,__SP_H__
 1084               	.LCFI25:
 1085 008c E097      		sbiw r28,48
 1086               	.LCFI26:
 1087 008e 0FB6      		in __tmp_reg__,__SREG__
 1088 0090 F894      		cli
 1089 0092 DEBF      		out __SP_H__,r29
 1090 0094 0FBE      		out __SREG__,__tmp_reg__
 1091 0096 CDBF      		out __SP_L__,r28
 1092               	/* prologue: function */
 1093               	/* frame size = 48 */
 1094               	/* stack size = 60 */
 1095               	.L__stack_usage = 60
 1096 0098 98A3      		std Y+32,r25
 1097 009a 8F8F      		std Y+31,r24
 1098 009c 7AA3      		std Y+34,r23
 1099 009e 69A3      		std Y+33,r22
 1100 00a0 2BA3      		std Y+35,r18
 1101 00a2 3CA3      		std Y+36,r19
 1102 00a4 4DA3      		std Y+37,r20
 1103 00a6 5EA3      		std Y+38,r21
 1104 00a8 18A7      		std Y+40,r17
 1105 00aa 0FA3      		std Y+39,r16
 1106 00ac C9A6      		std Y+41,r12
 1107 00ae DAA6      		std Y+42,r13
 1108 00b0 EBA6      		std Y+43,r14
 1109 00b2 FCA6      		std Y+44,r15
 1110 00b4 8DA6      		std Y+45,r8
 1111 00b6 9EA6      		std Y+46,r9
 1112 00b8 AFA6      		std Y+47,r10
 1113 00ba B8AA      		std Y+48,r11
 267:src/test.c    ****   long i,j,coef_len2,acc_length;
 268:src/test.c    ****   long acc;
 269:src/test.c    ****   const long *coef_start, *coef_ptr, *in_ptr, *in_end, *data_ptr;
 270:src/test.c    **** 
 271:src/test.c    ****   /* set up for coefficients */
 272:src/test.c    ****   coef_start = coef;
 1114               		.loc 1 272 0
 1115 00bc 8FA1      		ldd r24,Y+39
 1116 00be 98A5      		ldd r25,Y+40
 1117 00c0 9A8B      		std Y+18,r25
 1118 00c2 898B      		std Y+17,r24
 273:src/test.c    ****   coef_len2 = (coef_len + 1) >> 1;
 1119               		.loc 1 273 0
 1120 00c4 89A5      		ldd r24,Y+41
 1121 00c6 9AA5      		ldd r25,Y+42
 1122 00c8 ABA5      		ldd r26,Y+43
 1123 00ca BCA5      		ldd r27,Y+44
 1124 00cc 0196      		adiw r24,1
 1125 00ce A11D      		adc r26,__zero_reg__
 1126 00d0 B11D      		adc r27,__zero_reg__
 1127 00d2 B595      		asr r27
 1128 00d4 A795      		ror r26
 1129 00d6 9795      		ror r25
 1130 00d8 8795      		ror r24
 1131 00da 898F      		std Y+25,r24
 1132 00dc 9A8F      		std Y+26,r25
 1133 00de AB8F      		std Y+27,r26
 1134 00e0 BC8F      		std Y+28,r27
 274:src/test.c    **** 
 275:src/test.c    ****   /* set up input data pointers */
 276:src/test.c    ****   in_end = in + in_len - 1;
 1135               		.loc 1 276 0
 1136 00e2 8BA1      		ldd r24,Y+35
 1137 00e4 9CA1      		ldd r25,Y+36
 1138 00e6 0197      		sbiw r24,1
 1139 00e8 880F      		lsl r24
 1140 00ea 991F      		rol r25
 1141 00ec 880F      		lsl r24
 1142 00ee 991F      		rol r25
 1143 00f0 2F8D      		ldd r18,Y+31
 1144 00f2 38A1      		ldd r19,Y+32
 1145 00f4 820F      		add r24,r18
 1146 00f6 931F      		adc r25,r19
 1147 00f8 9E8F      		std Y+30,r25
 1148 00fa 8D8F      		std Y+29,r24
 277:src/test.c    ****   in_ptr = in + coef_len2 - 1;
 1149               		.loc 1 277 0
 1150 00fc 898D      		ldd r24,Y+25
 1151 00fe 9A8D      		ldd r25,Y+26
 1152 0100 0197      		sbiw r24,1
 1153 0102 880F      		lsl r24
 1154 0104 991F      		rol r25
 1155 0106 880F      		lsl r24
 1156 0108 991F      		rol r25
 1157 010a 2F8D      		ldd r18,Y+31
 1158 010c 38A1      		ldd r19,Y+32
 1159 010e 820F      		add r24,r18
 1160 0110 931F      		adc r25,r19
 1161 0112 9E8B      		std Y+22,r25
 1162 0114 8D8B      		std Y+21,r24
 278:src/test.c    **** 
 279:src/test.c    ****   /* initial value of accumulation length for startup */
 280:src/test.c    ****   acc_length = coef_len2;
 1163               		.loc 1 280 0
 1164 0116 898D      		ldd r24,Y+25
 1165 0118 9A8D      		ldd r25,Y+26
 1166 011a AB8D      		ldd r26,Y+27
 1167 011c BC8D      		ldd r27,Y+28
 1168 011e 8987      		std Y+9,r24
 1169 0120 9A87      		std Y+10,r25
 1170 0122 AB87      		std Y+11,r26
 1171 0124 BC87      		std Y+12,r27
 281:src/test.c    **** 
 282:src/test.c    ****   for(i = 0 ; i < in_len ; i++) {
 1172               		.loc 1 282 0
 1173 0126 1982      		std Y+1,__zero_reg__
 1174 0128 1A82      		std Y+2,__zero_reg__
 1175 012a 1B82      		std Y+3,__zero_reg__
 1176 012c 1C82      		std Y+4,__zero_reg__
 1177 012e 00C0      		rjmp .L4
 1178               	.L10:
 283:src/test.c    **** 
 284:src/test.c    ****     /* set up pointer for accumulation */
 285:src/test.c    ****     data_ptr = in_ptr;
 1179               		.loc 1 285 0
 1180 0130 8D89      		ldd r24,Y+21
 1181 0132 9E89      		ldd r25,Y+22
 1182 0134 988F      		std Y+24,r25
 1183 0136 8F8B      		std Y+23,r24
 286:src/test.c    ****     coef_ptr = coef_start;
 1184               		.loc 1 286 0
 1185 0138 8989      		ldd r24,Y+17
 1186 013a 9A89      		ldd r25,Y+18
 1187 013c 9C8B      		std Y+20,r25
 1188 013e 8B8B      		std Y+19,r24
 287:src/test.c    **** 
 288:src/test.c    ****     /* do accumulation and write result with scale factor */
 289:src/test.c    **** 
 290:src/test.c    ****     acc = (long)(*coef_ptr++) * (*data_ptr--);
 1189               		.loc 1 290 0
 1190 0140 8B89      		ldd r24,Y+19
 1191 0142 9C89      		ldd r25,Y+20
 1192 0144 FC01      		movw r30,r24
 1193 0146 2081      		ld r18,Z
 1194 0148 3181      		ldd r19,Z+1
 1195 014a 4281      		ldd r20,Z+2
 1196 014c 5381      		ldd r21,Z+3
 1197 014e 8F89      		ldd r24,Y+23
 1198 0150 988D      		ldd r25,Y+24
 1199 0152 FC01      		movw r30,r24
 1200 0154 8081      		ld r24,Z
 1201 0156 9181      		ldd r25,Z+1
 1202 0158 A281      		ldd r26,Z+2
 1203 015a B381      		ldd r27,Z+3
 1204 015c BC01      		movw r22,r24
 1205 015e CD01      		movw r24,r26
 1206 0160 0E94 0000 		call __mulsi3
 1207 0164 DC01      		movw r26,r24
 1208 0166 CB01      		movw r24,r22
 1209 0168 8D87      		std Y+13,r24
 1210 016a 9E87      		std Y+14,r25
 1211 016c AF87      		std Y+15,r26
 1212 016e B88B      		std Y+16,r27
 1213 0170 8B89      		ldd r24,Y+19
 1214 0172 9C89      		ldd r25,Y+20
 1215 0174 0496      		adiw r24,4
 1216 0176 9C8B      		std Y+20,r25
 1217 0178 8B8B      		std Y+19,r24
 1218 017a 8F89      		ldd r24,Y+23
 1219 017c 988D      		ldd r25,Y+24
 1220 017e 0497      		sbiw r24,4
 1221 0180 988F      		std Y+24,r25
 1222 0182 8F8B      		std Y+23,r24
 291:src/test.c    ****     for(j = 1 ; j < acc_length ; j++)
 1223               		.loc 1 291 0
 1224 0184 81E0      		ldi r24,lo8(1)
 1225 0186 90E0      		ldi r25,0
 1226 0188 A0E0      		ldi r26,0
 1227 018a B0E0      		ldi r27,0
 1228 018c 8D83      		std Y+5,r24
 1229 018e 9E83      		std Y+6,r25
 1230 0190 AF83      		std Y+7,r26
 1231 0192 B887      		std Y+8,r27
 1232 0194 00C0      		rjmp .L5
 1233               	.L6:
 292:src/test.c    ****       acc += (long)(*coef_ptr++) * (*data_ptr--);
 1234               		.loc 1 292 0 discriminator 2
 1235 0196 8B89      		ldd r24,Y+19
 1236 0198 9C89      		ldd r25,Y+20
 1237 019a FC01      		movw r30,r24
 1238 019c 2081      		ld r18,Z
 1239 019e 3181      		ldd r19,Z+1
 1240 01a0 4281      		ldd r20,Z+2
 1241 01a2 5381      		ldd r21,Z+3
 1242 01a4 8F89      		ldd r24,Y+23
 1243 01a6 988D      		ldd r25,Y+24
 1244 01a8 FC01      		movw r30,r24
 1245 01aa 8081      		ld r24,Z
 1246 01ac 9181      		ldd r25,Z+1
 1247 01ae A281      		ldd r26,Z+2
 1248 01b0 B381      		ldd r27,Z+3
 1249 01b2 BC01      		movw r22,r24
 1250 01b4 CD01      		movw r24,r26
 1251 01b6 0E94 0000 		call __mulsi3
 1252 01ba DC01      		movw r26,r24
 1253 01bc CB01      		movw r24,r22
 1254 01be 2D85      		ldd r18,Y+13
 1255 01c0 3E85      		ldd r19,Y+14
 1256 01c2 4F85      		ldd r20,Y+15
 1257 01c4 5889      		ldd r21,Y+16
 1258 01c6 820F      		add r24,r18
 1259 01c8 931F      		adc r25,r19
 1260 01ca A41F      		adc r26,r20
 1261 01cc B51F      		adc r27,r21
 1262 01ce 8D87      		std Y+13,r24
 1263 01d0 9E87      		std Y+14,r25
 1264 01d2 AF87      		std Y+15,r26
 1265 01d4 B88B      		std Y+16,r27
 1266 01d6 8B89      		ldd r24,Y+19
 1267 01d8 9C89      		ldd r25,Y+20
 1268 01da 0496      		adiw r24,4
 1269 01dc 9C8B      		std Y+20,r25
 1270 01de 8B8B      		std Y+19,r24
 1271 01e0 8F89      		ldd r24,Y+23
 1272 01e2 988D      		ldd r25,Y+24
 1273 01e4 0497      		sbiw r24,4
 1274 01e6 988F      		std Y+24,r25
 1275 01e8 8F8B      		std Y+23,r24
 291:src/test.c    ****     for(j = 1 ; j < acc_length ; j++)
 1276               		.loc 1 291 0 discriminator 2
 1277 01ea 8D81      		ldd r24,Y+5
 1278 01ec 9E81      		ldd r25,Y+6
 1279 01ee AF81      		ldd r26,Y+7
 1280 01f0 B885      		ldd r27,Y+8
 1281 01f2 0196      		adiw r24,1
 1282 01f4 A11D      		adc r26,__zero_reg__
 1283 01f6 B11D      		adc r27,__zero_reg__
 1284 01f8 8D83      		std Y+5,r24
 1285 01fa 9E83      		std Y+6,r25
 1286 01fc AF83      		std Y+7,r26
 1287 01fe B887      		std Y+8,r27
 1288               	.L5:
 291:src/test.c    ****     for(j = 1 ; j < acc_length ; j++)
 1289               		.loc 1 291 0 is_stmt 0 discriminator 1
 1290 0200 2D81      		ldd r18,Y+5
 1291 0202 3E81      		ldd r19,Y+6
 1292 0204 4F81      		ldd r20,Y+7
 1293 0206 5885      		ldd r21,Y+8
 1294 0208 8985      		ldd r24,Y+9
 1295 020a 9A85      		ldd r25,Y+10
 1296 020c AB85      		ldd r26,Y+11
 1297 020e BC85      		ldd r27,Y+12
 1298 0210 2817      		cp r18,r24
 1299 0212 3907      		cpc r19,r25
 1300 0214 4A07      		cpc r20,r26
 1301 0216 5B07      		cpc r21,r27
 1302 0218 04F4      		brge .+2
 1303 021a 00C0      		rjmp .L6
 293:src/test.c    ****     *out++ = (int)(acc/scale);
 1304               		.loc 1 293 0 is_stmt 1
 1305 021c 8D85      		ldd r24,Y+13
 1306 021e 9E85      		ldd r25,Y+14
 1307 0220 AF85      		ldd r26,Y+15
 1308 0222 B889      		ldd r27,Y+16
 1309 0224 2DA5      		ldd r18,Y+45
 1310 0226 3EA5      		ldd r19,Y+46
 1311 0228 4FA5      		ldd r20,Y+47
 1312 022a 58A9      		ldd r21,Y+48
 1313 022c BC01      		movw r22,r24
 1314 022e CD01      		movw r24,r26
 1315 0230 0E94 0000 		call __divmodsi4
 1316 0234 DA01      		movw r26,r20
 1317 0236 C901      		movw r24,r18
 1318 0238 AA27      		clr r26
 1319 023a 97FD      		sbrc r25,7
 1320 023c A095      		com r26
 1321 023e BA2F      		mov r27,r26
 1322 0240 29A1      		ldd r18,Y+33
 1323 0242 3AA1      		ldd r19,Y+34
 1324 0244 F901      		movw r30,r18
 1325 0246 8083      		st Z,r24
 1326 0248 9183      		std Z+1,r25
 1327 024a A283      		std Z+2,r26
 1328 024c B383      		std Z+3,r27
 1329 024e 89A1      		ldd r24,Y+33
 1330 0250 9AA1      		ldd r25,Y+34
 1331 0252 0496      		adiw r24,4
 1332 0254 9AA3      		std Y+34,r25
 1333 0256 89A3      		std Y+33,r24
 294:src/test.c    **** 
 295:src/test.c    ****     /* check for end case */
 296:src/test.c    **** 
 297:src/test.c    ****     if(in_ptr == in_end) {
 1334               		.loc 1 297 0
 1335 0258 2D89      		ldd r18,Y+21
 1336 025a 3E89      		ldd r19,Y+22
 1337 025c 8D8D      		ldd r24,Y+29
 1338 025e 9E8D      		ldd r25,Y+30
 1339 0260 2817      		cp r18,r24
 1340 0262 3907      		cpc r19,r25
 1341 0264 01F4      		brne .L7
 298:src/test.c    ****       acc_length--;       /* one shorter each time */
 1342               		.loc 1 298 0
 1343 0266 8985      		ldd r24,Y+9
 1344 0268 9A85      		ldd r25,Y+10
 1345 026a AB85      		ldd r26,Y+11
 1346 026c BC85      		ldd r27,Y+12
 1347 026e 0197      		sbiw r24,1
 1348 0270 A109      		sbc r26,__zero_reg__
 1349 0272 B109      		sbc r27,__zero_reg__
 1350 0274 8987      		std Y+9,r24
 1351 0276 9A87      		std Y+10,r25
 1352 0278 AB87      		std Y+11,r26
 1353 027a BC87      		std Y+12,r27
 299:src/test.c    ****       coef_start++;       /* next coefficient each time */
 1354               		.loc 1 299 0
 1355 027c 8989      		ldd r24,Y+17
 1356 027e 9A89      		ldd r25,Y+18
 1357 0280 0496      		adiw r24,4
 1358 0282 9A8B      		std Y+18,r25
 1359 0284 898B      		std Y+17,r24
 1360 0286 00C0      		rjmp .L8
 1361               	.L7:
 300:src/test.c    ****     }
 301:src/test.c    **** 
 302:src/test.c    ****     /* if not at end, then check for startup, add to input pointer */
 303:src/test.c    **** 
 304:src/test.c    ****     else {
 305:src/test.c    ****       if(acc_length < coef_len) acc_length++;
 1362               		.loc 1 305 0
 1363 0288 2985      		ldd r18,Y+9
 1364 028a 3A85      		ldd r19,Y+10
 1365 028c 4B85      		ldd r20,Y+11
 1366 028e 5C85      		ldd r21,Y+12
 1367 0290 89A5      		ldd r24,Y+41
 1368 0292 9AA5      		ldd r25,Y+42
 1369 0294 ABA5      		ldd r26,Y+43
 1370 0296 BCA5      		ldd r27,Y+44
 1371 0298 2817      		cp r18,r24
 1372 029a 3907      		cpc r19,r25
 1373 029c 4A07      		cpc r20,r26
 1374 029e 5B07      		cpc r21,r27
 1375 02a0 04F4      		brge .L9
 1376               		.loc 1 305 0 is_stmt 0 discriminator 1
 1377 02a2 8985      		ldd r24,Y+9
 1378 02a4 9A85      		ldd r25,Y+10
 1379 02a6 AB85      		ldd r26,Y+11
 1380 02a8 BC85      		ldd r27,Y+12
 1381 02aa 0196      		adiw r24,1
 1382 02ac A11D      		adc r26,__zero_reg__
 1383 02ae B11D      		adc r27,__zero_reg__
 1384 02b0 8987      		std Y+9,r24
 1385 02b2 9A87      		std Y+10,r25
 1386 02b4 AB87      		std Y+11,r26
 1387 02b6 BC87      		std Y+12,r27
 1388               	.L9:
 306:src/test.c    ****       in_ptr++;
 1389               		.loc 1 306 0 is_stmt 1
 1390 02b8 8D89      		ldd r24,Y+21
 1391 02ba 9E89      		ldd r25,Y+22
 1392 02bc 0496      		adiw r24,4
 1393 02be 9E8B      		std Y+22,r25
 1394 02c0 8D8B      		std Y+21,r24
 1395               	.L8:
 282:src/test.c    ****   for(i = 0 ; i < in_len ; i++) {
 1396               		.loc 1 282 0
 1397 02c2 8981      		ldd r24,Y+1
 1398 02c4 9A81      		ldd r25,Y+2
 1399 02c6 AB81      		ldd r26,Y+3
 1400 02c8 BC81      		ldd r27,Y+4
 1401 02ca 0196      		adiw r24,1
 1402 02cc A11D      		adc r26,__zero_reg__
 1403 02ce B11D      		adc r27,__zero_reg__
 1404 02d0 8983      		std Y+1,r24
 1405 02d2 9A83      		std Y+2,r25
 1406 02d4 AB83      		std Y+3,r26
 1407 02d6 BC83      		std Y+4,r27
 1408               	.L4:
 282:src/test.c    ****   for(i = 0 ; i < in_len ; i++) {
 1409               		.loc 1 282 0 is_stmt 0 discriminator 1
 1410 02d8 2981      		ldd r18,Y+1
 1411 02da 3A81      		ldd r19,Y+2
 1412 02dc 4B81      		ldd r20,Y+3
 1413 02de 5C81      		ldd r21,Y+4
 1414 02e0 8BA1      		ldd r24,Y+35
 1415 02e2 9CA1      		ldd r25,Y+36
 1416 02e4 ADA1      		ldd r26,Y+37
 1417 02e6 BEA1      		ldd r27,Y+38
 1418 02e8 2817      		cp r18,r24
 1419 02ea 3907      		cpc r19,r25
 1420 02ec 4A07      		cpc r20,r26
 1421 02ee 5B07      		cpc r21,r27
 1422 02f0 04F4      		brge .+2
 1423 02f2 00C0      		rjmp .L10
 1424               	/* epilogue start */
 307:src/test.c    ****     }
 308:src/test.c    ****   }
 309:src/test.c    **** }
 1425               		.loc 1 309 0 is_stmt 1
 1426 02f4 E096      		adiw r28,48
 1427 02f6 0FB6      		in __tmp_reg__,__SREG__
 1428 02f8 F894      		cli
 1429 02fa DEBF      		out __SP_H__,r29
 1430 02fc 0FBE      		out __SREG__,__tmp_reg__
 1431 02fe CDBF      		out __SP_L__,r28
 1432 0300 DF91      		pop r29
 1433 0302 CF91      		pop r28
 1434 0304 1F91      		pop r17
 1435 0306 0F91      		pop r16
 1436 0308 FF90      		pop r15
 1437 030a EF90      		pop r14
 1438 030c DF90      		pop r13
 1439 030e CF90      		pop r12
 1440 0310 BF90      		pop r11
 1441 0312 AF90      		pop r10
 1442 0314 9F90      		pop r9
 1443 0316 8F90      		pop r8
 1444 0318 0895      		ret
 1445               	.LFE2:
 1637               	.Letext0:
DEFINED SYMBOLS
                            *ABS*:0000000000000000 test.c
     /tmp/cco4dXew.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/cco4dXew.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/cco4dXew.s:4      *ABS*:000000000000003f __SREG__
     /tmp/cco4dXew.s:5      *ABS*:000000000000003b __RAMPZ__
     /tmp/cco4dXew.s:6      *ABS*:0000000000000000 __tmp_reg__
     /tmp/cco4dXew.s:7      *ABS*:0000000000000001 __zero_reg__
     /tmp/cco4dXew.s:14     .rodata:0000000000000000 fir_int
                            *COM*:0000000000000370 output
     /tmp/cco4dXew.s:163    .rodata:0000000000000090 in_data
     /tmp/cco4dXew.s:971    .text:0000000000000000 main
     /tmp/cco4dXew.s:1055   .text:0000000000000070 fir_filter_int

UNDEFINED SYMBOLS
__mulsi3
__divmodsi4
__do_copy_data
__do_clear_bss
